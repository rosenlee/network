cscope 15 /media/sf_ddrive/progs/network/unpv13e -q 0000007129 0000894317
	@/media/sf_ddrive/progs/network/unpv13e/advio/daytimetcpcli.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
, 
≈íd
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr_°‹age
 
ss
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:á.out <hostname or IPaddress> <service orÖort#>");

14 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

16 
Àn
 = (
ss
);

17 
	`Gë≥î«me
(
sockfd
, (
SA
 *)&
ss
, &
Àn
);

18 
	`¥ötf
("c⁄√˘edÅÿ%s\n", 
	`Sock_¡›_ho°
((
SA
 *)&
ss
, 
Àn
));

21 i‡–(
n
 = 
	`Recv
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 
MSG_PEEK
)) == 0)

24 
	`Io˘l
(
sockfd
, 
FIONREAD
, &
≈íd
);

25 
	`¥ötf
("%d byã†‰om PEEK, %d byã†≥ndög\n", 
n
, 
≈íd
);

27 
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
);

28 
ªcvlöe
[
n
] = 0;

29 
	`Fputs
(
ªcvlöe
, 
°dout
);

31 
	`exô
(0);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/daytimeudpcli3.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
, 
nq
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
ßÀn
;

9 
sockaddr
 *
ß
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:á.out <hostname or IPaddress> <service orÖort#>");

14 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

16 
	`¥ötf
("£ndögÅÿ%s\n", 
	`Sock_¡›_ho°
(
ß
, 
ßÀn
));

18 
	`Sídto
(
sockfd
, "", 1, 0, 
ß
, 
ßÀn
);

20 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 
MSG_PEEK
, 
NULL
, NULL);

22 
	`Io˘l
(
sockfd
, 
FIONREAD
, &
nq
);

23 
	`¥ötf
("%d byã†‰om PEEK, %d byã†≥ndög\n", 
n
, 
nq
);

25 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

26 
ªcvlöe
[
n
] = 0;

27 
	`Fputs
(
ªcvlöe
, 
°dout
);

29 
	`exô
(0);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/daytimeudpcli4.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
, 
nq
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr_°‹age
 
ss
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:á.out <hostname or IPaddress> <service orÖort#>");

14 
sockfd
 = 
	`Udp_c⁄√˘
(
¨gv
[1],árgv[2]);

16 
Àn
 = (
ss
);

17 
	`Gë≥î«me
(
sockfd
, (
SA
 *)&
ss
, &
Àn
);

18 
	`¥ötf
("c⁄√˘edÅÿ%s\n", 
	`Sock_¡›_ho°
((
SA
 *)&
ss
, 
Àn
));

20 
	`Wrôe
(
sockfd
, "", 2);

22 
n
 = 
	`Recv
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 
MSG_PEEK
);

24 
	`Io˘l
(
sockfd
, 
FIONREAD
, &
nq
);

25 
	`¥ötf
("%d byã†‰om PEEK, %d byã†≥ndög\n", 
n
, 
nq
);

27 
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
);

28 
ªcvlöe
[
n
] = 0;

29 
	`Fputs
(
ªcvlöe
, 
°dout
);

31 
	`exô
(0);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

11 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

13 i‡(
	`RódabÀ_timeo
(
sockfd
, 5) == 0) {

14 
	`Ârötf
(
°dîr
, "socketÅimeout\n");

17 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

19 
ªcvlöe
[
n
] = 0;

20 
	`Fputs
(
ªcvlöe
, 
°dout
);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo1.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

11 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

13 i‡(
	`RódabÀ_timeo
(
sockfd
, 5) == 0) {

14 
	`Ârötf
(
°dîr
, "socketÅimeout\n");

16 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

17 
ªcvlöe
[
n
] = 0;

18 
	`Fputs
(
ªcvlöe
, 
°dout
);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo2.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

8 
timevÆ
 
tv
;

10 
tv
.
tv_£c
 = 5;

11 
tv
.
tv_u£c
 = 0;

12 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
, &
tv
, (tv));

14 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

16 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

18 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

19 i‡(
n
 < 0) {

20 i‡(
î∫o
 =
EWOULDBLOCK
) {

21 
	`Ârötf
(
°dîr
, "socketÅimeout\n");

24 
	`îr_sys
("recvfromÉrror");

27 
ªcvlöe
[
n
] = 0;

28 
	`Fputs
(
ªcvlöe
, 
°dout
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo3.c

1 
	~"u≈.h
"

3 
sig_Ærm
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

13 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

17 
	`Æ¨m
(5);

18 i‡–(
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL)) < 0) {

19 i‡(
î∫o
 =
EINTR
)

20 
	`Ârötf
(
°dîr
, "socketÅimeout\n");

22 
	`îr_sys
("recvfromÉrror");

24 
	`Æ¨m
(0);

25 
ªcvlöe
[
n
] = 0;

26 
	`Fputs
(
ªcvlöe
, 
°dout
);

29 
	}
}

32 
	$sig_Ærm
(
signo
)

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/dgechoaddr.c

1 
	~"u≈ifi.h
"

3 #unde‡
MAXLINE


4 
	#MAXLINE
 20

	)

7 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

9 
Êags
;

10 c⁄° 
⁄
 = 1;

11 
sockÀn_t
 
Àn
;

12 
ssize_t
 
n
;

13 
mesg
[
MAXLINE
], 
°r
[
INET6_ADDRSTRLEN
],

14 
i‚ame
[
IFNAMSIZ
];

15 
ö_addr
 
ö_zîo
;

16 
u≈_ö_pktöfo
 
pktöfo
;

18 #ifdef 
IP_RECVDSTADDR


19 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
, &
⁄
, (on)) < 0)

20 
	`îr_ªt
("setsockopt of IP_RECVDSTADDR");

22 #ifdef 
IP_RECVIF


23 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVIF
, &
⁄
, (on)) < 0)

24 
	`îr_ªt
("setsockopt of IP_RECVIF");

26 
	`bzîo
(&
ö_zîo
, (
ö_addr
));

29 
Àn
 = 
˛ûí
;

30 
Êags
 = 0;

31 
n
 = 
	`Recv‰om_Êags
(
sockfd
, 
mesg
, 
MAXLINE
, &
Êags
,

32 
p˛üddr
, &
Àn
, &
pktöfo
);

33 
	`¥ötf
("%d-byã d©agøm from %s", 
n
, 
	`Sock_¡›
(
p˛üddr
, 
Àn
));

34 i‡(
	`memcmp
(&
pktöfo
.
ùi_addr
, &
ö_zîo
, (in_zero)) != 0)

35 
	`¥ötf
(",Åÿ%s", 
	`I√t_¡›
(
AF_INET
, &
pktöfo
.
ùi_addr
,

36 
°r
, (str)));

37 i‡(
pktöfo
.
ùi_ifödex
 > 0)

38 
	`¥ötf
(",Ñecv i/f = %s",

39 
	`If_ödext⁄ame
(
pktöfo
.
ùi_ifödex
, 
i‚ame
));

40 #ifdef 
MSG_TRUNC


41 i‡(
Êags
 & 
MSG_TRUNC
Ë
	`¥ötf
(" (datagramÅruncated)");

43 #ifdef 
MSG_CTRUNC


44 i‡(
Êags
 & 
MSG_CTRUNC
Ë
	`¥ötf
(" (control infoÅruncated)");

46 #ifdef 
MSG_BCAST


47 i‡(
Êags
 & 
MSG_BCAST
Ë
	`¥ötf
(" (broadcast)");

49 #ifdef 
MSG_MCAST


50 i‡(
Êags
 & 
MSG_MCAST
Ë
	`¥ötf
(" (multicast)");

52 
	`¥ötf
("\n");

54 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
p˛üddr
, 
Àn
);

56 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/old/dgechoaddr.c

1 
	~"u≈.h
"

3 #unde‡
MAXLINE


4 
	#MAXLINE
 20

	)

7 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

9 
Êags
;

10 c⁄° 
⁄
 = 1;

11 
sockÀn_t
 
Àn
;

12 
ssize_t
 
n
;

13 
mesg
[
MAXLINE
], 
°r
[
INET6_ADDRSTRLEN
];

14 
ö_addr
 
d°addr
;

16 #ifdef 
IP_RECVDSTADDR


17 
	`Sësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
, &
⁄
, (on));

21 
Àn
 = 
˛ûí
;

22 
Êags
 = 0;

23 
n
 = 
	`Recv‰om_Êags
(
sockfd
, 
mesg
, 
MAXLINE
, &
Êags
,

24 
p˛üddr
, &
Àn
, &
d°addr
);

25 
	`¥ötf
("%d-byã d©agøm from %s", 
n
, 
	`Sock_¡›
(
p˛üddr
, 
Àn
));

26 i‡((
Êags
 & 
MSG_CTRUNC
) == 0)

27 
	`¥ötf
(",Åÿ%s", 
	`I√t_¡›
(
AF_INET
, &
d°addr
, 
°r
, (str)));

28 #ifdef 
MSG_TRUNC


29 i‡(
Êags
 & 
MSG_TRUNC
Ë
	`¥ötf
(" (datagramÅruncated)");

31 #ifdef 
MSG_BCAST


32 i‡(
Êags
 & 
MSG_BCAST
Ë
	`¥ötf
(" (broadcast)");

34 #ifdef 
MSG_MCAST


35 i‡(
Êags
 & 
MSG_MCAST
Ë
	`¥ötf
(" (multicast)");

37 
	`¥ötf
("\n");

39 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
p˛üddr
, 
˛ûí
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/old/recvfromflags.c

1 
	~"u≈.h
"

3 
ssize_t


4 
	$ªcv‰om_Êags
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
Êag•
,

5 
SA
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
, *
d°addΩ
)

7 
msghdr
 
msg
;

8 
iovec
 
iov
[1];

9 
ssize_t
 
n
;

11 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


12 
	#CONTROL_LEN
 ((
cmsghdr
Ë+ (
ö_addr
))

	)

13 
c⁄åﬁ
[
CONTROL_LEN
];

15 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ
;

16 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ
);

17 
msg
.
msg_Êags
 = 0;

19 
	`bzîo
(&
msg
, (msg));

22 
msg
.
msg_«me
 = 
ß
;

23 
msg
.
msg_«mñí
 = *
ßÀ≈å
;

24 
iov
[0].
iov_ba£
 = 
±r
;

25 
iov
[0].
iov_Àn
 = 
nbyãs
;

26 
msg
.
msg_iov
 = 
iov
;

27 
msg
.
msg_iovÀn
 = 1;

29 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, *
Êag•
)) < 0)

30 (
n
);

32 *
ßÀ≈å
 = 
msg
.
msg_«mñí
;

33 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


34 *
Êag•
 = 
msg
.
msg_Êags
;

44 #ifdef 
IP_RECVDSTADDR


45 i‡(
d°addΩ
 && 
msg
.
msg_c⁄åﬁÀn
 > 0 &&

46 (
msg
.
msg_Êags
 & 
MSG_CTRUNC
) == 0) {

47 
cmsghdr
 *
cm±r
 = 
	`CMSG_FIRSTHDR
(&
msg
);

49 i‡(
cm±r
->
cmsg_Àn
 !
CONTROL_LEN
)

50 
	`îr_quô
("c⁄åﬁÜígth = %d", 
cm±r
->
cmsg_Àn
);

51 i‡(
cm±r
->
cmsg_Àvñ
 !
IPPROTO_IP
)

52 
	`îr_quô
("controlÜevel != IPPROTO_IP");

53 i‡(
cm±r
->
cmsg_ty≥
 !
IP_RECVDSTADDR
)

54 
	`îr_quô
("controlÅype != IP_RECVDSTADDR");

55 
	`mem˝y
(
d°addΩ
, 
	`CMSG_DATA
(
cm±r
), (
ö_addr
));

58 *
Êag•
 |
MSG_CTRUNC
;

60 *
Êag•
 |
MSG_CTRUNC
;

63 (
n
);

64 
	}
}

66 
ssize_t


67 
	$Recv‰om_Êags
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
Êag•
,

68 
SA
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
, *
d°addΩ
)

70 
ssize_t
 
n
;

72 
n
 = 
	`ªcv‰om_Êags
(
fd
, 
±r
, 
nbyãs
, 
Êag•
, 
ß
, 
ßÀ≈å
, 
d°addΩ
);

73 i‡(
n
 < 0)

74 
	`îr_quô
("recvfrom_flagsÉrror");

76 (
n
);

77 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/old/test01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
Êag
;

7 
ssize_t
 
n
;

8 
buff
[
MAXLINE
];

9 c⁄° 
⁄
 = 1;

10 
sockÀn_t
 
addæí
, 
Àn
;

11 
sockaddr
 *
˛üddr
;

13 i‡(
¨gc
 == 2)

14 
sockfd
 = 
	`Udp_£rvî
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
sockfd
 = 
	`Udp_£rvî
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage:Åest01 <hostname> <service>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

22 #ifdef 
IP_RECVDSTADDR


23 
	`Sësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
, &
⁄
, (on));

25 
Àn
 = (
Êag
);

26 
	`Gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
, &
Êag
, &
Àn
);

27 
	`¥ötf
("IP_RECVDSTADDR o±i⁄ = %d, sizê%d\n", 
Êag
, 
Àn
);

29 
	`¥ötf
("IP_RECVDSTADDRÇot defined\n");

32 #ifdef 
IP_RECVIF


33 
	`Sësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVIF
, &
⁄
, (on));

35 
Àn
 = (
Êag
);

36 
	`Gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVIF
, &
Êag
, &
Àn
);

37 
	`¥ötf
("IP_RECVIF o±i⁄ = %d, sizê%d\n", 
Êag
, 
Àn
);

39 
	`¥ötf
("IP_RECVIFÇot defined\n");

43 
	#CONTROL_LEN
 ((
cmsghdr
Ë+ (
ö_addr
))

	)

44 
c⁄åﬁ
[
CONTROL_LEN
];

46 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ
;

47 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ
);

48 
msg
.
msg_Êags
 = 0;

50 
	`bzîo
(&
msg
, (msg));

53 
msg
.
msg_«me
 = 
ß
;

54 
msg
.
msg_«mñí
 = *
ßÀ≈å
;

55 
iov
[0].
iov_ba£
 = 
±r
;

56 
iov
[0].
iov_Àn
 = 
nbyãs
;

57 
msg
.
msg_iov
 = 
iov
;

58 
msg
.
msg_iovÀn
 = 1;

60 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, *
Êag•
)) < 0)

61 (
n
);

63 
Àn
 = 
addæí
;

64 
n
 = 
	`Recv‰om
(
sockfd
, 
buff
, 
MAXLINE
, 0, 
˛üddr
, &
Àn
);

65 
	`¥ötf
("d©agøm from %s\n", 
	`Sock_¡›
(
˛üddr
, 
Àn
));

67 
ticks
 = 
	`time
(
NULL
);

68 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

69 
	`Sídto
(
sockfd
, 
buff
, 
	`°æí
(buff), 0, 
˛üddr
, 
Àn
);

71 
	`exô
(0);

72 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/recvfromflags.c

2 
	~"u≈.h
"

3 
	~<sys/∑øm.h
>

5 
ssize_t


6 
	$ªcv‰om_Êags
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
Êag•
,

7 
SA
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
, 
u≈_ö_pktöfo
 *
pkç
)

9 
msghdr
 
msg
;

10 
iovec
 
iov
[1];

11 
ssize_t
 
n
;

13 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


14 
cmsghdr
 *
cm±r
;

16 
cmsghdr
 
cm
;

17 
c⁄åﬁ
[
	`CMSG_SPACE
((
ö_addr
)) +

18 
	`CMSG_SPACE
((
u≈_ö_pktöfo
))];

19 } 
c⁄åﬁ_un
;

21 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ_un
.
c⁄åﬁ
;

22 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ_un
.
c⁄åﬁ
);

23 
msg
.
msg_Êags
 = 0;

25 
	`bzîo
(&
msg
, (msg));

28 
msg
.
msg_«me
 = 
ß
;

29 
msg
.
msg_«mñí
 = *
ßÀ≈å
;

30 
iov
[0].
iov_ba£
 = 
±r
;

31 
iov
[0].
iov_Àn
 = 
nbyãs
;

32 
msg
.
msg_iov
 = 
iov
;

33 
msg
.
msg_iovÀn
 = 1;

35 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, *
Êag•
)) < 0)

36 (
n
);

38 *
ßÀ≈å
 = 
msg
.
msg_«mñí
;

39 i‡(
pkç
)

40 
	`bzîo
(
pkç
, (
u≈_ö_pktöfo
));

44 #i‚def 
HAVE_MSGHDR_MSG_CONTROL


45 *
Êag•
 = 0;

46 (
n
);

49 *
Êag•
 = 
msg
.
msg_Êags
;

50 i‡(
msg
.
msg_c⁄åﬁÀn
 < (
cmsghdr
) ||

51 (
msg
.
msg_Êags
 & 
MSG_CTRUNC
Ë|| 
pkç
 =
NULL
)

52 (
n
);

54 
cm±r
 = 
	`CMSG_FIRSTHDR
(&
msg
); cm±∏!
NULL
;

55 
cm±r
 = 
	`CMSG_NXTHDR
(&
msg
, cmptr)) {

57 #ifdef 
IP_RECVDSTADDR


58 i‡(
cm±r
->
cmsg_Àvñ
 =
IPPROTO_IP
 &&

59 
cm±r
->
cmsg_ty≥
 =
IP_RECVDSTADDR
) {

61 
	`mem˝y
(&
pkç
->
ùi_addr
, 
	`CMSG_DATA
(
cm±r
),

62 (
ö_addr
));

67 #ifdef 
IP_RECVIF


68 i‡(
cm±r
->
cmsg_Àvñ
 =
IPPROTO_IP
 &&

69 
cm±r
->
cmsg_ty≥
 =
IP_RECVIF
) {

70 
sockaddr_dl
 *
sdl
;

72 
sdl
 = (
sockaddr_dl
 *Ë
	`CMSG_DATA
(
cm±r
);

73 
pkç
->
ùi_ifödex
 = 
sdl
->
sdl_ödex
;

77 
	`îr_quô
("unknownáncillary data,Üen = %d,Üevel = %d,Åype = %d",

78 
cm±r
->
cmsg_Àn
, cm±r->
cmsg_Àvñ
, cm±r->
cmsg_ty≥
);

80 (
n
);

82 
	}
}

85 
ssize_t


86 
	$Recv‰om_Êags
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
Êag•
,

87 
SA
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
, 
u≈_ö_pktöfo
 *
pkç
)

89 
ssize_t
 
n
;

91 
n
 = 
	`ªcv‰om_Êags
(
fd
, 
±r
, 
nbyãs
, 
Êag•
, 
ß
, 
ßÀ≈å
, 
pkç
);

92 i‡(
n
 < 0)

93 
	`îr_quô
("recvfrom_flagsÉrror");

95 (
n
);

96 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/sig_chld_waitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0) {

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_kqueue04.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
kq
, 
i
, 
n
, 
√v
, 
°döeof
 = 0, 
isfûe
;

7 
buf
[
MAXLINE
];

8 
kevít
 
kev
[2];

9 
time•ec
 
ts
;

10 
°©
 
°
;

12 
isfûe
 = ((
	`f°©
(
	`fûío
(
Â
), &
°
) == 0) &&

13 (
°
.
°_mode
 & 
S_IFMT
Ë=
S_IFREG
);

15 
	`EV_SET
(&
kev
[0], 
	`fûío
(
Â
), 
EVFILT_READ
, 
EV_ADD
, 0, 0, 
NULL
);

16 
	`EV_SET
(&
kev
[1], 
sockfd
, 
EVFILT_READ
, 
EV_ADD
, 0, 0, 
NULL
);

18 
kq
 = 
	`Kqueue
();

19 
ts
.
tv_£c
 =Ås.
tv_n£c
 = 0;

20 
	`Kevít
(
kq
, 
kev
, 2, 
NULL
, 0, &
ts
);

23 
√v
 = 
	`Kevít
(
kq
, 
NULL
, 0, 
kev
, 2, NULL);

25 
i
 = 0; i < 
√v
; i++) {

26 i‡(
kev
[
i
].
idít
 =
sockfd
) {

27 i‡–(
n
 = 
	`Ród
(
sockfd
, 
buf
, 
MAXLINE
)) == 0) {

28 i‡(
°döeof
 == 1)

31 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

34 
	`Wrôe
(
	`fûío
(
°dout
), 
buf
, 
n
);

37 i‡(
kev
[
i
].
idít
 =
	`fûío
(
Â
)) {

38 
n
 = 
	`Ród
(
	`fûío
(
Â
), 
buf
, 
MAXLINE
);

39 i‡(
n
 > 0)

40 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

42 i‡(
n
 =0 || (
isfûe
 &&Ç =
kev
[
i
].
d©a
)) {

43 
°döeof
 = 1;

44 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

45 
kev
[
i
].
Êags
 = 
EV_DELETE
;

46 
	`Kevít
(
kq
, &
kev
[
i
], 1, 
NULL
, 0, &
ts
);

52 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_poll03.c

1 
	~"u≈.h
"

2 
	~<sys/devpﬁl.h
>

5 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

7 
°döeof
;

8 
buf
[
MAXLINE
];

9 
n
;

10 
wfd
;

11 
pﬁlfd
Öollfd[2];

12 
dvpﬁl
 
d›ﬁl
;

13 
i
;

14 
ªsu…
;

16 
wfd
 = 
	`O≥n
("/dev/pﬁl", 
O_RDWR
, 0);

18 
pﬁlfd
[0].
fd
 = 
	`fûío
(
Â
);

19 
pﬁlfd
[0].
evíts
 = 
POLLIN
;

20 
pﬁlfd
[0].
ªvíts
 = 0;

22 
pﬁlfd
[1].
fd
 = 
sockfd
;

23 
pﬁlfd
[1].
evíts
 = 
POLLIN
;

24 
pﬁlfd
[1].
ªvíts
 = 0;

26 
	`Wrôe
(
wfd
, 
pﬁlfd
, (pollfd) * 2);

28 
°döeof
 = 0;

31 
d›ﬁl
.
dp_timeout
 = -1;

32 
d›ﬁl
.
dp_nfds
 = 2;

33 
d›ﬁl
.
dp_fds
 = 
pﬁlfd
;

34 
ªsu…
 = 
	`Io˘l
(
wfd
, 
DP_POLL
, &
d›ﬁl
);

37 
i
 = 0; i < 
ªsu…
; i++) {

38 i‡(
d›ﬁl
.
dp_fds
[
i
].
fd
 =
sockfd
) {

40 i‡–(
n
 = 
	`Ród
(
sockfd
, 
buf
, 
MAXLINE
)) == 0) {

41 i‡(
°döeof
 == 1)

44 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

47 
	`Wrôe
(
	`fûío
(
°dout
), 
buf
, 
n
);

50 i‡–(
n
 = 
	`Ród
(
	`fûío
(
Â
), 
buf
, 
MAXLINE
)) == 0) {

51 
°döeof
 = 1;

52 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

56 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

60 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_select02.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
maxfdp1
, 
°döeof
 = 0;

7 
fd_£t
 
r£t
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

10 
	`FD_ZERO
(&
r£t
);

12 i‡(
°döeof
 == 0)

13 
	`FD_SET
(
	`fûío
(
Â
), &
r£t
);

14 
	`FD_SET
(
sockfd
, &
r£t
);

15 
maxfdp1
 = 
	`max
(
	`fûío
(
Â
), 
sockfd
) + 1;

16 
	`Sñe˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL);

18 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

19 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0) {

20 i‡(
°döeof
 == 1)

23 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

26 
	`Fputs
(
ªcvlöe
, 
°dout
);

29 i‡(
	`FD_ISSET
(
	`fûío
(
Â
), &
r£t
)) {

30 i‡(
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë=
NULL
) {

31 
°döeof
 = 1;

32 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

33 
	`FD_CLR
(
	`fûío
(
Â
), &
r£t
);

37 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/str_echo_stdio02.c

1 
	~"u≈.h
"

4 
	$°r_echo
(
sockfd
)

6 
löe
[
MAXLINE
];

7 
FILE
 *
Âö
, *
Âout
;

9 
Âö
 = 
	`Fd›í
(
sockfd
, "r");

10 
Âout
 = 
	`Fd›í
(
sockfd
, "w");

12 
	`Fgës
(
löe
, 
MAXLINE
, 
Âö
Ë!
NULL
)

13 
	`Fputs
(
löe
, 
Âout
);

14 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli01.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘_timeo
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr), 10);

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/tcpserv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpcli03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpserv03.c

2 
	~"u≈ifi.h
"

4 
mydg_echo
(, 
SA
 *, 
sockÀn_t
, SA *);

7 
	$maö
(
¨gc
, **
¨gv
)

9 
sockfd
;

10 c⁄° 
⁄
 = 1;

11 
pid_t
 
pid
;

12 
ifi_öfo
 *
ifi
, *
ifihód
;

13 
sockaddr_ö
 *
ß
, 
˛üddr
, 
wûdaddr
;

15 
ifihód
 = 
ifi
 = 
	`Gë_ifi_öfo
(
AF_INET
, 1);

16 
ifi
 !
NULL
; ifòifi->
ifi_√xt
) {

19 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

21 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

23 
ß
 = (
sockaddr_ö
 *Ë
ifi
->
ifi_addr
;

24 
ß
->
sö_Ámûy
 = 
AF_INET
;

25 
ß
->
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

26 
	`Böd
(
sockfd
, (
SA
 *Ë
ß
, (*sa));

27 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
((
SA
 *Ë
ß
, (*sa)));

29 i‡–(
pid
 = 
	`F‹k
()) == 0) {

30 
	`mydg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (˛üddr), (SA *Ë
ß
);

31 
	`exô
(0);

35 i‡(
ifi
->
ifi_Êags
 & 
IFF_BROADCAST
) {

37 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

38 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

40 
ß
 = (
sockaddr_ö
 *Ë
ifi
->
ifi_brdaddr
;

41 
ß
->
sö_Ámûy
 = 
AF_INET
;

42 
ß
->
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

43 i‡(
	`böd
(
sockfd
, (
SA
 *Ë
ß
, (*sa)) < 0) {

44 i‡(
î∫o
 =
EADDRINUSE
) {

45 
	`¥ötf
("EADDRINUSE: %s\n",

46 
	`Sock_¡›
((
SA
 *Ë
ß
, (*sa)));

47 
	`Clo£
(
sockfd
);

50 
	`îr_sys
("bindÉrror for %s",

51 
	`Sock_¡›
((
SA
 *Ë
ß
, (*sa)));

53 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
((
SA
 *Ë
ß
, (*sa)));

55 i‡–(
pid
 = 
	`F‹k
()) == 0) {

56 
	`mydg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr),

57 (
SA
 *Ë
ß
);

58 
	`exô
(0);

65 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

66 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

68 
	`bzîo
(&
wûdaddr
, (wildaddr));

69 
wûdaddr
.
sö_Ámûy
 = 
AF_INET
;

70 
wûdaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

71 
wûdaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

72 
	`Böd
(
sockfd
, (
SA
 *Ë&
wûdaddr
, (wildaddr));

73 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
((
SA
 *Ë&
wûdaddr
, (wildaddr)));

75 i‡–(
pid
 = 
	`F‹k
()) == 0) {

76 
	`mydg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (˛üddr), (SA *Ë
ß
);

77 
	`exô
(0);

79 
	`exô
(0);

80 
	}
}

85 
	$mydg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
, SA *
myaddr
)

87 
n
;

88 
mesg
[
MAXLINE
];

89 
sockÀn_t
 
Àn
;

92 
Àn
 = 
˛ûí
;

93 
n
 = 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
p˛üddr
, &
Àn
);

94 
	`¥ötf
("chûd %d, d©agøm from %s", 
	`gëpid
(),

95 
	`Sock_¡›
(
p˛üddr
, 
Àn
));

96 
	`¥ötf
(",Åÿ%s\n", 
	`Sock_¡›
(
myaddr
, 
˛ûí
));

98 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
p˛üddr
, 
Àn
);

100 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/advio/udpserv04.c

1 
	~"u≈ifi.h
"

3 
mydg_echo
(, 
SA
 *, 
sockÀn_t
);

6 
	$maö
(
¨gc
, **
¨gv
)

8 
sockfd
, 
Ámûy
, 
p‹t
;

9 c⁄° 
⁄
 = 1;

10 
pid_t
 
pid
;

11 
sockÀn_t
 
ßÀn
;

12 
sockaddr
 *
ß
, *
wûd
;

13 
ifi_öfo
 *
ifi
, *
ifihód
;

15 i‡(
¨gc
 == 2)

16 
sockfd
 = 
	`Udp_˛õ¡
(
NULL
, 
¨gv
[1], (**Ë&
ß
, &
ßÀn
);

17 i‡(
¨gc
 == 3)

18 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

20 
	`îr_quô
("usage: udpserv04 [ <host> ] <service orÖort>");

21 
Ámûy
 = 
ß
->
ß_Ámûy
;

22 
p‹t
 = 
	`sock_gë_p‹t
(
ß
, 
ßÀn
);

23 
	`Clo£
(
sockfd
);

25 
ifihód
 = 
ifi
 = 
	`Gë_ifi_öfo
(
Ámûy
, 1);

26 
ifi
 !
NULL
; ifòifi->
ifi_√xt
) {

29 
sockfd
 = 
	`Sockë
(
Ámûy
, 
SOCK_DGRAM
, 0);

30 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

32 
	`sock_£t_p‹t
(
ifi
->
ifi_addr
, 
ßÀn
, 
p‹t
);

33 
	`Böd
(
sockfd
, 
ifi
->
ifi_addr
, 
ßÀn
);

34 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
(
ifi
->
ifi_addr
, 
ßÀn
));

36 i‡–(
pid
 = 
	`F‹k
()) == 0) {

37 
	`mydg_echo
(
sockfd
, 
ifi
->
ifi_addr
, 
ßÀn
);

38 
	`exô
(0);

41 i‡(
ifi
->
ifi_Êags
 & 
IFF_BROADCAST
) {

43 
sockfd
 = 
	`Sockë
(
Ámûy
, 
SOCK_DGRAM
, 0);

44 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

46 
	`sock_£t_p‹t
(
ifi
->
ifi_brdaddr
, 
ßÀn
, 
p‹t
);

47 i‡(
	`böd
(
sockfd
, 
ifi
->
ifi_brdaddr
, 
ßÀn
) < 0) {

48 i‡(
î∫o
 =
EADDRINUSE
) {

49 
	`¥ötf
("EADDRINUSE: %s\n",

50 
	`Sock_¡›
(
ifi
->
ifi_brdaddr
, 
ßÀn
));

51 
	`Clo£
(
sockfd
);

54 
	`îr_sys
("bindÉrror for %s",

55 
	`Sock_¡›
(
ifi
->
ifi_brdaddr
, 
ßÀn
));

57 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
(
ifi
->
ifi_brdaddr
, 
ßÀn
));

59 i‡–(
pid
 = 
	`F‹k
()) == 0) {

60 
	`mydg_echo
(
sockfd
, 
ifi
->
ifi_brdaddr
, 
ßÀn
);

61 
	`exô
(0);

67 
sockfd
 = 
	`Sockë
(
Ámûy
, 
SOCK_DGRAM
, 0);

68 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

70 
wûd
 = 
	`MÆloc
(
ßÀn
);

71 
	`mem˝y
(
wûd
, 
ß
, 
ßÀn
);

72 
	`sock_£t_wûd
(
wûd
, 
ßÀn
);

74 
	`Böd
(
sockfd
, 
wûd
, 
ßÀn
);

75 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
(
wûd
, 
ßÀn
));

77 i‡–(
pid
 = 
	`F‹k
()) == 0) {

78 
	`mydg_echo
(
sockfd
, 
wûd
, 
ßÀn
);

79 
	`exô
(0);

81 
	`exô
(0);

82 
	}
}

85 
	$mydg_echo
(
sockfd
, 
SA
 *
myaddr
, 
sockÀn_t
 
ßÀn
)

87 
n
;

88 
mesg
[
MAXLINE
];

89 
sockÀn_t
 
Àn
;

90 
sockaddr
 *
˛i
;

92 
˛i
 = 
	`MÆloc
(
ßÀn
);

95 
Àn
 = 
ßÀn
;

96 
n
 = 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
˛i
, &
Àn
);

97 
	`¥ötf
("child %d, datagram from %s",

98 
	`gëpid
(), 
	`Sock_¡›
(
˛i
, 
Àn
));

99 
	`¥ötf
(",Åÿ%s\n", 
	`Sock_¡›
(
myaddr
, 
ßÀn
));

101 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
˛i
, 
Àn
);

103 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast1.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 c⁄° 
⁄
 = 1;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
sockÀn_t
 
Àn
;

12 
sockaddr
 *
¥ïly_addr
;

14 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

16 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

18 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

20 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

22 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

24 
	`Æ¨m
(5);

26 
Àn
 = 
£rvÀn
;

27 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

28 i‡(
n
 < 0) {

29 i‡(
î∫o
 =
EINTR
)

32 
	`îr_sys
("recvfromÉrror");

34 
ªcvlöe
[
n
] = 0;

35 
	`¥ötf
("from %s: %s",

36 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

40 
	`‰ì
(
¥ïly_addr
);

41 
	}
}

44 
	$ªcv‰om_Æ¨m
(
signo
)

47 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast2.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 c⁄° 
⁄
 = 1;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
sockÀn_t
 
Àn
;

12 
sockaddr
 *
¥ïly_addr
;

14 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

16 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

18 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

20 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

22 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

24 
	`Æ¨m
(1);

26 
Àn
 = 
£rvÀn
;

27 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

28 i‡(
n
 == -1) {

29 i‡(
î∫o
 =
EINTR
)

32 
	`îr_sys
("recvfromÉrror");

34 
ªcvlöe
[
n
] = 0;

35 
	`¶ìp
(1);

36 
	`¥ötf
("from %s: %s",

37 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

41 
	`‰ì
(
¥ïly_addr
);

42 
	}
}

45 
	$ªcv‰om_Æ¨m
(
signo
)

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast3.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 c⁄° 
⁄
 = 1;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
sig£t_t
 
sig£t_Ærm
;

12 
sockÀn_t
 
Àn
;

13 
sockaddr
 *
¥ïly_addr
;

15 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

17 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

19 
	`Sigem±y£t
(&
sig£t_Ærm
);

20 
	`Sigadd£t
(&
sig£t_Ærm
, 
SIGALRM
);

22 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

24 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

26 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

28 
	`Æ¨m
(5);

30 
Àn
 = 
£rvÀn
;

31 
	`Sig¥ocmask
(
SIG_UNBLOCK
, &
sig£t_Ærm
, 
NULL
);

32 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

33 
	`Sig¥ocmask
(
SIG_BLOCK
, &
sig£t_Ærm
, 
NULL
);

34 i‡(
n
 < 0) {

35 i‡(
î∫o
 =
EINTR
)

38 
	`îr_sys
("recvfromÉrror");

40 
ªcvlöe
[
n
] = 0;

41 
	`¥ötf
("from %s: %s",

42 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

46 
	`‰ì
(
¥ïly_addr
);

47 
	}
}

50 
	$ªcv‰om_Æ¨m
(
signo
)

53 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast4.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 c⁄° 
⁄
 = 1;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
fd_£t
 
r£t
;

12 
sig£t_t
 
sig£t_Ærm
, 
sig£t_em±y
;

13 
sockÀn_t
 
Àn
;

14 
sockaddr
 *
¥ïly_addr
;

16 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

18 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

20 
	`FD_ZERO
(&
r£t
);

22 
	`Sigem±y£t
(&
sig£t_em±y
);

23 
	`Sigem±y£t
(&
sig£t_Ærm
);

24 
	`Sigadd£t
(&
sig£t_Ærm
, 
SIGALRM
);

26 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

28 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

29 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

31 
	`Sig¥ocmask
(
SIG_BLOCK
, &
sig£t_Ærm
, 
NULL
);

32 
	`Æ¨m
(5);

34 
	`FD_SET
(
sockfd
, &
r£t
);

35 
n
 = 
	`p£À˘
(
sockfd
+1, &
r£t
, 
NULL
, NULL, NULL, &
sig£t_em±y
);

36 i‡(
n
 < 0) {

37 i‡(
î∫o
 =
EINTR
)

40 
	`îr_sys
("pselectÉrror");

41 } i‡(
n
 != 1)

42 
	`îr_sys
("p£À˘Éº‹:Ñëu∫ed %d", 
n
);

44 
Àn
 = 
£rvÀn
;

45 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

46 
ªcvlöe
[
n
] = 0;

47 
	`¥ötf
("from %s: %s",

48 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

51 
	`‰ì
(
¥ïly_addr
);

52 
	}
}

55 
	$ªcv‰om_Æ¨m
(
signo
)

58 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast5.c

1 
	~"u≈.h
"

2 
	~<£tjmp.h
>

4 
ªcv‰om_Æ¨m
();

5 
sigjmp_buf
 
	gjmpbuf
;

8 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

10 
n
;

11 c⁄° 
⁄
 = 1;

12 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

13 
sockÀn_t
 
Àn
;

14 
sockaddr
 *
¥ïly_addr
;

16 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

18 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

20 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

22 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

24 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

26 
	`Æ¨m
(5);

28 i‡(
	`sig£tjmp
(
jmpbuf
, 1) != 0)

30 
Àn
 = 
£rvÀn
;

31 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

32 
ªcvlöe
[
n
] = 0;

33 
	`¥ötf
("from %s: %s",

34 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

37 
	`‰ì
(
¥ïly_addr
);

38 
	}
}

41 
	$ªcv‰om_Æ¨m
(
signo
)

43 
	`sigl⁄gjmp
(
jmpbuf
, 1);

44 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast6.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

4 
	gpùefd
[2];

7 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

9 
n
, 
maxfdp1
;

10 c⁄° 
⁄
 = 1;

11 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

12 
fd_£t
 
r£t
;

13 
sockÀn_t
 
Àn
;

14 
sockaddr
 *
¥ïly_addr
;

16 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

18 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
, &
⁄
, (on));

20 
	`Pùe
(
pùefd
);

21 
maxfdp1
 = 
	`max
(
sockfd
, 
pùefd
[0]) + 1;

23 
	`FD_ZERO
(&
r£t
);

25 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

27 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

28 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

30 
	`Æ¨m
(5);

32 
	`FD_SET
(
sockfd
, &
r£t
);

33 
	`FD_SET
(
pùefd
[0], &
r£t
);

34 i‡–(
n
 = 
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL)) < 0) {

35 i‡(
î∫o
 =
EINTR
)

38 
	`îr_sys
("selectÉrror");

41 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

42 
Àn
 = 
£rvÀn
;

43 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

44 
ªcvlöe
[
n
] = 0;

45 
	`¥ötf
("from %s: %s",

46 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
Àn
), 
ªcvlöe
);

49 i‡(
	`FD_ISSET
(
pùefd
[0], &
r£t
)) {

50 
	`Ród
(
pùefd
[0], &
n
, 1);

55 
	`‰ì
(
¥ïly_addr
);

56 
	}
}

59 
	$ªcv‰om_Æ¨m
(
signo
)

61 
	`Wrôe
(
pùefd
[1], "", 1);

63 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli01 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli02 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli03 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli04 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli05.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli05 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli02 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/backlog.c

1 
	~"u≈.h
"

3 
	#PORT
 9999

	)

4 
	#ADDR
 "127.0.0.1"

	)

5 
	#MAXBACKLOG
 100

	)

8 
sockaddr_ö
 
	g£rv
;

9 
pid_t
 
	gpid
;

11 
	gpùefd
[2];

12 
	#pfd
 
pùefd
[1]

	)

13 
	#cfd
 
pùefd
[0]

	)

16 
do_∑ª¡
();

17 
do_chûd
();

20 
	$maö
(
¨gc
, **
¨gv
)

22 i‡(
¨gc
 != 1)

23 
	`îr_quô
("usage: backlog");

25 
	`Sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
pùefd
);

27 
	`bzîo
(&
£rv
, (serv));

28 
£rv
.
sö_Ámûy
 = 
AF_INET
;

29 
£rv
.
sö_p‹t
 = 
	`ht⁄s
(
PORT
);

30 
	`I√t_±⁄
(
AF_INET
, 
ADDR
, &
£rv
.
sö_addr
);

32 i‡–(
pid
 = 
	`F‹k
()) == 0)

33 
	`do_chûd
();

35 
	`do_∑ª¡
();

37 
	`exô
(0);

38 
	}
}

41 
	$∑ª¡_Ærm
(
signo
)

44 
	}
}

47 
	$do_∑ª¡
()

49 
backlog
, 
j
, 
k
, 
junk
, 
fd
[
MAXBACKLOG
 + 1];

51 
	`Clo£
(
cfd
);

52 
	`Sig«l
(
SIGALRM
, 
∑ª¡_Ærm
);

54 
backlog
 = 0; backlog <= 14; backlog++) {

55 
	`¥ötf
("backlog = %d: ", 
backlog
);

56 
	`Wrôe
(
pfd
, &
backlog
, ());

57 
	`Ród
(
pfd
, &
junk
, ());

59 
j
 = 1; j <
MAXBACKLOG
; j++) {

60 
fd
[
j
] = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

61 
	`Æ¨m
(2);

62 i‡(
	`c⁄√˘
(
fd
[
j
], (
SA
 * ) &
£rv
, (serv)) < 0) {

63 i‡(
î∫o
 !
EINTR
)

64 
	`îr_sys
("c⁄√˘Éº‹, j = %d", 
j
);

65 
	`¥ötf
("timeout, %d c⁄√˘i⁄†com∂ëed\n", 
j
-1);

66 
k
 = 1; k <
j
; k++)

67 
	`Clo£
(
fd
[
k
]);

70 
	`Æ¨m
(0);

72 i‡(
j
 > 
MAXBACKLOG
)

73 
	`¥ötf
("%d c⁄√˘i⁄s?\n", 
MAXBACKLOG
);

75 
backlog
 = -1;

76 
	`Wrôe
(
pfd
, &
backlog
, ());

77 
	}
}

80 
	$do_chûd
()

82 
li°ífd
, 
backlog
, 
junk
;

83 c⁄° 
⁄
 = 1;

85 
	`Clo£
(
pfd
);

87 
	`Ród
(
cfd
, &
backlog
, ());

88 
backlog
 >= 0) {

89 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

90 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

91 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rv
, (serv));

92 
	`Li°í
(
li°ífd
, 
backlog
);

94 
	`Wrôe
(
cfd
, &
junk
, ());

96 
	`Ród
(
cfd
, &
backlog
, ());

97 
	`Clo£
(
li°ífd
);

99 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/qlen.c

1 
	~"u≈xti.h
"

3 
	#PORT
 9999

	)

4 
	#ADDR
 "127.0.0.1"

	)

5 
	#MAXBACKLOG
 100

	)

8 
sockaddr_ö
 
	g£rv
;

9 
pid_t
 
	gpid
;

11 
	gpùefd
[2];

12 
	#pfd
 
pùefd
[1]

	)

13 
	#cfd
 
pùefd
[0]

	)

16 
do_∑ª¡
();

17 
do_chûd
();

20 
	$maö
(
¨gc
, **
¨gv
)

22 i‡(
¨gc
 != 1)

23 
	`îr_quô
("usage: qlen");

25 
	`Sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
pùefd
);

27 
	`bzîo
(&
£rv
, (serv));

28 
£rv
.
sö_Ámûy
 = 
AF_INET
;

29 
£rv
.
sö_p‹t
 = 
	`ht⁄s
(
PORT
);

30 
	`I√t_±⁄
(
AF_INET
, 
ADDR
, &
£rv
.
sö_addr
);

32 i‡–(
pid
 = 
	`F‹k
()) == 0)

33 
	`do_chûd
();

35 
	`do_∑ª¡
();

37 
	`exô
(0);

38 
	}
}

41 
	$∑ª¡_Ærm
(
signo
)

44 
	}
}

48 
	$do_∑ª¡
()

50 
qÀn
, 
j
, 
k
, 
junk
, 
fd
[
MAXBACKLOG
 + 1];

51 
t_ˇŒ
 
tˇŒ
;

53 
	`Clo£
(
cfd
);

54 
	`Sig«l
(
SIGALRM
, 
∑ª¡_Ærm
);

56 
qÀn
 = 0; qlen <= 14; qlen++) {

57 
	`¥ötf
("qÀ¿%d: ", 
qÀn
);

58 
	`Wrôe
(
pfd
, &
qÀn
, ());

59 
	`Ród
(
pfd
, &
junk
, ());

61 
j
 = 0; j <
MAXBACKLOG
; j++) {

62 
fd
[
j
] = 
	`T_›í
(
XTI_TCP
, 
O_RDWR
, 
NULL
);

63 
	`T_böd
(
fd
[
j
], 
NULL
, NULL);

65 
tˇŒ
.
addr
.
maxÀn
 = (
£rv
);

66 
tˇŒ
.
addr
.
Àn
 = (
£rv
);

67 
tˇŒ
.
addr
.
buf
 = &
£rv
;

68 
tˇŒ
.
›t
.
Àn
 = 0;

69 
tˇŒ
.
ud©a
.
Àn
 = 0;

71 
	`Æ¨m
(2);

72 i‡(
	`t_c⁄√˘
(
fd
[
j
], &
tˇŒ
, 
NULL
) < 0) {

73 i‡(
î∫o
 !
EINTR
)

74 
	`îr_xti
("t_c⁄√˘Éº‹, j = %d", 
j
);

75 
	`¥ötf
("timeout, %d c⁄√˘i⁄†com∂ëed\n", 
j
-1);

76 
k
 = 1; k < 
j
; k++)

77 
	`T_˛o£
(
fd
[
k
]);

80 
	`Æ¨m
(0);

82 i‡(
j
 > 
MAXBACKLOG
)

83 
	`¥ötf
("%d c⁄√˘i⁄s?\n", 
MAXBACKLOG
);

85 
qÀn
 = -1;

86 
	`Wrôe
(
pfd
, &
qÀn
, ());

87 
	}
}

90 
	$do_chûd
()

92 
li°ífd
, 
qÀn
, 
junk
;

93 
t_böd
 
tböd
, 
tbödªt
;

95 
	`Clo£
(
pùefd
[1]);

97 
	`Ród
(
cfd
, &
qÀn
, ());

98 
qÀn
 >= 0) {

99 
li°ífd
 = 
	`T_›í
(
XTI_TCP
, 
O_RDWR
, 
NULL
);

101 
tböd
.
addr
.
maxÀn
 = (
£rv
);

102 
tböd
.
addr
.
Àn
 = (
£rv
);

103 
tböd
.
addr
.
buf
 = &
£rv
;

104 
tböd
.
qÀn
 = qlen;

106 
tbödªt
.
addr
.
maxÀn
 = 0;

107 
tbödªt
.
addr
.
Àn
 = 0;

109 
	`T_böd
(
li°ífd
, &
tböd
, &
tbödªt
);

110 
	`¥ötf
("ªtu∫ed qÀ¿%d, ", 
tbödªt
.
qÀn
);

111 
	`fÊush
(
°dout
);

113 
	`Wrôe
(
cfd
, &
junk
, ());

115 
	`Ród
(
cfd
, &
qÀn
, ());

116 
	`T_˛o£
(
li°ífd
);

118 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test01.c

1 
	~"u≈xti.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
tfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åest01 <hostname/IPaddress> <service/port#>");

11 
tfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`t_¢d
(
tfd
, "", 1, 
T_EXPEDITED
);

15 
	`exô
(0);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
fd
;

7 
fd_£t
 
ex£t
;

9 i‡(
¨gc
 != 3)

10 
	`îr_quô
("usage:Åest01 <hostname/IPaddress> <service/port#>");

12 
fd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

14 
	`FD_ZERO
(&
ex£t
);

15 
	`FD_SET
(
fd
, &
ex£t
);

16 
	`£À˘
(
fd
+1, 
NULL
, NULL, &
ex£t
, NULL);

18 
	`exô
(0);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test03.c

1 
	~"u≈xti.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
, 
Êags
;

7 
buff
[
MAXLINE
];

8 
pﬁlfd
 
fds
[1];

10 i‡(
¨gc
 == 2)

11 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

12 i‡(
¨gc
 == 3)

13 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

15 
	`îr_quô
("usage: daytimetcpsrv01 [ <host> ] <service orÖort>");

17 
c⁄nfd
 = 
	`Xti_ac˚±
(
li°ífd
, 
NULL
, 0);

19 
fds
[0].
fd
 = 
c⁄nfd
;

20 
fds
[0].
evíts
 = 
POLLIN
 | 
POLLRDNORM
 | 
POLLRDBAND
 | 
POLLPRI
;

22 
n
 = 
	`pﬁl
(
fds
, 1, 
INFTIM
);

23 
	`¥ötf
("pﬁ»ªtu∫ed %d,Ñevít†0x%x\n", 
n
, 
fds
[0].
ªvíts
);

25 
n
 = 
	`T_rcv
(
c⁄nfd
, 
buff
, (buff), &
Êags
);

26 
	`¥ötf
("ª˚ived %d byãs, fœg†%d\n", 
n
, 
Êags
);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test04.c

1 
	~"u≈.h
"

4 
	$sig_Ærm
(
signo
)

6 
	}
}

9 
	$maö
(
¨gc
, **
¨gv
)

11 
sockfd
, 
n
;

12 
sockaddr_ö
 
£rvaddr
;

13 
ôimîvÆ
 
vÆ
;

14 
fd_£t
 
r£t
, 
w£t
;

16 i‡(
¨gc
 != 2)

17 
	`îr_quô
("usage:á.out <IPaddress>");

19 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

20 
	`îr_sys
("socketÉrror");

22 
	`bzîo
(&
£rvaddr
, (servaddr));

23 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

24 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

25 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

28 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

29 
vÆ
.
ô_öãrvÆ
.
tv_£c
 = 0;

30 
vÆ
.
ô_öãrvÆ
.
tv_u£c
 = 0;

31 
vÆ
.
ô_vÆue
.
tv_£c
 = 0;

32 
vÆ
.
ô_vÆue
.
tv_u£c
 = 50000;

33 i‡(
	`£tôimî
(
ITIMER_REAL
, &
vÆ
, 
NULL
) == -1)

34 
	`îr_sys
("setitimerÉrror");

36 
agaö
:

37 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0) {

38 i‡(
î∫o
 =
EINTR
) {

39 #ifdef 
nŸdef


40 
agaö
;

42 #ifdef 
nŸdef


43 
	`¥ötf
("interrupted system call\n");

44 
	`exô
(0);

47 
	`îr_sys
("connectÉrror");

50 
	`FD_ZERO
(&
r£t
);

51 
	`FD_SET
(
sockfd
, &
r£t
);

52 
w£t
 = 
r£t
;

53 
	`¶ìp
(4);

54 
n
 = 
	`Sñe˘
(
sockfd
+1, &
r£t
, &
w£t
, 
NULL
, NULL);

55 
	`¥ötf
("£À˘Ñëu∫ed %d\n", 
n
);

56 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
))

57 
	`¥ötf
("socket isÑeadable\n");

58 i‡(
	`FD_ISSET
(
sockfd
, &
w£t
))

59 
	`¥ötf
("socket is writable\n");

61 
	`°r_˛i
(
°dö
, 
sockfd
);

63 
	`exô
(0);

64 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test05.c

1 
	~"u≈xti.h
"

3 
	gli°ífd
, 
	gc⁄nfd
;

6 
	$sig_pﬁl
(
signo
)

8 
n
, 
Êags
;

9 
buff
[
MAXLINE
];

11 
	`¥ötf
("SIGPOLL,Évíà%d\n", 
	`t_look
(
c⁄nfd
));

12 
n
 = 
	`T_rcv
(
c⁄nfd
, 
buff
, (buff), &
Êags
);

13 
	`¥ötf
("ª˚ived %d byãs, fœg†%d\n", 
n
, 
Êags
);

14 
	}
}

17 
	$maö
(
¨gc
, **
¨gv
)

19 i‡(
¨gc
 == 2)

20 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

21 i‡(
¨gc
 == 3)

22 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

24 
	`îr_quô
("usage:Åest05 [ <host> ] <service orÖort>");

26 
c⁄nfd
 = 
	`Xti_ac˚±
(
li°ífd
, 
NULL
, 0);

28 
	`Sig«l
(
SIGPOLL
, 
sig_pﬁl
);

29 
	`Io˘l
(
c⁄nfd
, 
I_SETSIG
, 
S_RDNORM
);

32 
	`∑u£
();

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/test06.c

1 
	~"u≈xti.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
fd
;

7 
t_ˇŒ
 *
tˇŒ
;

9 
fd
 = 
	`T_›í
(
XTI_TCP
, 
O_RDWR
, 
NULL
);

11 
tˇŒ
 = 
	`T_Æloc
(
fd
, 
T_CALL
, 
T_ALL
);

12 
	`¥ötf
("firstÅ_alloc OK\n");

14 
tˇŒ
 = 
	`T_Æloc
(
fd
, 
T_CALL
, 
T_ADDR
 | 
T_OPT
 | 
T_UDATA
);

15 
	`¥ötf
("secondÅ_alloc OK\n");

17 
	`exô
(0);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/debug/unpxti.h

2 #i‚def 
__u≈_xti_h


3 
	#__u≈_xti_h


	)

5 
	~"u≈.h
"

7 
	~<xti.h
>

8 #ifdef 
HAVE_XTI_INET_H


9 
	~<xti_öë.h
>

11 #ifdef 
HAVE_NETCONFIG_H


12 
	~<√tc⁄fig.h
>

14 #ifdef 
HAVE_NETDIR_H


15 
	~<√tdú.h
>

18 #ifdef 
INFTIM_UNPH


19 #unde‡
INFTIM


22 
	~<°r›ts.h
>

27 #i‚def 
T_INET_TCP


28 
	#T_INET_TCP
 
INET_TCP


	)

32 #i‚def 
T_INET_UDP


33 
	#T_INET_UDP
 
INET_UDP


	)

35 #i‚def 
T_INET_IP


36 
	#T_INET_IP
 
INET_IP


	)

38 #i‚def 
T_TCP_NODELAY


39 
	#T_TCP_NODELAY
 
TCP_NODELAY


	)

41 #i‚def 
T_TCP_MAXSEG


42 
	#T_TCP_MAXSEG
 
TCP_MAXSEG


	)

44 #i‚def 
T_TCP_KEEPALIVE


45 
	#T_TCP_KEEPALIVE
 
TCP_KEEPALIVE


	)

47 #i‚def 
T_UDP_CHECKSUM


48 
	#T_UDP_CHECKSUM
 
UDP_CHECKSUM


	)

50 #i‚def 
T_IP_OPTIONS


51 
	#T_IP_OPTIONS
 
IP_OPTIONS


	)

53 #i‚def 
T_IP_TOS


54 
	#T_IP_TOS
 
IP_TOS


	)

56 #i‚def 
T_IP_TTL


57 
	#T_IP_TTL
 
IP_TTL


	)

59 #i‚def 
T_IP_REUSEADDR


60 
	#T_IP_REUSEADDR
 
IP_REUSEADDR


	)

62 #i‚def 
T_IP_DONTROUTE


63 
	#T_IP_DONTROUTE
 
IP_DONTROUTE


	)

66 #i‚def 
T_IP_BROADCAST


67 
	#T_IP_BROADCAST
 
IP_BROADCAST


	)

72 #ifdef 
HAVE_DEV_TCP


73 
	#XTI_TCP
 "/dev/t˝"

	)

74 
	#XTI_UDP
 "/dev/udp"

	)

76 #ifdef 
HAVE_DEV_XTI_TCP


77 
	#XTI_TCP
 "/dev/xti/t˝"

	)

78 
	#XTI_UDP
 "/dev/xti/udp"

	)

80 #ifdef 
HAVE_DEV_STREAMS_XTISO_TCP


81 
	#XTI_TCP
 "/dev/°ªams/xtiso/t˝+"

	)

82 
	#XTI_UDP
 "/dev/°ªams/xtiso/udp+"

	)

87 
xti_£rv_dev
[];

90 
îr_xti
(c⁄° *
fmt
, ...);

91 
îr_xti_ªt
(c⁄° *
fmt
, ...);

93 
Gëmsg
(, 
°rbuf
 *, strbuf *, *);

94 
Putmsg
(, c⁄° 
°rbuf
 *, const strbuf *, );

96 #ifdef 
HAVE_NETCONFIG_H


97 *
Së√tc⁄fig
();

98 *
Së√ç©h
();

101 *
T_Æloc
(, , );

102 
T_ac˚±
(, , 
t_ˇŒ
 *);

103 
T_böd
(, c⁄° 
t_böd
 *, t_bind *);

104 
T_˛o£
();

105 
T_c⁄√˘
(, c⁄° 
t_ˇŒ
 *, t_call *);

106 
T_‰ì
(*, );

107 
T_gë¥Ÿaddr
(, 
t_böd
 *, t_bind *);

108 
T_gë°©e
();

109 
T_li°í
(, 
t_ˇŒ
 *);

110 
T_look
();

111 
T_›í
(c⁄° *, , 
t_öfo
 *);

112 
T_›tmgmt
(, c⁄° 
t_›tmgmt
 *, t_optmgmt *);

113 
T_rcv
(, *, , *);

114 
T_rcvdis
(, 
t_disc⁄
 *);

115 
T_rcvªl
();

116 
T_rcvud©a
(, 
t_unôd©a
 *, *);

117 
T_rcvudîr
(, 
t_udîr
 *);

118 
T_¢d
(, *, , );

119 
T_¢dªl
();

120 
T_¢dud©a
(, 
t_unôd©a
 *);

122 
xti_ac˚±
(, 
√tbuf
 *, );

123 
xti_gë›t
(, , , *, 
sockÀn_t
 *);

124 *
xti_Êags_°r
();

125 *
xti_éook_°r
();

126 *
xti_¡›
(c⁄° 
√tbuf
 *);

127 *
xti_¡›_ho°
(c⁄° 
√tbuf
 *);

128 
xti_rdwr
();

129 
xti_£t›t
(, , , *, 
sockÀn_t
);

131 
Xti_ac˚±
(, 
√tbuf
 *, );

132 
Xti_gë›t
(, , , *, 
sockÀn_t
 *);

133 *
Xti_Êags_°r
();

134 *
Xti_éook_°r
();

135 *
Xti_¡›
(c⁄° 
√tbuf
 *);

136 *
Xti_¡›_ho°
(c⁄° 
√tbuf
 *);

137 
Xti_rdwr
();

138 
Xti_£t›t
(, , , *, 
sockÀn_t
);

140 *
xti_°r_Ànd
(
t_›thdr
 *);

141 *
xti_°r_usˇœrd
(
t_›thdr
 *);

142 *
xti_°r_uch¨d
(
t_›thdr
 *);

143 *
xti_°r_uch¨x
(
t_›thdr
 *);

144 *
xti_°r_yn
(
t_usˇœr_t
);

145 *
xti_°r_syng
(
t_sˇœr_t
);

146 *
xti_°r_uiyn
(
t_›thdr
 *);

147 *
xti_°r_usyn
(
t_›thdr
 *);

148 *
xti_°r_lögî
(
t_›thdr
 *);

149 *
xti_°r_k∑live
(
t_›thdr
 *);

150 *
xti_°r_Êags
(
t_sˇœr_t
);

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/dgcli01.c

2 
	~"u≈icmpd.h
"

5 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

7 
icmpfd
, 
maxfdp1
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
fd_£t
 
r£t
;

10 
ssize_t
 
n
;

11 
timevÆ
 
tv
;

12 
icmpd_îr
 icmpd_err;

13 
sockaddr_un
 
sun
;

15 
	`Sock_böd_wûd
(
sockfd
, 
p£rvaddr
->
ß_Ámûy
);

17 
icmpfd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_STREAM
, 0);

18 
sun
.
sun_Ámûy
 = 
AF_LOCAL
;

19 
	`°r˝y
(
sun
.
sun_∑th
, 
ICMPD_PATH
);

20 
	`C⁄√˘
(
icmpfd
, (
SA
 *)&
sun
, (sun));

21 
	`Wrôe_fd
(
icmpfd
, "1", 1, 
sockfd
);

22 
n
 = 
	`Ród
(
icmpfd
, 
ªcvlöe
, 1);

23 i‡(
n
 !1 || 
ªcvlöe
[0] != '1')

24 
	`îr_quô
("error creating icmp socket,Ç = %d, char = %c",

25 
n
, 
ªcvlöe
[0]);

27 
	`FD_ZERO
(&
r£t
);

28 
maxfdp1
 = 
	`max
(
sockfd
, 
icmpfd
) + 1;

32 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

33 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

35 
tv
.
tv_£c
 = 5;

36 
tv
.
tv_u£c
 = 0;

37 
	`FD_SET
(
sockfd
, &
r£t
);

38 
	`FD_SET
(
icmpfd
, &
r£t
);

39 i‡–(
n
 = 
	`Sñe˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, &
tv
)) == 0) {

40 
	`Ârötf
(
°dîr
, "socketÅimeout\n");

44 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

45 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

46 
ªcvlöe
[
n
] = 0;

47 
	`Fputs
(
ªcvlöe
, 
°dout
);

50 i‡(
	`FD_ISSET
(
icmpfd
, &
r£t
)) {

51 i‡–(
n
 = 
	`Ród
(
icmpfd
, &
icmpd_îr
, (icmpd_err))) == 0)

52 
	`îr_quô
("ICMP daemonÅerminated");

53 i‡(
n
 !(
icmpd_îr
))

54 
	`îr_quô
("¿%d,Éx≥˘ed %d", 
n
, (
icmpd_îr
));

55 
	`¥ötf
("ICMPÉrror: dest = %s, %s,Åype = %d, code = %d\n",

56 
	`Sock_¡›
(&
icmpd_îr
.
icmpd_de°
, icmpd_îr.
icmpd_Àn
),

57 
	`°ªº‹
(
icmpd_îr
.
icmpd_î∫o
),

58 
icmpd_îr
.
icmpd_ty≥
, icmpd_îr.
icmpd_code
);

61 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/icmpd.c

2 
	~"icmpd.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
, 
sockfd
;

8 
sockaddr_un
 
sun
;

10 i‡(
¨gc
 != 1)

11 
	`îr_quô
("usage: icmpd");

13 
maxi
 = -1;

14 
i
 = 0; i < 
FD_SETSIZE
; i++)

15 
˛õ¡
[
i
].
c⁄nfd
 = -1;

16 
	`FD_ZERO
(&
Æl£t
);

18 
fd4
 = 
	`Sockë
(
AF_INET
, 
SOCK_RAW
, 
IPPROTO_ICMP
);

19 
	`FD_SET
(
fd4
, &
Æl£t
);

20 
maxfd
 = 
fd4
;

22 #ifdef 
IPV6


23 
fd6
 = 
	`Sockë
(
AF_INET6
, 
SOCK_RAW
, 
IPPROTO_ICMPV6
);

24 
	`FD_SET
(
fd6
, &
Æl£t
);

25 
maxfd
 = 
	`max
(maxfd, 
fd6
);

28 
li°ífd
 = 
	`Sockë
(
AF_UNIX
, 
SOCK_STREAM
, 0);

29 
sun
.
sun_Ámûy
 = 
AF_LOCAL
;

30 
	`°r˝y
(
sun
.
sun_∑th
, 
ICMPD_PATH
);

31 
	`u∆ök
(
ICMPD_PATH
);

32 
	`Böd
(
li°ífd
, (
SA
 *)&
sun
, (sun));

33 
	`Li°í
(
li°ífd
, 
LISTENQ
);

34 
	`FD_SET
(
li°ífd
, &
Æl£t
);

35 
maxfd
 = 
	`max
(maxfd, 
li°ífd
);

40 
r£t
 = 
Æl£t
;

41 
ƒódy
 = 
	`Sñe˘
(
maxfd
+1, &
r£t
, 
NULL
, NULL, NULL);

43 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
))

44 i‡(
	`ªadabÀ_li°í
() <= 0)

47 i‡(
	`FD_ISSET
(
fd4
, &
r£t
))

48 i‡(
	`ªadabÀ_v4
() <= 0)

51 #ifdef 
IPV6


52 i‡(
	`FD_ISSET
(
fd6
, &
r£t
))

53 i‡(
	`ªadabÀ_v6
() <= 0)

57 
i
 = 0; i <
maxi
; i++) {

58 i‡–(
sockfd
 = 
˛õ¡
[
i
].
c⁄nfd
) < 0)

60 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
))

61 i‡(
	`ªadabÀ_c⁄n
(
i
) <= 0)

65 
	`exô
(0);

66 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/icmpd.h

1 
	~"u≈icmpd.h
"

3 
	s˛õ¡
 {

4 
	mc⁄nfd
;

5 
	mÁmûy
;

6 
	mÕ‹t
;

8 } 
	g˛õ¡
[
FD_SETSIZE
];

11 
	gfd4
, 
	gfd6
, 
	gli°ífd
, 
	gmaxi
, 
	gmaxfd
, 
	gƒódy
;

12 
fd_£t
 
	gr£t
, 
	gÆl£t
;

13 
sockaddr_un
 
	g˛üddr
;

16 
ªadabÀ_c⁄n
();

17 
ªadabÀ_li°í
();

18 
ªadabÀ_v4
();

19 
ªadabÀ_v6
();

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_conn.c

2 
	~"icmpd.h
"

5 
	$ªadabÀ_c⁄n
(
i
)

7 
unixfd
, 
ªcvfd
;

8 
c
;

9 
ssize_t
 
n
;

10 
sockÀn_t
 
Àn
;

11 
sockaddr_°‹age
 
ss
;

13 
unixfd
 = 
˛õ¡
[
i
].
c⁄nfd
;

14 
ªcvfd
 = -1;

15 i‡–(
n
 = 
	`Ród_fd
(
unixfd
, &
c
, 1, &
ªcvfd
)) == 0) {

16 
	`îr_msg
("˛õ¡ %dÅîmö©ed,Ñecvfd = %d", 
i
, 
ªcvfd
);

17 
˛õ¡d⁄e
;

21 i‡(
ªcvfd
 < 0) {

22 
	`îr_msg
("read_fd didÇotÑeturn descriptor");

23 
˛õ¡îr
;

28 
Àn
 = (
ss
);

29 i‡(
	`gësock«me
(
ªcvfd
, (
SA
 *Ë&
ss
, &
Àn
) < 0) {

30 
	`îr_ªt
("getsocknameÉrror");

31 
˛õ¡îr
;

34 
˛õ¡
[
i
].
Ámûy
 = 
ss
.
ss_Ámûy
;

35 i‡–(
˛õ¡
[
i
].
Õ‹t
 = 
	`sock_gë_p‹t
((
SA
 *)&
ss
, 
Àn
)) == 0) {

36 
˛õ¡
[
i
].
Õ‹t
 = 
	`sock_böd_wûd
(
ªcvfd
, clõ¡[i].
Ámûy
);

37 i‡(
˛õ¡
[
i
].
Õ‹t
 <= 0) {

38 
	`îr_ªt
("error bindingÉphemeralÖort");

39 
˛õ¡îr
;

42 
	`Wrôe
(
unixfd
, "1", 1);

43 
	`Clo£
(
ªcvfd
);

44 (--
ƒódy
);

46 
˛õ¡îr
:

47 
	`Wrôe
(
unixfd
, "0", 1);

48 
˛õ¡d⁄e
:

49 
	`Clo£
(
unixfd
);

50 i‡(
ªcvfd
 >= 0)

51 
	`Clo£
(
ªcvfd
);

52 
	`FD_CLR
(
unixfd
, &
Æl£t
);

53 
˛õ¡
[
i
].
c⁄nfd
 = -1;

54 (--
ƒódy
);

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_listen.c

1 
	~"icmpd.h
"

4 
	$ªadabÀ_li°í
()

6 
i
, 
c⁄nfd
;

7 
sockÀn_t
 
˛ûí
;

9 
˛ûí
 = (
˛üddr
);

10 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛üddr
, &
˛ûí
);

13 
i
 = 0; i < 
FD_SETSIZE
; i++)

14 i‡(
˛õ¡
[
i
].
c⁄nfd
 < 0) {

15 
˛õ¡
[
i
].
c⁄nfd
 = connfd;

18 i‡(
i
 =
FD_SETSIZE
) {

19 
	`˛o£
(
c⁄nfd
);

20 (--
ƒódy
);

22 
	`¥ötf
("√w c⁄√˘i⁄, i = %d, c⁄nfd = %d\n", 
i
, 
c⁄nfd
);

24 
	`FD_SET
(
c⁄nfd
, &
Æl£t
);

25 i‡(
c⁄nfd
 > 
maxfd
)

26 
maxfd
 = 
c⁄nfd
;

27 i‡(
i
 > 
maxi
)

28 
maxi
 = 
i
;

30 (--
ƒódy
);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_v4.c

2 
	~"icmpd.h
"

3 
	~<√töë/ö_sy°m.h
>

4 
	~<√töë/ù.h
>

5 
	~<√töë/ù_icmp.h
>

6 
	~<√töë/udp.h
>

9 
	$ªadabÀ_v4
()

11 
i
, 
hÀn1
, 
hÀn2
, 
icm∂í
, 
•‹t
;

12 
buf
[
MAXLINE
];

13 
§c°r
[
INET_ADDRSTRLEN
], 
d°°r
[INET_ADDRSTRLEN];

14 
ssize_t
 
n
;

15 
sockÀn_t
 
Àn
;

16 
ù
 *ù, *
hù
;

17 
icmp
 *icmp;

18 
udphdr
 *
udp
;

19 
sockaddr_ö
 
‰om
, 
de°
;

20 
icmpd_îr
 icmpd_err;

22 
Àn
 = (
‰om
);

23 
n
 = 
	`Recv‰om
(
fd4
, 
buf
, 
MAXLINE
, 0, (
SA
 *Ë&
‰om
, &
Àn
);

25 
	`¥ötf
("%d bytes ICMPv4 from %s:",

26 
n
, 
	`Sock_¡›_ho°
((
SA
 *Ë&
‰om
, 
Àn
));

28 
ù
 = (ù *Ë
buf
;

29 
hÀn1
 = 
ù
->
ù_hl
 << 2;

31 
icmp
 = (icm∞*Ë(
buf
 + 
hÀn1
);

32 i‡–(
icm∂í
 = 
n
 - 
hÀn1
) < 8)

33 
	`îr_quô
("icm∂í (%dË< 8", 
icm∂í
);

35 
	`¥ötf
("Åy≥ = %d, codê%d\n", 
icmp
->
icmp_ty≥
, icmp->
icmp_code
);

39 i‡(
icmp
->
icmp_ty≥
 =
ICMP_UNREACH
 ||

40 
icmp
->
icmp_ty≥
 =
ICMP_TIMXCEED
 ||

41 
icmp
->
icmp_ty≥
 =
ICMP_SOURCEQUENCH
) {

42 i‡(
icm∂í
 < 8 + 20 + 8)

43 
	`îr_quô
("icm∂í (%dË< 8 + 20 + 8", 
icm∂í
);

45 
hù
 = (
ù
 *Ë(
buf
 + 
hÀn1
 + 8);

46 
hÀn2
 = 
hù
->
ù_hl
 << 2;

47 
	`¥ötf
("\tsrcip = %s, dstip = %s,Öroto = %d\n",

48 
	`I√t_¡›
(
AF_INET
, &
hù
->
ù_§c
, 
§c°r
, (srcstr)),

49 
	`I√t_¡›
(
AF_INET
, &
hù
->
ù_d°
, 
d°°r
, (dststr)),

50 
hù
->
ù_p
);

51 i‡(
hù
->
ù_p
 =
IPPROTO_UDP
) {

52 
udp
 = (
udphdr
 *Ë(
buf
 + 
hÀn1
 + 8 + 
hÀn2
);

53 
•‹t
 = 
udp
->
uh_•‹t
;

56 
i
 = 0; i <
maxi
; i++) {

57 i‡(
˛õ¡
[
i
].
c⁄nfd
 >= 0 &&

58 
˛õ¡
[
i
].
Ámûy
 =
AF_INET
 &&

59 
˛õ¡
[
i
].
Õ‹t
 =
•‹t
) {

61 
	`bzîo
(&
de°
, (dest));

62 
de°
.
sö_Ámûy
 = 
AF_INET
;

63 #ifdef 
HAVE_SOCKADDR_SA_LEN


64 
de°
.
sö_Àn
 = (dest);

66 
	`mem˝y
(&
de°
.
sö_addr
, &
hù
->
ù_d°
,

67 (
ö_addr
));

68 
de°
.
sö_p‹t
 = 
udp
->
uh_dp‹t
;

70 
icmpd_îr
.
icmpd_ty≥
 = 
icmp
->
icmp_ty≥
;

71 
icmpd_îr
.
icmpd_code
 = 
icmp
->
icmp_code
;

72 
icmpd_îr
.
icmpd_Àn
 = (
sockaddr_ö
);

73 
	`mem˝y
(&
icmpd_îr
.
icmpd_de°
, &
de°
, (dest));

76 
icmpd_îr
.
icmpd_î∫o
 = 
EHOSTUNREACH
;

77 i‡(
icmp
->
icmp_ty≥
 =
ICMP_UNREACH
) {

78 i‡(
icmp
->
icmp_code
 =
ICMP_UNREACH_PORT
)

79 
icmpd_îr
.
icmpd_î∫o
 = 
ECONNREFUSED
;

80 i‡(
icmp
->
icmp_code
 =
ICMP_UNREACH_NEEDFRAG
)

81 
icmpd_îr
.
icmpd_î∫o
 = 
EMSGSIZE
;

83 
	`Wrôe
(
˛õ¡
[
i
].
c⁄nfd
, &
icmpd_îr
, (icmpd_err));

88 (--
ƒódy
);

89 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_v6.c

2 
	~"icmpd.h
"

3 
	~<√töë/ö_sy°m.h
>

4 
	~<√töë/ù.h
>

5 
	~<√töë/ù_icmp.h
>

6 
	~<√töë/udp.h
>

8 #ifdef 
IPV6


9 
	~<√töë/ù6.h
>

10 
	~<√töë/icmp6.h
>

14 
	$ªadabÀ_v6
()

16 #ifdef 
IPV6


17 
i
, 
hÀn2
, 
icmp6Àn
, 
•‹t
;

18 
buf
[
MAXLINE
];

19 
§c°r
[
INET6_ADDRSTRLEN
], 
d°°r
[INET6_ADDRSTRLEN];

20 
ssize_t
 
n
;

21 
sockÀn_t
 
Àn
;

22 
ù6_hdr
 *
ù6
, *
hù6
;

23 
icmp6_hdr
 *
icmp6
;

24 
udphdr
 *
udp
;

25 
sockaddr_ö6
 
‰om
, 
de°
;

26 
icmpd_îr
 icmpd_err;

28 
Àn
 = (
‰om
);

29 
n
 = 
	`Recv‰om
(
fd6
, 
buf
, 
MAXLINE
, 0, (
SA
 *Ë&
‰om
, &
Àn
);

31 
	`¥ötf
("%d bytes ICMPv6 from %s:",

32 
n
, 
	`Sock_¡›_ho°
((
SA
 *Ë&
‰om
, 
Àn
));

34 
icmp6
 = (
icmp6_hdr
 *Ë
buf
;

35 i‡–(
icmp6Àn
 = 
n
) < 8)

36 
	`îr_quô
("icmp6À¿(%dË< 8", 
icmp6Àn
);

38 
	`¥ötf
("Åy≥ = %d, codê%d\n", 
icmp6
->
icmp6_ty≥
, icmp6->
icmp6_code
);

42 i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_DST_UNREACH
 ||

43 
icmp6
->
icmp6_ty≥
 =
ICMP6_PACKET_TOO_BIG
 ||

44 
icmp6
->
icmp6_ty≥
 =
ICMP6_TIME_EXCEEDED
) {

45 i‡(
icmp6Àn
 < 8 + 8)

46 
	`îr_quô
("icmp6À¿(%dË< 8 + 8", 
icmp6Àn
);

48 
hù6
 = (
ù6_hdr
 *Ë(
buf
 + 8);

49 
hÀn2
 = (
ù6_hdr
);

50 
	`¥ötf
("\tsrcip = %s, dstip = %s,Çext hdr = %d\n",

51 
	`I√t_¡›
(
AF_INET6
, &
hù6
->
ù6_§c
, 
§c°r
, (srcstr)),

52 
	`I√t_¡›
(
AF_INET6
, &
hù6
->
ù6_d°
, 
d°°r
, (dststr)),

53 
hù6
->
ù6_nxt
);

54 i‡(
hù6
->
ù6_nxt
 =
IPPROTO_UDP
) {

55 
udp
 = (
udphdr
 *Ë(
buf
 + 8 + 
hÀn2
);

56 
•‹t
 = 
udp
->
uh_•‹t
;

59 
i
 = 0; i <
maxi
; i++) {

60 i‡(
˛õ¡
[
i
].
c⁄nfd
 >= 0 &&

61 
˛õ¡
[
i
].
Ámûy
 =
AF_INET6
 &&

62 
˛õ¡
[
i
].
Õ‹t
 =
•‹t
) {

64 
	`bzîo
(&
de°
, (dest));

65 
de°
.
sö6_Ámûy
 = 
AF_INET6
;

66 #ifdef 
HAVE_SOCKADDR_SA_LEN


67 
de°
.
sö6_Àn
 = (dest);

69 
	`mem˝y
(&
de°
.
sö6_addr
, &
hù6
->
ù6_d°
,

70 (
ö6_addr
));

71 
de°
.
sö6_p‹t
 = 
udp
->
uh_dp‹t
;

73 
icmpd_îr
.
icmpd_ty≥
 = 
icmp6
->
icmp6_ty≥
;

74 
icmpd_îr
.
icmpd_code
 = 
icmp6
->
icmp6_code
;

75 
icmpd_îr
.
icmpd_Àn
 = (
sockaddr_ö6
);

76 
	`mem˝y
(&
icmpd_îr
.
icmpd_de°
, &
de°
, (dest));

79 
icmpd_îr
.
icmpd_î∫o
 = 
EHOSTUNREACH
;

80 i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_DST_UNREACH
 &&

81 
icmp6
->
icmp6_code
 =
ICMP6_DST_UNREACH_NOPORT
)

82 
icmpd_îr
.
icmpd_î∫o
 = 
ECONNREFUSED
;

83 i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_PACKET_TOO_BIG
)

84 
icmpd_îr
.
icmpd_î∫o
 = 
EMSGSIZE
;

85 
	`Wrôe
(
˛õ¡
[
i
].
c⁄nfd
, &
icmpd_îr
, (icmpd_err));

90 (--
ƒódy
);

92 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
ßÀn
;

8 
sockaddr
 *
ß
;

10 i‡(
¨gc
 != 3)

11 
	`îr_quô
("usage: udpcli01 <hostname> <service>");

13 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], &
ß
, &
ßÀn
);

15 
	`dg_˛i
(
°dö
, 
sockfd
, 
ß
, 
ßÀn
);

17 
	`exô
(0);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/icmpd/unpicmpd.h

1 #i‚def 
__u≈icmp_h


2 
	#__u≈icmp_h


	)

4 
	~"u≈.h
"

6 
	#ICMPD_PATH
 "/tmp/icmpd"

	)

8 
	sicmpd_îr
 {

9 
	micmpd_î∫o
;

10 
	micmpd_ty≥
;

11 
	micmpd_code
;

12 
sockÀn_t
 
	micmpd_Àn
;

13 
sockaddr_°‹age
 
	micmpd_de°
;

	@/media/sf_ddrive/progs/network/unpv13e/inetd/daytimetcpsrv2.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
addæí
, 
Àn
;

9 
sockaddr
 *
˛üddr
;

10 
buff
[
MAXLINE
];

11 
time_t
 
ticks
;

13 i‡(
¨gc
 < 2 ||árgc > 3)

14 
	`îr_quô
("usage: daytimetcpsrv2 [ <host> ] <service orÖort>");

16 
	`d´m⁄_öô
(
¨gv
[0], 0);

18 i‡(
¨gc
 == 2)

19 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

21 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

23 
˛üddr
 = 
	`MÆloc
(
addæí
);

26 
Àn
 = 
addæí
;

27 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

28 
	`îr_msg
("c⁄√˘i⁄ from %s", 
	`Sock_¡›
(
˛üddr
, 
Àn
));

30 
ticks
 = 
	`time
(
NULL
);

31 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

32 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

34 
	`Clo£
(
c⁄nfd
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/inetd/daytimetcpsrv3.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockÀn_t
 
Àn
;

8 
sockaddr
 *
˛üddr
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

12 
	`d´m⁄_öëd
(
¨gv
[0], 0);

14 
˛üddr
 = 
	`MÆloc
((
sockaddr_°‹age
));

15 
Àn
 = (
sockaddr_°‹age
);

16 
	`Gë≥î«me
(0, 
˛üddr
, &
Àn
);

17 
	`îr_msg
("c⁄√˘i⁄ from %s", 
	`Sock_¡›
(
˛üddr
, 
Àn
));

19 
ticks
 = 
	`time
(
NULL
);

20 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

21 
	`Wrôe
(0, 
buff
, 
	`°æí
(buff));

23 
	`Clo£
(0);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/byteorder.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

7 
s
;

8 
c
[()];

9 } 
un
;

11 
un
.
s
 = 0x0102;

12 
	`¥ötf
("%s: ", 
CPU_VENDOR_OS
);

14 i‡(
un
.
c
[0] == 1 && un.c[1] == 2)

15 
	`¥ötf
("big-endian\n");

16 i‡(
un
.
c
[0] == 2 && un.c[1] == 1)

17 
	`¥ötf
("little-endian\n");

19 
	`¥ötf
("unknown\n");

21 
	`¥ötf
("sizeof(short) = %d\n", ());

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <IPaddress>");

13 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socketÉrror");

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

19 i‡(
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
) <= 0)

20 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
¨gv
[1]);

22 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

23 
	`îr_sys
("connectÉrror");

25  (
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

26 
ªcvlöe
[
n
] = 0;

27 i‡(
	`Âuts
(
ªcvlöe
, 
°dout
Ë=
EOF
)

28 
	`îr_sys
("fputsÉrror");

30 i‡(
n
 < 0)

31 
	`îr_sys
("readÉrror");

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli1.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
, 
cou¡î
 = 0;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <IPaddress>");

13 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socketÉrror");

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

19 i‡(
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
) <= 0)

20 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
¨gv
[1]);

22 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

23 
	`îr_sys
("connectÉrror");

25  (
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

26 
cou¡î
++;

27 
ªcvlöe
[
n
] = 0;

28 i‡(
	`Âuts
(
ªcvlöe
, 
°dout
Ë=
EOF
)

29 
	`îr_sys
("fputsÉrror");

31 i‡(
n
 < 0)

32 
	`îr_sys
("readÉrror");

34 
	`¥ötf
("cou¡î = %d\n", 
cou¡î
);

35 
	`exô
(0);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
, 
cou¡î
 = 0;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <IPaddress>");

13 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socketÉrror");

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(9999);

19 i‡(
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
) <= 0)

20 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
¨gv
[1]);

22 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

23 
	`îr_sys
("connectÉrror");

25  (
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

26 
cou¡î
++;

27 
ªcvlöe
[
n
] = 0;

28 i‡(
	`Âuts
(
ªcvlöe
, 
°dout
Ë=
EOF
)

29 
	`îr_sys
("fputsÉrror");

31 i‡(
n
 < 0)

32 
	`îr_sys
("readÉrror");

34 
	`¥ötf
("cou¡î = %d\n", 
cou¡î
);

35 
	`exô
(0);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli3.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
sockÀn_t
 
Àn
;

8 
ªcvlöe
[
MAXLINE
 + 1];

9 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:á.out <IPaddress>");

14 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

15 
	`îr_sys
("socketÉrror");

17 
	`bzîo
(&
£rvaddr
, (servaddr));

18 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

19 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

20 i‡(
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
) <= 0)

21 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
¨gv
[1]);

23 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

24 
	`îr_sys
("connectÉrror");

26 
Àn
 = (
˛üddr
);

27 
	`Gësock«me
(
sockfd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

28 
	`¥ötf
("localáddr: %s\n",

29 
	`Sock_¡›
((
SA
 *Ë&
˛üddr
, (cliaddr)));

31  (
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

32 
ªcvlöe
[
n
] = 0;

33 i‡(
	`Âuts
(
ªcvlöe
, 
°dout
Ë=
EOF
)

34 
	`îr_sys
("fputsÉrror");

36 i‡(
n
 < 0)

37 
	`îr_sys
("readÉrror");

39 
	`exô
(0);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcliv6.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
sockaddr_ö6
 
£rvaddr
;

8 
ªcvlöe
[
MAXLINE
 + 1];

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <IPaddress>");

13 i‡–(
sockfd
 = 
	`sockë
(
AF_INET6
, 
SOCK_STREAM
, 0)) < 0)

14 
	`îr_sys
("socketÉrror");

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö6_Ámûy
 = 
AF_INET6
;

18 
£rvaddr
.
sö6_p‹t
 = 
	`ht⁄s
(13);

19 i‡(
	`öë_±⁄
(
AF_INET6
, 
¨gv
[1], &
£rvaddr
.
sö6_addr
) <= 0)

20 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
¨gv
[1]);

22 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

23 
	`îr_sys
("connectÉrror");

25  (
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

26 
ªcvlöe
[
n
] = 0;

27 i‡(
	`Âuts
(
ªcvlöe
, 
°dout
Ë=
EOF
)

28 
	`îr_sys
("fputsÉrror");

30 i‡(
n
 < 0)

31 
	`îr_sys
("readÉrror");

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockaddr_ö
 
£rvaddr
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë
NULL
, NULL);

26 
ticks
 = 
	`time
(
NULL
);

27 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

28 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

30 
	`Clo£
(
c⁄nfd
);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv1.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
Àn
;

9 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

10 
buff
[
MAXLINE
];

11 
time_t
 
ticks
;

13 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

20 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`Li°í
(
li°ífd
, 
LISTENQ
);

25 
Àn
 = (
˛üddr
);

26 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

27 
	`¥ötf
("connection from %s,Öort %d\n",

28 
	`I√t_¡›
(
AF_INET
, &
˛üddr
.
sö_addr
, 
buff
, (buff)),

29 
	`¡ohs
(
˛üddr
.
sö_p‹t
));

31 
ticks
 = 
	`time
(
NULL
);

32 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

33 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

35 
	`Clo£
(
c⁄nfd
);

37 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv2.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
, 
i
;

8 
sockaddr_ö
 
£rvaddr
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(9999);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë
NULL
, NULL);

26 
ticks
 = 
	`time
(
NULL
);

27 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

28 
i
 = 0; i < 
	`°æí
(
buff
); i++)

29 
	`Wrôe
(
c⁄nfd
, &
buff
[
i
], 1);

31 
	`Clo£
(
c⁄nfd
);

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv3.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
Àn
;

9 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

10 
buff
[
MAXLINE
];

11 
time_t
 
ticks
;

13 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(9999);

20 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`Li°í
(
li°ífd
, 
LISTENQ
);

25 
Àn
 = (
˛üddr
);

26 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

27 
	`¥ötf
("connection from %s,Öort %d\n",

28 
	`I√t_¡›
(
AF_INET
, &
˛üddr
.
sö_addr
, 
buff
, (buff)),

29 
	`¡ohs
(
˛üddr
.
sö_p‹t
));

31 
ticks
 = 
	`time
(
NULL
);

32 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

33 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

35 
	`Clo£
(
c⁄nfd
);

37 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrvv6.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
Àn
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

11 
sockaddr_ö6
 
£rvaddr
, 
˛üddr
;

13 
li°ífd
 = 
	`Sockë
(
AF_INET6
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö6_Ámûy
 = 
AF_INET6
;

17 
£rvaddr
.
sö6_addr
 = 
ö6addr_™y
;

18 
£rvaddr
.
sö6_p‹t
 = 
	`ht⁄s
(13);

20 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`Li°í
(
li°ífd
, 
LISTENQ
);

25 
Àn
 = (
˛üddr
);

26 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

27 
	`¥ötf
("connection from %s\n",

28 
	`Sock_¡›
((
SA
 *Ë&
˛üddr
, 
Àn
));

30 
ticks
 = 
	`time
(
NULL
);

31 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

32 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

34 
	`Clo£
(
c⁄nfd
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ioctl/lsif01.c

1 
	~"u≈.h
"

3 
	~<√t/if.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
sockfd
, 
Àn
;

9 *
±r
, 
buf
[2048], 
addr°r
[
INET_ADDRSTRLEN
];

10 
ifc⁄f
 
ifc
;

11 
i‰eq
 *
i‰
;

12 
sockaddr_ö
 *
sö±r
;

14 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

16 
ifc
.
ifc_Àn
 = (
buf
);

17 
ifc
.
ifc_ªq
 = (
i‰eq
 *Ë
buf
;

18 
	`Io˘l
(
sockfd
, 
SIOCGIFCONF
, &
ifc
);

20 
±r
 = 
buf
;Öå < bu‡+ 
ifc
.
ifc_Àn
; ) {

21 
i‰
 = (
i‰eq
 *Ë
±r
;

22 
Àn
 = (
sockaddr
);

23 #ifdef 
HAVE_SOCKADDR_SA_LEN


24 i‡(
i‰
->
i‰_addr
.
ß_Àn
 > 
Àn
)

25 
Àn
 = 
i‰
->
i‰_addr
.
ß_Àn
;

27 
±r
 +(
i‰
->
i‰_«me
Ë+ 
Àn
;

29 
i‰
->
i‰_addr
.
ß_Ámûy
) {

30 
AF_INET
:

31 
sö±r
 = (
sockaddr_ö
 *Ë&
i‰
->
i‰_addr
;

32 
	`¥ötf
("%s\t%s\n", 
i‰
->
i‰_«me
,

33 
	`I√t_¡›
(
AF_INET
, &
sö±r
->
sö_addr
, 
addr°r
, (addrstr)));

37 
	`¥ötf
("%s\n", 
i‰
->
i‰_«me
);

41 
	`exô
(0);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ioctl/lsif02.c

1 
	~"u≈.h
"

3 
	~<√t/if.h
>

4 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


5 
	~<√t/if_dl.h
>

6 
	~<√t/if_ty≥s.h
>

10 
	$maö
(
¨gc
, **
¨gv
)

12 
sockfd
, 
Àn
;

13 *
±r
, 
buf
[2048], 
addr°r
[
INET_ADDRSTRLEN
];

14 
ifc⁄f
 
ifc
;

15 
i‰eq
 *
i‰
;

16 
sockaddr_ö
 *
sö±r
;

18 i‡–(
sockfd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0)

19 
	`îr_sys
("socketÉrror");

21 
ifc
.
ifc_Àn
 = (
buf
);

22 
ifc
.
ifc_ªq
 = (
i‰eq
 *Ë
buf
;

23 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFCONF
, &
ifc
) < 0)

24 
	`îr_sys
("ioctl SIOCGIFCONFÉrror");

26 
±r
 = 
buf
;Öå < bu‡+ 
ifc
.
ifc_Àn
; ) {

27 
i‰
 = (
i‰eq
 *Ë
±r
;

28 
Àn
 = (
sockaddr
);

29 #ifdef 
HAVE_SOCKADDR_SA_LEN


30 i‡(
i‰
->
i‰_addr
.
ß_Àn
 > 
Àn
)

31 
Àn
 = 
i‰
->
i‰_addr
.
ß_Àn
;

33 
±r
 +(
i‰
->
i‰_«me
Ë+ 
Àn
;

35 
i‰
->
i‰_addr
.
ß_Ámûy
) {

36 
AF_INET
:

37 
sö±r
 = (
sockaddr_ö
 *Ë&
i‰
->
i‰_addr
;

38 
	`¥ötf
("%s\t%s\n", 
i‰
->
i‰_«me
,

39 
	`I√t_¡›
(
AF_INET
, &
sö±r
->
sö_addr
, 
addr°r
, (addrstr)));

42 #ifdef 
AF_INET6


43 
AF_INET6
: {

44 
sockaddr_ö6
 *
sö6±r
;

45 
addr6°r
[
INET6_ADDRSTRLEN
];

47 
sö6±r
 = (
sockaddr_ö6
 *Ë&
i‰
->
i‰_addr
;

48 
	`¥ötf
("%s\t%s\n", 
i‰
->
i‰_«me
,

49 
	`I√t_¡›
(
AF_INET6
, &
sö6±r
->
sö6_addr
, 
addr6°r
, (addr6str)));

54 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


55 
AF_LINK
: {

56 
sockaddr_dl
 *
sdÕå
;

57 
°r
[18];

58 *
	`ëhî¥öt
(c⁄° 
u_ch¨
 *, *);

60 
sdÕå
 = (
sockaddr_dl
 *Ë&
i‰
->
i‰_addr
;

61 
	`¥ötf
("%s", 
i‰
->
i‰_«me
);

62 i‡(
sdÕå
->
sdl_ödex
)

63 
	`¥ötf
("\t<lök %d>", 
sdÕå
->
sdl_ödex
);

64 i‡(
sdÕå
->
sdl_ty≥
 =
IFT_ETHER
 && sdÕå->
sdl_Æí
)

65 
	`¥ötf
("\t%s", 
	`ëhî¥öt
((
u_ch¨
 *Ë
	`LLADDR
(
sdÕå
), 
°r
));

66 
	`putch¨
('\n');

72 
	`¥ötf
("%s\n", 
i‰
->
i‰_«me
);

76 
	`exô
(0);

77 
	}
}

79 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


81 
	$ëhî¥öt
(c⁄° 
u_ch¨
 
óddr
[6], 
°rög
[18])

83 
	`¢¥ötf
(
°rög
, 18, "%02x:%02x:%02x:%02x:%02x:%02x",

84 
óddr
[0],Éaddr[1],Éaddr[2],Éaddr[3],Éaddr[4],Éaddr[5] );

85 
°rög
[17] = '\0';

86 (
°rög
);

87 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ioctl/prifinfo.c

1 
	~"u≈ifi.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
ifi_öfo
 *
ifi
, *
ifihód
;

7 
sockaddr
 *
ß
;

8 
u_ch¨
 *
±r
;

9 
i
, 
Ámûy
, 
dﬂlü£s
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:Örifinfo <inet4|inet6> <doaliases>");

14 i‡(
	`°rcmp
(
¨gv
[1], "inet4") == 0)

15 
Ámûy
 = 
AF_INET
;

16 #ifdef 
IPv6


17 i‡(
	`°rcmp
(
¨gv
[1], "inet6") == 0)

18 
Ámûy
 = 
AF_INET6
;

21 
	`îr_quô
("invalid <address-family>");

22 
dﬂlü£s
 = 
	`©oi
(
¨gv
[2]);

24 
ifihód
 = 
ifi
 = 
	`Gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
);

25 
ifi
 !
NULL
; ifòifi->
ifi_√xt
) {

26 
	`¥ötf
("%s: ", 
ifi
->
ifi_«me
);

27 i‡(
ifi
->
ifi_ödex
 != 0)

28 
	`¥ötf
("(%dË", 
ifi
->
ifi_ödex
);

29 
	`¥ötf
("<");

31 i‡(
ifi
->
ifi_Êags
 & 
IFF_UP
Ë
	`¥ötf
("UP ");

32 i‡(
ifi
->
ifi_Êags
 & 
IFF_BROADCAST
Ë
	`¥ötf
("BCAST ");

33 i‡(
ifi
->
ifi_Êags
 & 
IFF_MULTICAST
Ë
	`¥ötf
("MCAST ");

34 i‡(
ifi
->
ifi_Êags
 & 
IFF_LOOPBACK
Ë
	`¥ötf
("LOOP ");

35 i‡(
ifi
->
ifi_Êags
 & 
IFF_POINTOPOINT
Ë
	`¥ötf
("P2P ");

36 
	`¥ötf
(">\n");

39 i‡–(
i
 = 
ifi
->
ifi_hÀn
) > 0) {

40 
±r
 = 
ifi
->
ifi_haddr
;

42 
	`¥ötf
("%s%x", (
i
 =
ifi
->
ifi_hÀn
Ë? " " : ":", *
±r
++);

43 } --
i
 > 0);

44 
	`¥ötf
("\n");

46 i‡(
ifi
->
ifi_mtu
 != 0)

47 
	`¥ötf
(" MTU: %d\n", 
ifi
->
ifi_mtu
);

49 i‡–(
ß
 = 
ifi
->
ifi_addr
Ë!
NULL
)

50 
	`¥ötf
(" IPáddr: %s\n",

51 
	`Sock_¡›_ho°
(
ß
, (*sa)));

52 i‡–(
ß
 = 
ifi
->
ifi_brdaddr
Ë!
NULL
)

53 
	`¥ötf
(" broadcastáddr: %s\n",

54 
	`Sock_¡›_ho°
(
ß
, (*sa)));

55 i‡–(
ß
 = 
ifi
->
ifi_d°addr
Ë!
NULL
)

56 
	`¥ötf
(" destinationáddr: %s\n",

57 
	`Sock_¡›_ho°
(
ß
, (*sa)));

59 
	`‰ì_ifi_öfo
(
ifihód
);

60 
	`exô
(0);

61 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ioctl/prmac.c

1 
	~"u≈ifi.h
"

2 
	~<√t/if_¨p.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
ifi_öfo
 *
ifi
;

9 *
±r
;

10 
¨¥eq
árpreq;

11 
sockaddr_ö
 *
sö
;

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

14 
ifi
 = 
	`gë_ifi_öfo
(
AF_INET
, 0); ifò!
NULL
; ifòifi->
ifi_√xt
) {

15 
	`¥ötf
("%s: ", 
	`Sock_¡›
(
ifi
->
ifi_addr
, (
sockaddr_ö
)));

17 
sö
 = (
sockaddr_ö
 *Ë&
¨¥eq
.
¨p_∑
;

18 
	`mem˝y
(
sö
, 
ifi
->
ifi_addr
, (
sockaddr_ö
));

20 i‡(
	`io˘l
(
sockfd
, 
SIOCGARP
, &
¨¥eq
) < 0) {

21 
	`îr_ªt
("ioctl SIOCGARP");

25 
±r
 = &
¨¥eq
.
¨p_ha
.
ß_d©a
[0];

26 
	`¥ötf
("%x:%x:%x:%x:%x:%x\n", *
±r
, *(ptr+1),

27 *(
±r
+2), *(ptr+3), *(ptr+4), *(ptr+5));

29 
	`exô
(0);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ioctl/test1.c

1 
	~"u≈.h
"

2 
	~<√t/if.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
, 
sockfd
, 
numif
;

8 
buf
[1024];

10 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

12 
numif
 = 999;

13 
	`Io˘l
(
sockfd
, 
SIOCGIFNUM
, &
numif
);

14 
	`¥ötf
("numi‡%d\n", 
numif
);

16 
i
 = 
	`io˘l
(
sockfd
, 
SIOCGHIWAT
, &
buf
);

17 
	`¥ötf
("ò%d,Éºnÿ%d\n", 
i
, 
î∫o
);

18 
	`exô
(0);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/dgechoprintroute.c

1 
	~"u≈.h
"

4 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

6 
n
;

7 
mesg
[
MAXLINE
];

8 
⁄
;

9 
c⁄åﬁ
[
MAXLINE
];

10 
msghdr
 
msg
;

11 
cmsghdr
 *
cmsg
;

12 
iovec
 
iov
[1];

14 
⁄
 = 1;

15 
	`Sësock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_RECVRTHDR
, &
⁄
, (on));

17 
	`bzîo
(&
msg
, (msg));

18 
iov
[0].
iov_ba£
 = 
mesg
;

19 
msg
.
msg_«me
 = 
p˛üddr
;

20 
msg
.
msg_iov
 = 
iov
;

21 
msg
.
msg_iovÀn
 = 1;

22 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ
;

24 
msg
.
msg_«mñí
 = 
˛ûí
;

25 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ
);

26 
iov
[0].
iov_Àn
 = 
MAXLINE
;

27 
n
 = 
	`Recvmsg
(
sockfd
, &
msg
, 0);

29 
cmsg
 = 
	`CMSG_FIRSTHDR
(&
msg
); cmsg !
NULL
;

30 
cmsg
 = 
	`CMSG_NXTHDR
(&
msg
, cmsg)) {

31 i‡(
cmsg
->
cmsg_Àvñ
 =
IPPROTO_IPV6
 &&

32 
cmsg
->
cmsg_ty≥
 =
IPV6_RTHDR
) {

33 
	`öë6_§¸t_¥öt
(
	`CMSG_DATA
(
cmsg
));

34 
	`I√t6_πh_ªvî£
(
	`CMSG_DATA
(
cmsg
), CMSG_DATA(cmsg));

38 
iov
[0].
iov_Àn
 = 
n
;

39 
	`Sídmsg
(
sockfd
, &
msg
, 0);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/sigchldwaitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0) {

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/sourceroute.c

2 
	~"u≈.h
"

3 
	~<√töë/ö_sy°m.h
>

4 
	~<√töë/ù.h
>

6 
u_ch¨
 *
	g›å
;

7 
u_ch¨
 *
	gÀ≈å
;

8 
	go˙t
;

10 
u_ch¨
 *

11 
	$öë_§¸t_öô
(
ty≥
)

13 
›å
 = 
	`MÆloc
(44);

14 
	`bzîo
(
›å
, 44);

15 
o˙t
 = 0;

16 *
›å
++ = 
IPOPT_NOP
;

17 *
›å
++ = 
ty≥
 ? 
IPOPT_SSRR
 : 
IPOPT_LSRR
;

18 
À≈å
 = 
›å
++;

19 *
›å
++ = 4;

21 (
›å
 - 4);

22 
	}
}

27 
	$öë_§¸t_add
(*
ho°±r
)

29 
Àn
;

30 
addröfo
 *
ai
;

31 
sockaddr_ö
 *
sö
;

33 i‡(
o˙t
 > 9)

34 
	`îr_quô
("toÿm™y sour˚Ñouã†wôh: %s", 
ho°±r
);

36 
ai
 = 
	`Ho°_£rv
(
ho°±r
, 
NULL
, 
AF_INET
, 0);

37 
sö
 = (
sockaddr_ö
 *Ë
ai
->
ai_addr
;

38 
	`mem˝y
(
›å
, &
sö
->
sö_addr
, (
ö_addr
));

39 
	`‰ìaddröfo
(
ai
);

41 
›å
 +(
ö_addr
);

42 
o˙t
++;

43 
Àn
 = 3 + (
o˙t
 * (
ö_addr
));

44 *
À≈å
 = 
Àn
;

45 (
Àn
 + 1);

46 
	}
}

51 
	$öë_§¸t_¥öt
(
u_ch¨
 *
±r
, 
Àn
)

53 
u_ch¨
 
c
;

54 
°r
[
INET_ADDRSTRLEN
];

55 
ö_addr
 
h›1
;

57 
	`mem˝y
(&
h›1
, 
±r
, (
ö_addr
));

58 
±r
 +(
ö_addr
);

60  (
c
 = *
±r
++Ë=
IPOPT_NOP
)

63 i‡(
c
 =
IPOPT_LSRR
)

64 
	`¥ötf
("received LSRR: ");

65 i‡(
c
 =
IPOPT_SSRR
)

66 
	`¥ötf
("received SSRR: ");

68 
	`¥ötf
("ª˚ived o±i⁄Åy≥ %d\n", 
c
);

71 
	`¥ötf
("%†", 
	`I√t_¡›
(
AF_INET
, &
h›1
, 
°r
, (str)));

73 
Àn
 = *
±r
++ - (
ö_addr
);

74 
±r
++;

75 
Àn
 > 0) {

76 
	`¥ötf
("%†", 
	`I√t_¡›
(
AF_INET
, 
±r
, 
°r
, (str)));

77 
±r
 +(
ö_addr
);

78 
Àn
 -(
ö_addr
);

80 
	`¥ötf
("\n");

81 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/sourceroute6.c

1 
	~"u≈.h
"

4 
	$öë6_§¸t_¥öt
(*
±r
)

6 
i
, 
£gmíts
;

7 
°r
[
INET6_ADDRSTRLEN
];

9 
£gmíts
 = 
	`I√t6_πh_£gmíts
(
±r
);

10 
	`¥ötf
("received sourceÑoute: ");

11 
i
 = 0; i < 
£gmíts
; i++)

12 
	`¥ötf
("%†", 
	`I√t_¡›
(
AF_INET6
, 
	`I√t6_πh_gëaddr
(
±r
, 
i
),

13 
°r
, (str)));

14 
	`¥ötf
("\n");

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/tcpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
c
, 
sockfd
, 
Àn
 = 0;

7 
u_ch¨
 *
±r
 = 
NULL
;

8 
addröfo
 *
ai
;

10 i‡(
¨gc
 < 2)

11 
	`îr_quô
("usage:Åcpcli01 [ -[gG] <hostname> ... ] <hostname>");

13 
›ãº
 = 0;

14  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "gG")) != -1) {

15 
c
) {

17 i‡(
±r
)

18 
	`îr_quô
("can't use both -gánd -G");

19 
±r
 = 
	`öë_§¸t_öô
(0);

23 i‡(
±r
)

24 
	`îr_quô
("can't use both -gánd -G");

25 
±r
 = 
	`öë_§¸t_öô
(1);

29 
	`îr_quô
("uƒecognized o±i⁄: %c", 
c
);

33 i‡(
±r
)

34 
›töd
 < 
¨gc
-1)

35 
Àn
 = 
	`öë_§¸t_add
(
¨gv
[
›töd
++]);

37 i‡(
›töd
 < 
¨gc
-1)

38 
	`îr_quô
("need -g or -GÅo specifyÑoute");

40 i‡(
›töd
 !
¨gc
-1)

41 
	`îr_quô
("missing <hostname>");

43 
ai
 = 
	`Ho°_£rv
(
¨gv
[
›töd
], 
SERV_PORT_STR
, 
AF_INET
, 
SOCK_STREAM
);

45 
sockfd
 = 
	`Sockë
(
ai
->
ai_Ámûy
,ái->
ai_sockty≥
,ái->
ai_¥Ÿocﬁ
);

47 i‡(
±r
) {

48 
Àn
 = 
	`öë_§¸t_add
(
¨gv
[
›töd
]);

49 
	`Sësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_OPTIONS
, 
±r
, 
Àn
);

50 
	`‰ì
(
±r
);

53 
	`C⁄√˘
(
sockfd
, 
ai
->
ai_addr
,ái->
ai_addæí
);

55 
	`°r_˛i
(
°dö
, 
sockfd
);

57 
	`exô
(0);

58 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/tcpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
u_ch¨
 *
›ts
;

8 
pid_t
 
chûdpid
;

9 
sockÀn_t
 
˛ûí
, 
Àn
;

10 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

11 
	`sig_chld
();

13 
›ts
 = 
	`MÆloc
(44);

15 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

17 
	`bzîo
(&
£rvaddr
, (servaddr));

18 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

19 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

20 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

22 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

24 
	`Li°í
(
li°ífd
, 
LISTENQ
);

26 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

29 
˛ûí
 = (
˛üddr
);

30 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

31 i‡(
î∫o
 =
EINTR
)

34 
	`îr_sys
("acceptÉrror");

37 
Àn
 = 44;

38 
	`Gësock›t
(
c⁄nfd
, 
IPPROTO_IP
, 
IP_OPTIONS
, 
›ts
, &
Àn
);

39 i‡(
Àn
 > 0) {

40 
	`¥ötf
("ª˚ived IP o±i⁄s,Üí = %d\n", 
Àn
);

41 
	`öë_§¸t_¥öt
(
›ts
, 
Àn
);

44 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

45 
	`Clo£
(
li°ífd
);

46 
	`°r_echo
(
c⁄nfd
);

47 
	`exô
(0);

49 
	`Clo£
(
c⁄nfd
);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
c
, 
sockfd
, 
Àn
 = 0;

7 
u_ch¨
 *
±r
 = 
NULL
;

8 *
πh
;

9 
addröfo
 *
ai
;

11 i‡(
¨gc
 < 2)

12 
	`îr_quô
("usage: udpcli01 [ <hostname> ... ] <hostname>");

14 i‡(
¨gc
 > 2) {

15 
i
;

17 
Àn
 = 
	`I√t6_πh_•a˚
(
IPV6_RTHDR_TYPE_0
, 
¨gc
-2);

18 
±r
 = 
	`MÆloc
(
Àn
);

19 
	`I√t6_πh_öô
(
±r
, 
Àn
, 
IPV6_RTHDR_TYPE_0
, 
¨gc
-2);

20 
i
 = 1; i < 
¨gc
-1; i++) {

21 
ai
 = 
	`Ho°_£rv
(
¨gv
[
i
], 
NULL
, 
AF_INET6
, 0);

22 
	`I√t6_πh_add
(
±r
, &((
sockaddr_ö6
 *)
ai
->
ai_addr
)->
sö6_addr
);

26 
ai
 = 
	`Ho°_£rv
(
¨gv
[
¨gc
-1], 
SERV_PORT_STR
, 
AF_INET6
, 
SOCK_DGRAM
);

28 
sockfd
 = 
	`Sockë
(
ai
->
ai_Ámûy
,ái->
ai_sockty≥
,ái->
ai_¥Ÿocﬁ
);

30 i‡(
±r
) {

31 
	`Sësock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_RTHDR
, 
±r
, 
Àn
);

32 
	`‰ì
(
±r
);

35 
	`dg_˛i
(
°dö
, 
sockfd
, 
ai
->
ai_addr
,ái->
ai_addæí
);

37 
	`exô
(0);

38 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ipopts/udpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö6
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET6
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö6_Ámûy
 = 
AF_INET6
;

13 
£rvaddr
.
sö6_addr
 = 
ö6addr_™y
;

14 
£rvaddr
.
sö6_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/add.c

1 
	~"u≈.h
"

2 
	~<√t/pfkeyv2.h
>

5 
	$ßÀn
(
sockaddr
 *
ß
)

7 #ifde‡
HAVE_SOCKADDR_SA_LEN


8  
ß
->
ß_Àn
;

10 
ß
->
ß_Ámûy
) {

11 
AF_INET
:

12  (
sockaddr_ö
);

13 #ifde‡
IPV6


14 
AF_INET6
:

15  (
sockaddr_ö6
);

21 
	}
}

24 
	$¥efix_Æl
(
sockaddr
 *
ß
)

26 
ß
->
ß_Ámûy
) {

27 
AF_INET
:

29 #ifde‡
IPV6


30 
AF_INET6
:

36 
	}
}

40 
	$ßdb_add
(
sockaddr
 *
§c
, sockadd∏*
d°
, 
ty≥
, 
Æg
,

41 
•i
, 
keybôs
, *
keyd©a
)

43 
s
;

44 
buf
[4096], *
p
;

45 
ßdb_msg
 *
msg
;

46 
ßdb_ß
 *
ßext
;

47 
ßdb_addªss
 *
addªxt
;

48 
ßdb_key
 *
keyext
;

49 
Àn
;

50 
mypid
;

52 
s
 = 
	`Sockë
(
PF_KEY
, 
SOCK_RAW
, 
PF_KEY_V2
);

54 
mypid
 = 
	`gëpid
();

57 
	`bzîo
(&
buf
, (buf));

58 
p
 = 
buf
;

59 
msg
 = (
ßdb_msg
 *)
p
;

60 
msg
->
ßdb_msg_vîsi⁄
 = 
PF_KEY_V2
;

61 
msg
->
ßdb_msg_ty≥
 = 
SADB_ADD
;

62 
msg
->
ßdb_msg_ßty≥
 = 
ty≥
;

63 
msg
->
ßdb_msg_pid
 = 
	`gëpid
();

64 
Àn
 = (*
msg
);

65 
p
 +(*
msg
);

67 
ßext
 = (
ßdb_ß
 *)
p
;

68 
ßext
->
ßdb_ß_Àn
 = (*saext) / 8;

69 
ßext
->
ßdb_ß_exây≥
 = 
SADB_EXT_SA
;

70 
ßext
->
ßdb_ß_•i
 = 
	`ht⁄l
(
•i
);

71 
ßext
->
ßdb_ß_ª∂ay
 = 0;

72 
ßext
->
ßdb_ß_°©e
 = 
SADB_SASTATE_MATURE
;

73 
ßext
->
ßdb_ß_auth
 = 
Æg
;

74 
ßext
->
ßdb_ß_í¸y±
 = 
SADB_EALG_NONE
;

75 
ßext
->
ßdb_ß_Êags
 = 0;

76 
Àn
 +
ßext
->
ßdb_ß_Àn
 * 8;

77 
p
 +
ßext
->
ßdb_ß_Àn
 * 8;

79 
addªxt
 = (
ßdb_addªss
 *)
p
;

80 
addªxt
->
ßdb_addªss_Àn
 = ((*addªxtË+ 
	`ßÀn
(
§c
) + 7) / 8;

81 
addªxt
->
ßdb_addªss_exây≥
 = 
SADB_EXT_ADDRESS_SRC
;

82 
addªxt
->
ßdb_addªss_¥Ÿo
 = 0;

83 
addªxt
->
ßdb_addªss_¥efixÀn
 = 
	`¥efix_Æl
(
§c
);

84 
addªxt
->
ßdb_addªss_ª£rved
 = 0;

85 
	`mem˝y
(
addªxt
 + 1, 
§c
, 
	`ßÀn
(src));

86 
Àn
 +
addªxt
->
ßdb_addªss_Àn
 * 8;

87 
p
 +
addªxt
->
ßdb_addªss_Àn
 * 8;

89 
addªxt
 = (
ßdb_addªss
 *)
p
;

90 
addªxt
->
ßdb_addªss_Àn
 = ((*addªxtË+ 
	`ßÀn
(
d°
) + 7) / 8;

91 
addªxt
->
ßdb_addªss_exây≥
 = 
SADB_EXT_ADDRESS_DST
;

92 
addªxt
->
ßdb_addªss_¥Ÿo
 = 0;

93 
addªxt
->
ßdb_addªss_¥efixÀn
 = 
	`¥efix_Æl
(
d°
);

94 
addªxt
->
ßdb_addªss_ª£rved
 = 0;

95 
	`mem˝y
(
addªxt
 + 1, 
d°
, 
	`ßÀn
(dst));

96 
Àn
 +
addªxt
->
ßdb_addªss_Àn
 * 8;

97 
p
 +
addªxt
->
ßdb_addªss_Àn
 * 8;

99 
keyext
 = (
ßdb_key
 *)
p
;

101 
keyext
->
ßdb_key_Àn
 = ((*keyextË+ (
keybôs
 / 8) + 7) / 8;

102 
keyext
->
ßdb_key_exây≥
 = 
SADB_EXT_KEY_AUTH
;

103 
keyext
->
ßdb_key_bôs
 = 
keybôs
;

104 
keyext
->
ßdb_key_ª£rved
 = 0;

105 
	`mem˝y
(
keyext
 + 1, 
keyd©a
, 
keybôs
 / 8);

106 
Àn
 +
keyext
->
ßdb_key_Àn
 * 8;

107 
p
 +
keyext
->
ßdb_key_Àn
 * 8;

109 
msg
->
ßdb_msg_Àn
 = 
Àn
 / 8;

110 
	`¥ötf
("Sendingádd message:\n");

111 
	`¥öt_ßdb_msg
(
buf
, 
Àn
);

112 
	`Wrôe
(
s
, 
buf
, 
Àn
);

114 
	`¥ötf
("\nReplyÑeturned:\n");

117 
msgÀn
;

118 
ßdb_msg
 *
msgp
;

120 
msgÀn
 = 
	`Ród
(
s
, &
buf
, (buf));

121 
msgp
 = (
ßdb_msg
 *)&
buf
;

122 i‡(
msgp
->
ßdb_msg_pid
 =
mypid
 &&

123 
msgp
->
ßdb_msg_ty≥
 =
SADB_ADD
) {

124 
	`¥öt_ßdb_msg
(
msgp
, 
msgÀn
);

128 
	`˛o£
(
s
);

129 
	}
}

133 
	$maö
(
¨gc
, **
¨gv
)

135 
addröfo
 
höts
, *
§c
, *
d°
;

136 *
p
, *
keyd©a
, *
kp
;

137 *
ï
;

138 
ªt
, 
Àn
, 
i
;

139 
ßty≥
, 
Æg
, 
keybôs
;

141 
	`bzîo
(&
höts
, (hints));

142 i‡((
ªt
 = 
	`gëaddröfo
(
¨gv
[1], 
NULL
, &
höts
, &
§c
)) != 0) {

143 
	`îr_quô
("%s: %s\n", 
¨gv
[1], 
	`gai_°ªº‹
(
ªt
));

145 i‡((
ªt
 = 
	`gëaddröfo
(
¨gv
[2], 
NULL
, &
höts
, &
d°
)) != 0) {

146 
	`îr_quô
("%s: %s\n", 
¨gv
[2], 
	`gai_°ªº‹
(
ªt
));

148 i‡(
§c
->
ai_Ámûy
 !
d°
->ai_family) {

149 
	`îr_quô
("%†™d %†nŸ samêadd∏Ámûy\n", 
¨gv
[1],árgv[2]);

151 
ßty≥
 = 
SADB_SATYPE_AH
;

152 i‡((
Æg
 = 
	`gëßÆgby«me
(
ßty≥
, 
¨gv
[3])) < 0) {

153 
	`îr_quô
("Unknow¿SAÅy≥ /álg‹ôhmÖaúáh/%s\n", 
¨gv
[3]);

155 
keybôs
 = 
	`°πoul
(
¨gv
[4], &
ï
, 0);

156 i‡(
ï
 =
¨gv
[4] || *ï !'\0' || (
keybôs
 % 8) != 0) {

157 
	`îr_quô
("InvÆidÇumbî o‡bô†%s\n", 
¨gv
[4]);

159 
p
 = 
¨gv
[5];

160 i‡(
p
[0] == '0' && (p[1] == 'x' ||Ö[1] == 'X'))

161 
p
 += 2;

162 
Àn
 = 
	`°æí
(
p
);

163 
kp
 = 
keyd©a
 = 
	`mÆloc
(
keybôs
 / 8);

164 
i
 = 0; i < 
keybôs
; i += 8) {

165 
c
;

167 i‡(
Àn
 < 2) {

168 
	`îr_quô
("%s:ÇŸÉnough byã†”x≥˘ed %d)\n", 
¨gv
[5], 
keybôs
 / 8);

170 i‡(
	`ssˇnf
(
p
, "%2x", &
c
) != 1) {

171 
	`îr_quô
("%†c⁄èö†övÆid hex digô\n", 
¨gv
[5]);

173 *
kp
++ = 
c
;

174 
p
 += 2;

175 
Àn
 -= 2;

177 i‡(
Àn
 > 0) {

178 
	`îr_quô
("%s:Åoÿm™y byã†”x≥˘ed %d)\n", 
¨gv
[5], 
keybôs
 / 8);

180 
	`ßdb_add
(
§c
->
ai_addr
, 
d°
->ai_addr, 
ßty≥
, 
Æg
, 0x9876, 
keybôs
, 
keyd©a
);

181 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/dump.c

1 
	~"u≈.h
"

2 
	~<√t/pfkeyv2.h
>

6 
	$ßdb_dump
(
ty≥
)

8 
s
;

9 
buf
[4096];

10 
ßdb_msg
 
msg
;

11 
gŸeof
;

13 
s
 = 
	`Sockë
(
PF_KEY
, 
SOCK_RAW
, 
PF_KEY_V2
);

16 
	`bzîo
(&
msg
, (msg));

17 
msg
.
ßdb_msg_vîsi⁄
 = 
PF_KEY_V2
;

18 
msg
.
ßdb_msg_ty≥
 = 
SADB_DUMP
;

19 
msg
.
ßdb_msg_ßty≥
 = 
ty≥
;

20 
msg
.
ßdb_msg_Àn
 = (msg) / 8;

21 
msg
.
ßdb_msg_pid
 = 
	`gëpid
();

22 
	`¥ötf
("Sending dump message:\n");

23 
	`¥öt_ßdb_msg
(&
msg
, (msg));

24 
	`Wrôe
(
s
, &
msg
, (msg));

26 
	`¥ötf
("\nMessagesÑeturned:\n");

28 
gŸeof
 = 0;

29 
gŸeof
 == 0) {

30 
msgÀn
;

31 
ßdb_msg
 *
msgp
;

33 
msgÀn
 = 
	`Ród
(
s
, &
buf
, (buf));

34 
msgp
 = (
ßdb_msg
 *)&
buf
;

35 
	`¥öt_ßdb_msg
(
msgp
, 
msgÀn
);

36 i‡(
msgp
->
ßdb_msg_£q
 == 0)

37 
gŸeof
 = 1;

39 
	`˛o£
(
s
);

40 
	}
}

43 
	$maö
(
¨gc
, **
¨gv
)

45 
ßty≥
 = 
SADB_SATYPE_UNSPEC
;

46 
c
;

48 
›ãº
 = 0;

49  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t:")) != -1) {

50 
c
) {

52 i‡((
ßty≥
 = 
	`gëßty≥by«me
(
›èrg
)) == -1)

53 
	`îr_quô
("övÆid -à›ti⁄ %s", 
›èrg
);

57 
	`îr_quô
("uƒecognized o±i⁄: %c", 
c
);

61 
	`ßdb_dump
(
ßty≥
);

62 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/name.c

1 
	~"u≈.h
"

2 
	~<√t/pfkeyv2.h
>

4 
	sidli°
 {

5 
	mvÆ
;

6 c⁄° *
	m«me
;

9 
idli°
 
	gßty≥
[] = {

10 { 
SADB_SATYPE_UNSPEC
, "unspec" },

11 { 
SADB_SATYPE_AH
, "ah" },

12 { 
SADB_SATYPE_ESP
, "esp" },

13 { 
SADB_SATYPE_RSVP
, "rsvp" },

14 { 
SADB_SATYPE_OSPFV2
, "ospfv2" },

15 { 
SADB_SATYPE_RIPV2
, "ripv2" },

16 { 
SADB_SATYPE_MIP
, "mip" },

17 { 0, 
NULL
 } };

19 
idli°
 
	gahÆg
[] = {

20 { 
SADB_AALG_NONE
, "none" },

21 { 
SADB_AALG_MD5HMAC
, "HMAC-MD5-96" },

22 { 
SADB_AALG_SHA1HMAC
, "HMAC-SHA-1-96" },

23 { 0, 
NULL
 } };

25 
idli°
 
	ge•Æg
[] = {

26 { 
SADB_EALG_NONE
, "none" },

27 { 
SADB_EALG_DESCBC
, "DES-CBC" },

28 { 
SADB_EALG_3DESCBC
, "3DES-CBC" },

29 { 
SADB_EALG_NULL
, "NULL" },

30 { 0, 
NULL
 } };

33 
	$idli°lookup
(*
«me
, 
idli°
 *
û
)

35 ; 
û
->
«me
 !
NULL
; il++) {

36 i‡(
	`°rcmp
(
«me
, 
û
->name) == 0)

37  
û
->
vÆ
;

40 
	}
}

43 
	$gëßty≥by«me
(*
«me
)

45  
	`idli°lookup
(
«me
, 
ßty≥
);

46 
	}
}

49 
	$gëßÆgby«me
(
ty≥
, *
«me
)

51 
ty≥
) {

52 
SADB_SATYPE_AH
:

53  
	`idli°lookup
(
«me
, 
ahÆg
);

54 
SADB_SATYPE_ESP
:

55  
	`idli°lookup
(
«me
, 
e•Æg
);

59 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/printsadbmsg.c

1 
	~"u≈.h
"

2 
	~<√t/pfkeyv2.h
>

5 
	$gë_ßdb_msg_ty≥
(
ty≥
)

7 
buf
[100];

8 
ty≥
) {

9 
SADB_RESERVED
:  "Reserved";

10 
SADB_GETSPI
:  "Get SPI";

11 
SADB_UPDATE
:  "Update";

12 
SADB_ADD
:  "Add";

13 
SADB_DELETE
:  "Delete";

14 
SADB_GET
:  "Get";

15 
SADB_ACQUIRE
:  "Acquire";

16 
SADB_REGISTER
:  "Register";

17 
SADB_EXPIRE
:  "Expire";

18 
SADB_FLUSH
:  "Flush";

19 
SADB_DUMP
:  "Dump";

20 : 
	`•rötf
(
buf
, "[Unknow¿ty≥ %d]", 
ty≥
);

21  
buf
;

23 
	}
}

26 
	$gë_ßdb_ßty≥
(
ty≥
)

28 
buf
[100];

29 
ty≥
) {

30 
SADB_SATYPE_UNSPEC
:  "Unspecified";

31 
SADB_SATYPE_AH
:  "IPsec AH";

32 
SADB_SATYPE_ESP
:  "IPsec ESP";

33 
SADB_SATYPE_RSVP
:  "RSVP";

34 
SADB_SATYPE_OSPFV2
:  "OSPFv2";

35 
SADB_SATYPE_RIPV2
:  "RIPv2";

36 
SADB_SATYPE_MIP
:  "Mobile IP";

37 : 
	`•rötf
(
buf
, "[Unknow¿ßty≥ %d]", 
ty≥
);

38  
buf
;

40 
	}
}

43 
	$gë_auth_Æg
(
Æg
)

45 
buf
[100];

46 
Æg
) {

47 
SADB_AALG_NONE
:  "None";

48 
SADB_AALG_MD5HMAC
:  "HMAC-MD5";

49 
SADB_AALG_SHA1HMAC
:  "HMAC-SHA-1";

50 #ifde‡
SADB_X_AALG_MD5


51 
SADB_X_AALG_MD5
:  "Keyed MD5";

53 #ifde‡
SADB_X_AALG_SHA


54 
SADB_X_AALG_SHA
:  "Keyed SHA-1";

56 #ifde‡
SADB_X_AALG_NULL


57 
SADB_X_AALG_NULL
:  "Null";

59 #ifde‡
SADB_X_AALG_SHA2_256


60 
SADB_X_AALG_SHA2_256
:  "SHA2-256";

62 #ifde‡
SADB_X_AALG_SHA2_384


63 
SADB_X_AALG_SHA2_384
:  "SHA2-384";

65 #ifde‡
SADB_X_AALG_SHA2_512


66 
SADB_X_AALG_SHA2_512
:  "SHA2-512";

68 : 
	`•rötf
(
buf
, "[Unknow¿authítiˇti⁄álg‹ôhm %d]", 
Æg
);

69  
buf
;

71 
	}
}

74 
	$gë_í¸y±_Æg
(
Æg
)

76 
buf
[100];

77 
Æg
) {

78 
SADB_EALG_NONE
:  "None";

79 
SADB_EALG_DESCBC
:  "DES-CBC";

80 
SADB_EALG_3DESCBC
:  "3DES-CBC";

81 
SADB_EALG_NULL
:  "Null";

82 #ifde‡
SADB_X_EALG_CAST128CBC


83 
SADB_X_EALG_CAST128CBC
:  "CAST128-CBC";

85 #ifde‡
SADB_X_EALG_BLOWFISHCBC


86 
SADB_X_EALG_BLOWFISHCBC
:  "Blowfish-CBC";

88 #ifde‡
SADB_X_EALG_AES


89 
SADB_X_EALG_AES
:  "AES";

91 : 
	`•rötf
(
buf
, "[Unknow¿í¸y±i⁄álg‹ôhm %d]", 
Æg
);

92  
buf
;

94 
	}
}

97 
	$gë_ß_°©e
(
°©e
)

99 
buf
[100];

100 
°©e
) {

101 
SADB_SASTATE_LARVAL
:  "Larval";

102 
SADB_SASTATE_MATURE
:  "Mature";

103 
SADB_SASTATE_DYING
:  "Dying";

104 
SADB_SASTATE_DEAD
:  "Dead";

105 : 
	`•rötf
(
buf
, "[Unknow¿SA sèã %d]", 
°©e
);

106  
buf
;

108 
	}
}

111 
	$gë_ßdb_Æg_ty≥
(
Æg
, 
authíc
)

113 i‡(
authíc
 =
SADB_EXT_SUPPORTED_AUTH
) {

114  
	`gë_auth_Æg
(
Æg
);

116  
	`gë_í¸y±_Æg
(
Æg
);

118 
	}
}

121 
	$ß_¥öt
(
ßdb_ext
 *
ext
)

123 
ßdb_ß
 *
ß
 = (ßdb_ß *)
ext
;

124 
	`¥ötf
(" SA: SPI=%d Replay Window=%d State=%s\n",

125 
ß
->
ßdb_ß_•i
, sa->
ßdb_ß_ª∂ay
,

126 
	`gë_ß_°©e
(
ß
->
ßdb_ß_°©e
));

127 
	`¥ötf
(" Authentication Algorithm: %s\n",

128 
	`gë_auth_Æg
(
ß
->
ßdb_ß_auth
));

129 
	`¥ötf
(" Encryption Algorithm: %s\n",

130 
	`gë_í¸y±_Æg
(
ß
->
ßdb_ß_í¸y±
));

131 i‡(
ß
->
ßdb_ß_Êags
 & 
SADB_SAFLAGS_PFS
)

132 
	`¥ötf
(" Perfect Forward Secrecy\n");

133 
	}
}

136 
	$suµ‹ãd_¥öt
(
ßdb_ext
 *
ext
)

138 
ßdb_suµ‹ãd
 *
sup
 = (ßdb_suµ‹ãd *)
ext
;

139 
ßdb_Æg
 *
Æg
;

140 
Àn
;

142 
	`¥ötf
(" Supported %sálgorithms:\n",

143 
sup
->
ßdb_suµ‹ãd_exây≥
 =
SADB_EXT_SUPPORTED_AUTH
 ?

146 
Àn
 = 
sup
->
ßdb_suµ‹ãd_Àn
 * 8;

147 
Àn
 -(*
sup
);

148 i‡(
Àn
 == 0) {

149 
	`¥ötf
(" None\n");

152 
Æg
 = (
ßdb_Æg
 *)(
sup
 + 1); 
Àn
>0;Üen -= (*alg),álg++) {

153 
	`¥ötf
(" %s ivlen %d bits %d-%d\n",

154 
	`gë_ßdb_Æg_ty≥
(
Æg
->
ßdb_Æg_id
, 
sup
->
ßdb_suµ‹ãd_exây≥
),

155 
Æg
->
ßdb_Æg_ivÀn
,álg->
ßdb_Æg_möbôs
,álg->
ßdb_Æg_maxbôs
);

157 
	}
}

160 
	$li„time_¥öt
(
ßdb_ext
 *
ext
)

162 
ßdb_li„time
 *
li„
 = (ßdb_li„timê*)
ext
;

164 
	`¥ötf
(" %sÜifetime:\n",

165 
li„
->
ßdb_li„time_exây≥
 =
SADB_EXT_LIFETIME_CURRENT
 ?

167 
li„
->
ßdb_li„time_exây≥
 =
SADB_EXT_LIFETIME_HARD
 ?

170 
	`¥ötf
(" %dáŒoˇti⁄s, %d byãs", 
li„
->
ßdb_li„time_Æloˇti⁄s
,

171 
li„
->
ßdb_li„time_byãs
);

172 i‡(
li„
->
ßdb_li„time_exây≥
 =
SADB_EXT_LIFETIME_CURRENT
) {

173 
time_t
 
t
;

174 
tmp
 *
tm
;

175 
buf
[100];

178 
t
 = 
li„
->
ßdb_li„time_addtime
;

179 
tm
 = 
	`loˇ…ime
(&
t
);

180 
	`°r·ime
(
buf
, (buf), "%c", 
tm
);

181 
	`¥ötf
("\¿áddedáà%s, ", 
buf
);

182 i‡(
li„
->
ßdb_li„time_u£time
 == 0) {

183 
	`¥ötf
("never used\n");

185 
t
 = 
li„
->
ßdb_li„time_u£time
;

186 
tm
 = 
	`loˇ…ime
(&
t
);

187 
	`°r·ime
(
buf
, (buf), "%c", 
tm
);

188 
	`¥ötf
("fú° u£dáà%s\n", 
buf
);

191 
	`¥ötf
("%dáddtime, %d u£time\n", 
li„
->
ßdb_li„time_addtime
,

192 
li„
->
ßdb_li„time_u£time
);

194 
	}
}

197 
	$addªss_¥öt
(
ßdb_ext
 *
ext
)

199 
ßdb_addªss
 *
addr
 = (ßdb_addªs†*)
ext
;

200 
sockaddr
 *
ß
;

202 
	`¥ötf
(" %sáddress: ",

203 
addr
->
ßdb_addªss_exây≥
 =
SADB_EXT_ADDRESS_SRC
 ?

205 
addr
->
ßdb_addªss_exây≥
 =
SADB_EXT_ADDRESS_DST
 ?

208 
ß
 = (
sockaddr
 *)(
addr
 + 1);

209 
	`¥ötf
(" %s", 
	`sock_¡›
(
ß
, 
addr
->
ßdb_addªss_Àn
 * 8 - (*addr)));

210 i‡(
addr
->
ßdb_addªss_¥efixÀn
 == 0)

211 
	`¥ötf
(" ");

213 
	`¥ötf
("/%d ", 
addr
->
ßdb_addªss_¥efixÀn
);

214 
addr
->
ßdb_addªss_¥Ÿo
) {

215 
IPPROTO_UDP
: 
	`¥ötf
("(UDP)"); ;

216 
IPPROTO_TCP
: 
	`¥ötf
("(TCP)"); ;

218 : 
	`¥ötf
("(IPÖrŸÿ%d)", 
addr
->
ßdb_addªss_¥Ÿo
);

221 
	`¥ötf
("\n");

222 
	}
}

225 
	$key_¥öt
(
ßdb_ext
 *
ext
)

227 
ßdb_key
 *
key
 = (ßdb_key *)
ext
;

228 
bôs
;

229 *
p
;

231 
	`¥ötf
(" %s key, %d bits: 0x",

232 
key
->
ßdb_key_exây≥
 =
SADB_EXT_KEY_AUTH
 ?

234 
key
->
ßdb_key_bôs
);

235 
p
 = (*)(
key
 + 1), 
bôs
 = key->
ßdb_key_bôs
;

236 
bôs
 > 0; 
p
++, bits -= 8)

237 
	`¥ötf
("%02x", *
p
);

238 
	`¥ötf
("\n");

239 
	}
}

242 
	$¥öt_ßdb_msg
(
ßdb_msg
 *
msg
, 
msgÀn
)

244 
ßdb_ext
 *
ext
;

246 i‡(
msgÀn
 !
msg
->
ßdb_msg_Àn
 * 8) {

247 
	`îr_msg
("SADB MessageÜength (%d) doesn't match msglen (%d)\n",

248 
msg
->
ßdb_msg_Àn
 * 8, 
msgÀn
);

251 i‡(
msg
->
ßdb_msg_vîsi⁄
 !
PF_KEY_V2
) {

252 
	`îr_msg
("SADB Message versionÇot PF_KEY_V2\n");

255 
	`¥ötf
("SADB Message %s,Érrno %d, satype %s, seq %d,Öid %d\n",

256 
	`gë_ßdb_msg_ty≥
(
msg
->
ßdb_msg_ty≥
), msg->
ßdb_msg_î∫o
,

257 
	`gë_ßdb_ßty≥
(
msg
->
ßdb_msg_ßty≥
), msg->
ßdb_msg_£q
,

258 
msg
->
ßdb_msg_pid
);

259 i‡(
msg
->
ßdb_msg_î∫o
 != 0)

260 
	`¥ötf
("Éºnÿ%s\n", 
	`°ªº‹
(
msg
->
ßdb_msg_î∫o
));

261 i‡(
msgÀn
 =(
ßdb_msg
))

263 
msgÀn
 -(
ßdb_msg
);

264 
ext
 = (
ßdb_ext
 *)(
msg
 + 1);

265 
msgÀn
 > 0) {

266 
ext
->
ßdb_ext_ty≥
) {

267 
SADB_EXT_RESERVED
: 
	`¥ötf
(" Reserved Extension\n"); ;

268 
SADB_EXT_SA
: 
	`ß_¥öt
(
ext
); ;

269 
SADB_EXT_LIFETIME_CURRENT
:

270 
SADB_EXT_LIFETIME_HARD
:

271 
SADB_EXT_LIFETIME_SOFT
:

272 
	`li„time_¥öt
(
ext
); ;

273 
SADB_EXT_ADDRESS_SRC
:

274 
SADB_EXT_ADDRESS_DST
:

275 
SADB_EXT_ADDRESS_PROXY
:

276 
	`addªss_¥öt
(
ext
); ;

277 
SADB_EXT_KEY_AUTH
:

278 
SADB_EXT_KEY_ENCRYPT
:

279 
	`key_¥öt
(
ext
); ;

280 
SADB_EXT_IDENTITY_SRC
:

281 
SADB_EXT_IDENTITY_DST
:

282 
	`¥ötf
(" [identity...]\n"); ;

283 
SADB_EXT_SENSITIVITY
:

284 
	`¥ötf
(" [sensitivity...]\n"); ;

285 
SADB_EXT_PROPOSAL
:

286 
	`¥ötf
(" [proposal...]\n"); ;

287 
SADB_EXT_SUPPORTED_AUTH
:

288 
SADB_EXT_SUPPORTED_ENCRYPT
:

289 
	`suµ‹ãd_¥öt
(
ext
); ;

290 
SADB_EXT_SPIRANGE
:

291 
	`¥ötf
(" [spirange...]\n"); ;

292 : 
	`¥ötf
(" [unknow¿exãnsi⁄ %d]\n", 
ext
->
ßdb_ext_ty≥
);

294 
msgÀn
 -
ext
->
ßdb_ext_Àn
 << 3;

295 
ext
 = (*Îxà+ (ext->
ßdb_ext_Àn
 << 3);

297 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/register.c

1 
	~"u≈.h
"

2 
	~<√t/pfkeyv2.h
>

6 
	$ßdb_ªgi°î
(
ty≥
)

8 
s
;

9 
buf
[4096];

10 
ßdb_msg
 
msg
;

11 
gŸeof
;

12 
mypid
;

14 
s
 = 
	`Sockë
(
PF_KEY
, 
SOCK_RAW
, 
PF_KEY_V2
);

16 
mypid
 = 
	`gëpid
();

19 
	`bzîo
(&
msg
, (msg));

20 
msg
.
ßdb_msg_vîsi⁄
 = 
PF_KEY_V2
;

21 
msg
.
ßdb_msg_ty≥
 = 
SADB_REGISTER
;

22 
msg
.
ßdb_msg_ßty≥
 = 
ty≥
;

23 
msg
.
ßdb_msg_Àn
 = (msg) / 8;

24 
msg
.
ßdb_msg_pid
 = 
mypid
;

25 
	`¥ötf
("SendingÑegister message:\n");

26 
	`¥öt_ßdb_msg
(&
msg
, (msg));

27 
	`Wrôe
(
s
, &
msg
, (msg));

29 
	`¥ötf
("\nReplyÑeturned:\n");

32 
msgÀn
;

33 
ßdb_msg
 *
msgp
;

35 
msgÀn
 = 
	`Ród
(
s
, &
buf
, (buf));

36 
msgp
 = (
ßdb_msg
 *)&
buf
;

37 i‡(
msgp
->
ßdb_msg_pid
 =
mypid
 &&

38 
msgp
->
ßdb_msg_ty≥
 =
SADB_REGISTER
) {

39 
	`¥öt_ßdb_msg
(
msgp
, 
msgÀn
);

43 
	`˛o£
(
s
);

44 
	}
}

48 
	$maö
(
¨gc
, **
¨gv
)

50 
ßty≥
 = 
SADB_SATYPE_UNSPEC
;

51 
c
;

53 
›ãº
 = 0;

54  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "t:")) != -1) {

55 
c
) {

57 i‡((
ßty≥
 = 
	`gëßty≥by«me
(
›èrg
)) == -1)

58 
	`îr_quô
("övÆid -à›ti⁄ %s", 
›èrg
);

62 
	`îr_quô
("uƒecognized o±i⁄: %c", 
c
);

66 i‡(
ßty≥
 =
SADB_SATYPE_UNSPEC
) {

67 
	`îr_quô
("must specify SAÅype");

70 
	`ßdb_ªgi°î
(
ßty≥
);

71 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/key/unp.h

4 #i‚def 
__u≈_h


5 
	#__u≈_h


	)

7 
	~"../c⁄fig.h
"

13 
	~<sys/ty≥s.h
>

14 
	~<sys/sockë.h
>

15 
	~<sys/time.h
>

16 
	~<time.h
>

17 
	~<√töë/ö.h
>

18 
	~<¨∑/öë.h
>

19 
	~<î∫o.h
>

20 
	~<f˙é.h
>

21 
	~<√tdb.h
>

22 
	~<sig«l.h
>

23 
	~<°dio.h
>

24 
	~<°dlib.h
>

25 
	~<°rög.h
>

26 
	~<sys/°©.h
>

27 
	~<sys/uio.h
>

28 
	~<uni°d.h
>

29 
	~<sys/waô.h
>

30 
	~<sys/un.h
>

32 #ifdef 
HAVE_SYS_SELECT_H


33 
	~<sys/£À˘.h
>

36 #ifdef 
HAVE_SYS_SYSCTL_H


37 
	~<sys/sys˘l.h
>

40 #ifdef 
HAVE_POLL_H


41 
	~<pﬁl.h
>

44 #ifdef 
HAVE_STRINGS_H


45 
	~<°rögs.h
>

51 #ifdef 
HAVE_SYS_IOCTL_H


52 
	~<sys/io˘l.h
>

54 #ifdef 
HAVE_SYS_FILIO_H


55 
	~<sys/fûio.h
>

57 #ifdef 
HAVE_SYS_SOCKIO_H


58 
	~<sys/sockio.h
>

61 #ifdef 
HAVE_PTHREAD_H


62 
	~<±hªad.h
>

65 #ifde‡
HAVE_NET_IF_DL_H


66 
	~<√t/if_dl.h
>

70 #ifdef 
__osf__


71 #unde‡
ªcv


72 #unde‡
£nd


73 
	#ªcv
(
a
,
b
,
c
,
d
Ë
	`ªcv‰om
◊,b,c,d,0,0)

	)

74 
	#£nd
(
a
,
b
,
c
,
d
Ë
	`£ndto
◊,b,c,d,0,0)

	)

77 #i‚def 
INADDR_NONE


79 
	#INADDR_NONE
 0xfffffff‡

	)

82 #i‚def 
SHUT_RD


83 
	#SHUT_RD
 0

	)

84 
	#SHUT_WR
 1

	)

85 
	#SHUT_RDWR
 2

	)

92 #i‚de‡
INET_ADDRSTRLEN


94 
	#INET_ADDRSTRLEN
 16

	)

100 #i‚de‡
INET6_ADDRSTRLEN


102 
	#INET6_ADDRSTRLEN
 46

	)

110 #i‚def 
HAVE_BZERO


111 
	#bzîo
(
±r
,
n
Ë
	`mem£t
’å, 0,Ç)

	)

117 #i‚def 
HAVE_GETHOSTBYNAME2


118 
	#gëho°by«me2
(
ho°
,
Ámûy
Ë
	`gëho°by«me
((ho°))

	)

122 
	sö_pktöfo
 {

123 
ö_addr
 
	mùi_addr
;

124 
	mùi_ifödex
;

133 #i‚def 
CMSG_LEN


135 
	#CMSG_LEN
(
size
Ë((
cmsghdr
Ë+ (size))

	)

137 #i‚def 
CMSG_SPACE


139 
	#CMSG_SPACE
(
size
Ë((
cmsghdr
Ë+ (size))

	)

145 #i‚def 
SUN_LEN


147 
	#SUN_LEN
(
su
) \

148 ((*(
su
)Ë- ((su)->
sun_∑th
Ë+ 
	`°æí
((su)->sun_∑th))

	)

153 #i‚def 
AF_LOCAL


154 
	#AF_LOCAL
 
AF_UNIX


	)

156 #i‚def 
PF_LOCAL


157 
	#PF_LOCAL
 
PF_UNIX


	)

164 #i‚de‡
INFTIM


165 
	#INFTIM
 (-1Ë

	)

167 #ifdef 
HAVE_POLL_H


168 
	#INFTIM_UNPH


	)

174 
	#LISTENQ
 1024

	)

177 
	#MAXLINE
 4096

	)

178 
	#MAXSOCKADDR
 128

	)

179 
	#BUFFSIZE
 8192

	)

182 
	#SERV_PORT
 9877

	)

183 
	#SERV_PORT_STR
 "9877"

	)

184 
	#UNIXSTR_PATH
 "/tmp/unix.°r"

	)

185 
	#UNIXDG_PATH
 "/tmp/unix.dg"

	)

195 
	#SA
 
sockaddr


	)

197 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

199 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

202 
	tSigfunc
();

204 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

205 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

207 #i‚def 
HAVE_ADDRINFO_STRUCT


208 
	~"../lib/addröfo.h
"

211 #i‚def 
HAVE_IF_NAMEINDEX_STRUCT


212 
	sif_«meödex
 {

213 
	mif_ödex
;

214 *
	mif_«me
;

221 #i‚def 
HAVE_TIMESPEC_STRUCT


222 
	stime•ec
 {

223 
time_t
 
	mtv_£c
;

224 
	mtv_n£c
;

233 
c⁄√˘_n⁄b
(, c⁄° 
SA
 *, 
sockÀn_t
, );

234 
c⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

235 
d´m⁄_öô
(const *, );

236 
d´m⁄_öëd
(const *, );

237 
dg_˛i
(
FILE
 *, , c⁄° 
SA
 *, 
sockÀn_t
);

238 
dg_echo
(, 
SA
 *, 
sockÀn_t
);

239 
Ámûy_to_Àvñ
();

240 *
gf_time
();

241 
hóπbót_˛i
(, , );

242 
hóπbót_£rv
(, , );

243 
addröfo
 *
ho°_£rv
(const *, const *, , );

244 
öë_§¸t_add
(*, );

245 
u_ch¨
 *
öë_§¸t_öô
();

246 
öë_§¸t_¥öt
(
u_ch¨
 *, );

247 **
my_addrs
(*);

248 
ªadabÀ_timeo
(, );

249 
ssize_t
 
ªadlöe
(, *, 
size_t
);

250 
ssize_t
 
ªadn
(, *, 
size_t
);

251 
ssize_t
 
ªad_fd
(, *, 
size_t
, *);

252 
ssize_t
 
ªcv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

253 
ö_pktöfo
 *);

254 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

255 
sock_böd_wûd
(, );

256 
sock_cmp_addr
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

257 
sock_cmp_p‹t
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

258 
sock_gë_p‹t
(c⁄° 
SA
 *, 
sockÀn_t
);

259 
sock_£t_addr
(
SA
 *, 
sockÀn_t
, const *);

260 
sock_£t_p‹t
(
SA
 *, 
sockÀn_t
, );

261 
sock_£t_wûd
(
SA
 *, 
sockÀn_t
);

262 *
sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

263 *
sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

264 
sockfd_to_Ámûy
();

265 
°r_echo
();

266 
°r_˛i
(
FILE
 *, );

267 
t˝_c⁄√˘
(const *, const *);

268 
t˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

269 
tv_sub
(
timevÆ
 *, timeval *);

270 
udp_˛õ¡
(c⁄° *, c⁄° *, **, 
sockÀn_t
 *);

271 
udp_c⁄√˘
(const *, const *);

272 
udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

273 
wrôabÀ_timeo
(, );

274 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

275 
ssize_t
 
wrôe_fd
(, *, 
size_t
, );

277 #ifdef 
MCAST


278 
mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

279 
mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

280 
mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

281 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

282 
mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

283 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

284 c⁄° *
i‚ame
, 
u_öt
 
ifödex
);

285 
mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

286 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

287 
mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

288 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

289 
mˇ°_gë_if
();

290 
mˇ°_gë_lo›
();

291 
mˇ°_gë_âl
();

292 
mˇ°_£t_if
(, c⁄° *, 
u_öt
);

293 
mˇ°_£t_lo›
(, );

294 
mˇ°_£t_âl
(, );

296 
Mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

297 
Mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

298 
Mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

299 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

300 
Mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

301 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

302 c⁄° *
i‚ame
, 
u_öt
 
ifödex
);

303 
Mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

304 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

305 
Mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

306 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

307 
Mˇ°_gë_if
();

308 
Mˇ°_gë_lo›
();

309 
Mˇ°_gë_âl
();

310 
Mˇ°_£t_if
(, c⁄° *, 
u_öt
);

311 
Mˇ°_£t_lo›
(, );

312 
Mˇ°_£t_âl
(, );

315 
ö_cksum
(*, );

317 #i‚def 
HAVE_GETADDRINFO_PROTO


318 
gëaddröfo
(c⁄° *, c⁄° *, c⁄° 
addröfo
 *,

319 
addröfo
 **);

320 
‰ìaddröfo
(
addröfo
 *);

321 *
gai_°ªº‹
();

324 #i‚def 
HAVE_GETNAMEINFO_PROTO


325 
gë«meöfo
(c⁄° 
SA
 *, 
sockÀn_t
, *, 
size_t
, *, size_t, );

328 #i‚def 
HAVE_GETHOSTNAME_PROTO


329 
gëho°«me
(*, );

332 #i‚def 
HAVE_HSTRERROR_PROTO


333 c⁄° *
h°ªº‹
();

336 #i‚def 
HAVE_IF_NAMETOINDEX_PROTO


337 
if_«mëoödex
(const *);

338 *
if_ödext⁄ame
(, *);

339 
if_‰ì«meödex
(
if_«meödex
 *);

340 
if_«meödex
 *if_nameindex();

343 #i‚def 
HAVE_INET_PTON_PROTO


344 
öë_±⁄
(, const *, *);

345 c⁄° *
öë_¡›
(, c⁄° *, *, 
size_t
);

348 #i‚def 
HAVE_INET_ATON_PROTO


349 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

352 #i‚def 
HAVE_ISFDTYPE_PROTO


353 
isfdty≥
(, );

356 #i‚def 
HAVE_PSELECT_PROTO


357 
p£À˘
(, 
fd_£t
 *, fd_set *, fd_set *,

358 c⁄° 
time•ec
 *, c⁄° 
sig£t_t
 *);

361 #i‚def 
HAVE_SOCKATMARK_PROTO


362 
sock©m¨k
();

365 #i‚def 
HAVE_SNPRINTF_PROTO


366 
¢¥ötf
(*, 
size_t
, const *, ...);

370 
C⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

371 
Famûy_to_Àvñ
();

372 
addröfo
 *
Ho°_£rv
(const *, const *, , );

373 c⁄° *
I√t_¡›
(, c⁄° *, *, 
size_t
);

374 
I√t_±⁄
(, const *, *);

375 *
If_ödext⁄ame
(, *);

376 
If_«mëoödex
(const *);

377 
if_«meödex
 *
If_«meödex
();

378 **
My_addrs
(*);

379 
ssize_t
 
Ród_fd
(, *, 
size_t
, *);

380 
RódabÀ_timeo
(, );

381 
ssize_t
 
Recv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

382 
ö_pktöfo
 *);

383 
Sigfunc
 *
Sig«l
(, Sigfunc *);

384 
Sigfunc
 *
Sig«l_öå
(, Sigfunc *);

385 
Sock_böd_wûd
(, );

386 *
Sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

387 *
Sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

388 
Sockfd_to_Ámûy
();

389 
T˝_c⁄√˘
(const *, const *);

390 
T˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

391 
Udp_˛õ¡
(c⁄° *, c⁄° *, **, 
sockÀn_t
 *);

392 
Udp_c⁄√˘
(const *, const *);

393 
Udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

394 
ssize_t
 
Wrôe_fd
(, *, 
size_t
, );

395 
WrôabÀ_timeo
(, );

398 *
CÆloc
(
size_t
, size_t);

399 
Clo£
();

400 
Dup2
(, );

401 
F˙é
(, , );

402 
Gëtimeofday
(
timevÆ
 *, *);

403 
Io˘l
(, , *);

404 
pid_t
 
F‹k
();

405 *
MÆloc
(
size_t
);

406 
Mk°emp
(*);

407 *
Mm≠
(*, 
size_t
, , , , 
off_t
);

408 
O≥n
(c⁄° *, , 
mode_t
);

409 
Pùe
(*
fds
);

410 
ssize_t
 
Ród
(, *, 
size_t
);

411 
Sigadd£t
(
sig£t_t
 *, );

412 
Sigdñ£t
(
sig£t_t
 *, );

413 
Sigem±y£t
(
sig£t_t
 *);

414 
Sigfûl£t
(
sig£t_t
 *);

415 
Sigismembî
(c⁄° 
sig£t_t
 *, );

416 
Sig≥ndög
(
sig£t_t
 *);

417 
Sig¥ocmask
(, c⁄° 
sig£t_t
 *, sigset_t *);

418 *
Sådup
(const *);

419 
Sysc⁄f
();

420 
Sys˘l
(*, 
u_öt
, *, 
size_t
 *, *, size_t);

421 
U∆ök
(const *);

422 
pid_t
 
Waô
(*);

423 
pid_t
 
Waôpid
(pid_t, *, );

424 
Wrôe
(, *, 
size_t
);

427 
F˛o£
(
FILE
 *);

428 
FILE
 *
Fd›í
(, const *);

429 *
Fgës
(*, , 
FILE
 *);

430 
FILE
 *
F›í
(const *, const *);

431 
Fputs
(c⁄° *, 
FILE
 *);

434 
Ac˚±
(, 
SA
 *, 
sockÀn_t
 *);

435 
Böd
(, c⁄° 
SA
 *, 
sockÀn_t
);

436 
C⁄√˘
(, c⁄° 
SA
 *, 
sockÀn_t
);

437 
Gë≥î«me
(, 
SA
 *, 
sockÀn_t
 *);

438 
Gësock«me
(, 
SA
 *, 
sockÀn_t
 *);

439 
Gësock›t
(, , , *, 
sockÀn_t
 *);

440 
Isfdty≥
(, );

441 
Li°í
(, );

442 #ifdef 
HAVE_POLL


443 
Pﬁl
(
pﬁlfd
 *, , );

445 
ssize_t
 
Ródlöe
(, *, 
size_t
);

446 
ssize_t
 
Ródn
(, *, 
size_t
);

447 
ssize_t
 
Recv
(, *, 
size_t
, );

448 
ssize_t
 
Recv‰om
(, *, 
size_t
, , 
SA
 *, 
sockÀn_t
 *);

449 
ssize_t
 
Recvmsg
(, 
msghdr
 *, );

450 
Sñe˘
(, 
fd_£t
 *, fd_£à*, fd_£à*, 
timevÆ
 *);

451 
Síd
(, c⁄° *, 
size_t
, );

452 
Sídto
(, c⁄° *, 
size_t
, , c⁄° 
SA
 *, 
sockÀn_t
);

453 
Sídmsg
(, c⁄° 
msghdr
 *, );

454 
Sësock›t
(, , , c⁄° *, 
sockÀn_t
);

455 
Shutdown
(, );

456 
Sock©m¨k
();

457 
Sockë
(, , );

458 
Sockë∑ú
(, , , *);

459 
Wrôí
(, *, 
size_t
);

461 
îr_dump
(const *, ...);

462 
îr_msg
(const *, ...);

463 
îr_quô
(const *, ...);

464 
îr_ªt
(const *, ...);

465 
îr_sys
(const *, ...);

	@/media/sf_ddrive/progs/network/unpv13e/lib/addrinfo.h

1 #i‚def 
__addröfo_h


2 
	#__addröfo_h


	)

10 
	saddröfo
 {

11 
	mai_Êags
;

12 
	mai_Ámûy
;

13 
	mai_sockty≥
;

14 
	mai_¥Ÿocﬁ
;

15 
size_t
 
	mai_addæí
;

16 *
	mai_ˇn⁄«me
;

17 
sockaddr
 *
	mai_addr
;

18 
addröfo
 *
	mai_√xt
;

22 
	#AI_PASSIVE
 1

	)

23 
	#AI_CANONNAME
 2

	)

26 
	#NI_MAXHOST
 1025

	)

27 
	#NI_MAXSERV
 32

	)

29 
	#NI_NOFQDN
 1

	)

30 
	#NI_NUMERICHOST
 2

	)

31 
	#NI_NAMEREQD
 4

	)

32 
	#NI_NUMERICSERV
 8

	)

33 
	#NI_DGRAM
 16

	)

36 
	#EAI_ADDRFAMILY
 1

	)

37 
	#EAI_AGAIN
 2

	)

38 
	#EAI_BADFLAGS
 3

	)

39 
	#EAI_FAIL
 4

	)

40 
	#EAI_FAMILY
 5

	)

41 
	#EAI_MEMORY
 6

	)

42 
	#EAI_NODATA
 7

	)

43 
	#EAI_NONAME
 8

	)

44 
	#EAI_SERVICE
 9

	)

45 
	#EAI_SOCKTYPE
 10

	)

46 
	#EAI_SYSTEM
 11

	)

	@/media/sf_ddrive/progs/network/unpv13e/lib/connect_nonb.c

1 
	~"u≈.h
"

4 
	$c⁄√˘_n⁄b
(
sockfd
, c⁄° 
SA
 *
ß±r
, 
sockÀn_t
 
ßÀn
, 
n£c
)

6 
Êags
, 
n
, 
îr‹
;

7 
sockÀn_t
 
Àn
;

8 
fd_£t
 
r£t
, 
w£t
;

9 
timevÆ
 
tvÆ
;

11 
Êags
 = 
	`F˙é
(
sockfd
, 
F_GETFL
, 0);

12 
	`F˙é
(
sockfd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

14 
îr‹
 = 0;

15 i‡–(
n
 = 
	`c⁄√˘
(
sockfd
, 
ß±r
, 
ßÀn
)) < 0)

16 i‡(
î∫o
 !
EINPROGRESS
)

21 i‡(
n
 == 0)

22 
d⁄e
;

24 
	`FD_ZERO
(&
r£t
);

25 
	`FD_SET
(
sockfd
, &
r£t
);

26 
w£t
 = 
r£t
;

27 
tvÆ
.
tv_£c
 = 
n£c
;

28 
tvÆ
.
tv_u£c
 = 0;

30 i‡–(
n
 = 
	`Sñe˘
(
sockfd
+1, &
r£t
, &
w£t
, 
NULL
,

31 
n£c
 ? &
tvÆ
 : 
NULL
)) == 0) {

32 
	`˛o£
(
sockfd
);

33 
î∫o
 = 
ETIMEDOUT
;

37 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
Ë|| FD_ISSET(sockfd, &
w£t
)) {

38 
Àn
 = (
îr‹
);

39 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr‹
, &
Àn
) < 0)

42 
	`îr_quô
("selectÉrror: sockfdÇot set");

44 
d⁄e
:

45 
	`F˙é
(
sockfd
, 
F_SETFL
, 
Êags
);

47 i‡(
îr‹
) {

48 
	`˛o£
(
sockfd
);

49 
î∫o
 = 
îr‹
;

53 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/connect_timeo.c

2 
	~"u≈.h
"

4 
c⁄√˘_Æ¨m
();

7 
	$c⁄√˘_timeo
(
sockfd
, c⁄° 
SA
 *
ß±r
, 
sockÀn_t
 
ßÀn
, 
n£c
)

9 
Sigfunc
 *
sigfunc
;

10 
n
;

12 
sigfunc
 = 
	`Sig«l
(
SIGALRM
, 
c⁄√˘_Æ¨m
);

13 i‡(
	`Æ¨m
(
n£c
) != 0)

14 
	`îr_msg
("connect_timeo:álarm wasálready set");

16 i‡–(
n
 = 
	`c⁄√˘
(
sockfd
, 
ß±r
, 
ßÀn
)) < 0) {

17 
	`˛o£
(
sockfd
);

18 i‡(
î∫o
 =
EINTR
)

19 
î∫o
 = 
ETIMEDOUT
;

21 
	`Æ¨m
(0);

22 
	`Sig«l
(
SIGALRM
, 
sigfunc
);

24 (
n
);

25 
	}
}

28 
	$c⁄√˘_Æ¨m
(
signo
)

31 
	}
}

35 
	$C⁄√˘_timeo
(
fd
, c⁄° 
SA
 *
ß
, 
sockÀn_t
 
ßÀn
, 
£c
)

37 i‡(
	`c⁄√˘_timeo
(
fd
, 
ß
, 
ßÀn
, 
£c
) < 0)

38 
	`îr_sys
("connect_timeoÉrror");

39 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/daemon_inetd.c

1 
	~"u≈.h
"

2 
	~<sy¶og.h
>

4 
d´m⁄_¥oc
;

7 
	$d´m⁄_öëd
(c⁄° *
≤ame
, 
Ácûôy
)

9 
d´m⁄_¥oc
 = 1;

10 
	`›ílog
(
≤ame
, 
LOG_PID
, 
Ácûôy
);

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/daemon_init.c

1 
	~"u≈.h
"

2 
	~<sy¶og.h
>

4 
	#MAXFD
 64

	)

6 
d´m⁄_¥oc
;

9 
	$d´m⁄_öô
(c⁄° *
≤ame
, 
Ácûôy
)

11 
i
;

12 
pid_t
 
pid
;

14 i‡–(
pid
 = 
	`F‹k
()) < 0)

16 i‡(
pid
)

17 
	`_exô
(0);

21 i‡(
	`£tsid
() < 0)

24 
	`Sig«l
(
SIGHUP
, 
SIG_IGN
);

25 i‡–(
pid
 = 
	`F‹k
()) < 0)

27 i‡(
pid
)

28 
	`_exô
(0);

32 
d´m⁄_¥oc
 = 1;

34 
	`chdú
("/");

37 
i
 = 0; i < 
MAXFD
; i++)

38 
	`˛o£
(
i
);

41 
	`›í
("/dev/nuŒ", 
O_RDONLY
);

42 
	`›í
("/dev/nuŒ", 
O_RDWR
);

43 
	`›í
("/dev/nuŒ", 
O_RDWR
);

45 
	`›ílog
(
≤ame
, 
LOG_PID
, 
Ácûôy
);

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/dg_cli.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

11 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

13 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

15 
ªcvlöe
[
n
] = 0;

16 
	`Fputs
(
ªcvlöe
, 
°dout
);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/dg_echo.c

1 
	~"u≈.h
"

4 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

6 
n
;

7 
sockÀn_t
 
Àn
;

8 
mesg
[
MAXLINE
];

11 
Àn
 = 
˛ûí
;

12 
n
 = 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
p˛üddr
, &
Àn
);

14 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
p˛üddr
, 
Àn
);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/error.c

1 
	~"u≈.h
"

3 
	~<°d¨g.h
>

4 
	~<sy¶og.h
>

6 
	gd´m⁄_¥oc
;

8 
îr_doô
(, , c⁄° *, 
va_li°
);

14 
	$îr_ªt
(c⁄° *
fmt
, ...)

16 
va_li°
 
≠
;

18 
	`va_°¨t
(
≠
, 
fmt
);

19 
	`îr_doô
(1, 
LOG_INFO
, 
fmt
, 
≠
);

20 
	`va_íd
(
≠
);

22 
	}
}

28 
	$îr_sys
(c⁄° *
fmt
, ...)

30 
va_li°
 
≠
;

32 
	`va_°¨t
(
≠
, 
fmt
);

33 
	`îr_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

34 
	`va_íd
(
≠
);

35 
	`exô
(1);

36 
	}
}

42 
	$îr_dump
(c⁄° *
fmt
, ...)

44 
va_li°
 
≠
;

46 
	`va_°¨t
(
≠
, 
fmt
);

47 
	`îr_doô
(1, 
LOG_ERR
, 
fmt
, 
≠
);

48 
	`va_íd
(
≠
);

49 
	`ab‹t
();

50 
	`exô
(1);

51 
	}
}

57 
	$îr_msg
(c⁄° *
fmt
, ...)

59 
va_li°
 
≠
;

61 
	`va_°¨t
(
≠
, 
fmt
);

62 
	`îr_doô
(0, 
LOG_INFO
, 
fmt
, 
≠
);

63 
	`va_íd
(
≠
);

65 
	}
}

71 
	$îr_quô
(c⁄° *
fmt
, ...)

73 
va_li°
 
≠
;

75 
	`va_°¨t
(
≠
, 
fmt
);

76 
	`îr_doô
(0, 
LOG_ERR
, 
fmt
, 
≠
);

77 
	`va_íd
(
≠
);

78 
	`exô
(1);

79 
	}
}

85 
	$îr_doô
(
î∫oÊag
, 
Àvñ
, c⁄° *
fmt
, 
va_li°
 
≠
)

87 
î∫o_ßve
, 
n
;

88 
buf
[
MAXLINE
 + 1];

90 
î∫o_ßve
 = 
î∫o
;

91 #ifdef 
HAVE_VSNPRINTF


92 
	`v¢¥ötf
(
buf
, 
MAXLINE
, 
fmt
, 
≠
);

94 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

96 
n
 = 
	`°æí
(
buf
);

97 i‡(
î∫oÊag
)

98 
	`¢¥ötf
(
buf
 + 
n
, 
MAXLINE
 -Ç, ": %s", 
	`°ªº‹
(
î∫o_ßve
));

99 
	`°rˇt
(
buf
, "\n");

101 i‡(
d´m⁄_¥oc
) {

102 
	`sy¶og
(
Àvñ
, 
buf
);

104 
	`fÊush
(
°dout
);

105 
	`Âuts
(
buf
, 
°dîr
);

106 
	`fÊush
(
°dîr
);

109 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/family_to_level.c

1 
	~"u≈.h
"

4 
	$Ámûy_to_Àvñ
(
Ámûy
)

6 
Ámûy
) {

7 
AF_INET
:

8  
IPPROTO_IP
;

9 #ifdef 
IPV6


10 
AF_INET6
:

11  
IPPROTO_IPV6
;

16 
	}
}

19 
	$Famûy_to_Àvñ
(
Ámûy
)

21 
rc
;

23 i‡–(
rc
 = 
	`Ámûy_to_Àvñ
(
Ámûy
)) < 0)

24 
	`îr_sys
("family_to_levelÉrror");

26 (
rc
);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/get_ifi_info.c

2 
	~"u≈ifi.h
"

4 
ifi_öfo
 *

5 
	$gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)

7 
ifi_öfo
 *
ifi
, *
ifihód
, **
ifù√xt
;

8 
sockfd
, 
Àn
, 
œ°Àn
, 
Êags
, 
myÊags
, 
idx
 = 0, 
hÀn
 = 0;

9 *
±r
, *
buf
, 
œ°«me
[
IFNAMSIZ
], *
˝å
, *
haddr
, *
sd ame
;

10 
ifc⁄f
 
ifc
;

11 
i‰eq
 *
i‰
, 
i‰c›y
;

12 
sockaddr_ö
 *
sö±r
;

13 
sockaddr_ö6
 *
sö6±r
;

15 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

17 
œ°Àn
 = 0;

18 
Àn
 = 100 * (
i‰eq
);

20 
buf
 = 
	`MÆloc
(
Àn
);

21 
ifc
.
ifc_Àn
 = 
Àn
;

22 
ifc
.
ifc_buf
 = 
buf
;

23 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFCONF
, &
ifc
) < 0) {

24 i‡(
î∫o
 !
EINVAL
 || 
œ°Àn
 != 0)

25 
	`îr_sys
("ioctlÉrror");

27 i‡(
ifc
.
ifc_Àn
 =
œ°Àn
)

29 
œ°Àn
 = 
ifc
.
ifc_Àn
;

31 
Àn
 +10 * (
i‰eq
);

32 
	`‰ì
(
buf
);

34 
ifihód
 = 
NULL
;

35 
ifù√xt
 = &
ifihód
;

36 
œ°«me
[0] = 0;

37 
sd ame
 = 
NULL
;

41 
±r
 = 
buf
;Öå < bu‡+ 
ifc
.
ifc_Àn
; ) {

42 
i‰
 = (
i‰eq
 *Ë
±r
;

44 #ifdef 
HAVE_SOCKADDR_SA_LEN


45 
Àn
 = 
	`max
((
sockaddr
), 
i‰
->
i‰_addr
.
ß_Àn
);

47 
i‰
->
i‰_addr
.
ß_Ámûy
) {

48 #ifdef 
IPV6


49 
AF_INET6
:

50 
Àn
 = (
sockaddr_ö6
);

53 
AF_INET
:

55 
Àn
 = (
sockaddr
);

59 
±r
 +(
i‰
->
i‰_«me
Ë+ 
Àn
;

61 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


63 i‡(
i‰
->
i‰_addr
.
ß_Ámûy
 =
AF_LINK
) {

64 
sockaddr_dl
 *
sdl
 = (sockaddr_d»*)&
i‰
->
i‰_addr
;

65 
sd ame
 = 
i‰
->
i‰_«me
;

66 
idx
 = 
sdl
->
sdl_ödex
;

67 
haddr
 = 
sdl
->
sdl_d©a
 + sdl->
sdl_∆í
;

68 
hÀn
 = 
sdl
->
sdl_Æí
;

72 i‡(
i‰
->
i‰_addr
.
ß_Ámûy
 !
Ámûy
)

75 
myÊags
 = 0;

76 i‡–(
˝å
 = 
	`°rchr
(
i‰
->
i‰_«me
, ':')Ë!
NULL
)

77 *
˝å
 = 0;

78 i‡(
	`°∫cmp
(
œ°«me
, 
i‰
->
i‰_«me
, 
IFNAMSIZ
) == 0) {

79 i‡(
dﬂlü£s
 == 0)

81 
myÊags
 = 
IFI_ALIAS
;

83 
	`mem˝y
(
œ°«me
, 
i‰
->
i‰_«me
, 
IFNAMSIZ
);

85 
i‰c›y
 = *
i‰
;

86 
	`Io˘l
(
sockfd
, 
SIOCGIFFLAGS
, &
i‰c›y
);

87 
Êags
 = 
i‰c›y
.
i‰_Êags
;

88 i‡((
Êags
 & 
IFF_UP
) == 0)

93 
ifi
 = 
	`CÆloc
(1, (
ifi_öfo
));

94 *
ifù√xt
 = 
ifi
;

95 
ifù√xt
 = &
ifi
->
ifi_√xt
;

97 
ifi
->
ifi_Êags
 = 
Êags
;

98 
ifi
->
ifi_myÊags
 = 
myÊags
;

99 #i‡
	`deföed
(
SIOCGIFMTU
Ë&& deföed(
HAVE_STRUCT_IFREQ_IFR_MTU
)

100 
	`Io˘l
(
sockfd
, 
SIOCGIFMTU
, &
i‰c›y
);

101 
ifi
->
ifi_mtu
 = 
i‰c›y
.
i‰_mtu
;

103 
ifi
->
ifi_mtu
 = 0;

105 
	`mem˝y
(
ifi
->
ifi_«me
, 
i‰
->
i‰_«me
, 
IFI_NAME
);

106 
ifi
->
ifi_«me
[
IFI_NAME
-1] = '\0';

108 i‡(
sd ame
 =
NULL
 || 
	`°rcmp
(sd ame, 
i‰
->
i‰_«me
) != 0)

109 
idx
 = 
hÀn
 = 0;

110 
ifi
->
ifi_ödex
 = 
idx
;

111 
ifi
->
ifi_hÀn
 = 
hÀn
;

112 i‡(
ifi
->
ifi_hÀn
 > 
IFI_HADDR
)

113 
ifi
->
ifi_hÀn
 = 
IFI_HADDR
;

114 i‡(
hÀn
)

115 
	`mem˝y
(
ifi
->
ifi_haddr
, 
haddr
, ifi->
ifi_hÀn
);

118 
i‰
->
i‰_addr
.
ß_Ámûy
) {

119 
AF_INET
:

120 
sö±r
 = (
sockaddr_ö
 *Ë&
i‰
->
i‰_addr
;

121 
ifi
->
ifi_addr
 = 
	`CÆloc
(1, (
sockaddr_ö
));

122 
	`mem˝y
(
ifi
->
ifi_addr
, 
sö±r
, (
sockaddr_ö
));

124 #ifdef 
SIOCGIFBRDADDR


125 i‡(
Êags
 & 
IFF_BROADCAST
) {

126 
	`Io˘l
(
sockfd
, 
SIOCGIFBRDADDR
, &
i‰c›y
);

127 
sö±r
 = (
sockaddr_ö
 *Ë&
i‰c›y
.
i‰_brﬂdaddr
;

128 
ifi
->
ifi_brdaddr
 = 
	`CÆloc
(1, (
sockaddr_ö
));

129 
	`mem˝y
(
ifi
->
ifi_brdaddr
, 
sö±r
, (
sockaddr_ö
));

133 #ifdef 
SIOCGIFDSTADDR


134 i‡(
Êags
 & 
IFF_POINTOPOINT
) {

135 
	`Io˘l
(
sockfd
, 
SIOCGIFDSTADDR
, &
i‰c›y
);

136 
sö±r
 = (
sockaddr_ö
 *Ë&
i‰c›y
.
i‰_d°addr
;

137 
ifi
->
ifi_d°addr
 = 
	`CÆloc
(1, (
sockaddr_ö
));

138 
	`mem˝y
(
ifi
->
ifi_d°addr
, 
sö±r
, (
sockaddr_ö
));

143 
AF_INET6
:

144 
sö6±r
 = (
sockaddr_ö6
 *Ë&
i‰
->
i‰_addr
;

145 
ifi
->
ifi_addr
 = 
	`CÆloc
(1, (
sockaddr_ö6
));

146 
	`mem˝y
(
ifi
->
ifi_addr
, 
sö6±r
, (
sockaddr_ö6
));

148 #ifdef 
SIOCGIFDSTADDR


149 i‡(
Êags
 & 
IFF_POINTOPOINT
) {

150 
	`Io˘l
(
sockfd
, 
SIOCGIFDSTADDR
, &
i‰c›y
);

151 
sö6±r
 = (
sockaddr_ö6
 *Ë&
i‰c›y
.
i‰_d°addr
;

152 
ifi
->
ifi_d°addr
 = 
	`CÆloc
(1, (
sockaddr_ö6
));

153 
	`mem˝y
(
ifi
->
ifi_d°addr
, 
sö6±r
, (
sockaddr_ö6
));

162 
	`‰ì
(
buf
);

163 (
ifihód
);

164 
	}
}

169 
	$‰ì_ifi_öfo
(
ifi_öfo
 *
ifihód
)

171 
ifi_öfo
 *
ifi
, *
iföext
;

173 
ifi
 = 
ifihód
; ifò!
NULL
; ifò
iföext
) {

174 i‡(
ifi
->
ifi_addr
 !
NULL
)

175 
	`‰ì
(
ifi
->
ifi_addr
);

176 i‡(
ifi
->
ifi_brdaddr
 !
NULL
)

177 
	`‰ì
(
ifi
->
ifi_brdaddr
);

178 i‡(
ifi
->
ifi_d°addr
 !
NULL
)

179 
	`‰ì
(
ifi
->
ifi_d°addr
);

180 
iföext
 = 
ifi
->
ifi_√xt
;

181 
	`‰ì
(
ifi
);

183 
	}
}

186 
ifi_öfo
 *

187 
	$Gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)

189 
ifi_öfo
 *
ifi
;

191 i‡–(
ifi
 = 
	`gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)Ë=
NULL
)

192 
	`îr_quô
("get_ifi_infoÉrror");

193 (
ifi
);

194 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/gf_time.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$gf_time
()

7 
timevÆ
 
tv
;

8 
time_t
 
t
;

9 
°r
[30];

10 *
±r
;

12 i‡(
	`gëtimeofday
(&
tv
, 
NULL
) < 0)

13 
	`îr_sys
("gettimeofdayÉrror");

15 
t
 = 
tv
.
tv_£c
;

16 
±r
 = 
	`˘ime
(&
t
);

17 
	`°r˝y
(
°r
, &
±r
[11]);

20 
	`¢¥ötf
(
°r
+8, (°r)-8, ".%06ld", 
tv
.
tv_u£c
);

22 (
°r
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/host_serv.c

2 
	~"u≈.h
"

4 
addröfo
 *

5 
	$ho°_£rv
(c⁄° *
ho°
, c⁄° *
£rv
, 
Ámûy
, 
sockty≥
)

7 
n
;

8 
addröfo
 
höts
, *
ªs
;

10 
	`bzîo
(&
höts
, (
addröfo
));

11 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

12 
höts
.
ai_Ámûy
 = 
Ámûy
;

13 
höts
.
ai_sockty≥
 = 
sockty≥
;

15 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

16 (
NULL
);

18 (
ªs
);

19 
	}
}

29 
addröfo
 *

30 
	$Ho°_£rv
(c⁄° *
ho°
, c⁄° *
£rv
, 
Ámûy
, 
sockty≥
)

32 
n
;

33 
addröfo
 
höts
, *
ªs
;

35 
	`bzîo
(&
höts
, (
addröfo
));

36 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

37 
höts
.
ai_Ámûy
 = 
Ámûy
;

38 
höts
.
ai_sockty≥
 = 
sockty≥
;

40 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

41 
	`îr_quô
("host_servÉrror for %s, %s: %s",

42 (
ho°
 =
NULL
) ? "(no hostname)" : host,

43 (
£rv
 =
NULL
) ? "(no serviceÇame)" : serv,

44 
	`gai_°ªº‹
(
n
));

46 (
ªs
);

47 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/hstrerror.c

9 
	~"u≈.h
"

12 
	$h°ªº‹
(
îr
)

14 i‡(
îr
 == 0)

17 i‡(
îr
 =
HOST_NOT_FOUND
)

20 i‡(
îr
 =
TRY_AGAIN
)

23 i‡(
îr
 =
NO_RECOVERY
)

26 i‡(
îr
 =
NO_DATA
)

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/if_indextoname.c

1 
	~"u≈.h
"

10 
	$if_ödext⁄ame
(
ödex
, *
«me
)

12 (
NULL
);

13 
	}
}

16 
	$If_ödext⁄ame
(
ödex
, *
«me
)

18 *
±r
;

20 i‡–(
±r
 = 
	`if_ödext⁄ame
(
ödex
, 
«me
)Ë=
NULL
)

21 
	`îr_quô
("if_ödext⁄amêîr‹ f‹ %d", 
ödex
);

22 (
±r
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/if_nameindex.c

1 
	~"u≈.h
"

9 
if_«meödex
 *

10 
	$if_«meödex
()

12 (
NULL
);

13 
	}
}

16 
	$if_‰ì«meödex
(
if_«meödex
 *
±r
)

18 
	}
}

20 
if_«meödex
 *

21 
	$If_«meödex
()

23 
if_«meödex
 *
iÂå
;

25 i‡–(
iÂå
 = 
	`if_«meödex
()Ë=
NULL
)

26 
	`îr_quô
("if_nameindexÉrror");

27 (
iÂå
);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/if_nametoindex.c

1 
	~"u≈.h
"

10 
	$if_«mëoödex
(c⁄° *
«me
)

13 
	}
}

16 
	$If_«mëoödex
(c⁄° *
«me
)

18 
ödex
;

20 i‡–(
ödex
 = 
	`if_«mëoödex
(
«me
)) == 0)

21 
	`îr_quô
("if_«mëoödexÉº‹ f‹ %s", 
«me
);

22 (
ödex
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/in6addr_any.c

1 
	~"u≈.h
"

3 #ifdef 
IPV6


4 c⁄° 
ö6_addr
 
	gö6addr_™y
;

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_if.c

1 
	~"u≈.h
"

4 
	$mˇ°_gë_if
(
sockfd
)

6 
	`sockfd_to_Ámûy
(
sockfd
)) {

7 
AF_INET
: {

12 #ifdef 
IPV6


13 
AF_INET6
: {

14 
u_öt
 
idx
;

15 
sockÀn_t
 
Àn
;

17 
Àn
 = (
idx
);

18 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_IF
,

19 &
idx
, &
Àn
) < 0)

21 (
idx
);

26 
î∫o
 = 
EAFNOSUPPORT
;

29 
	}
}

32 
	$Mˇ°_gë_if
(
sockfd
)

34 
rc
;

36 i‡–(
rc
 = 
	`mˇ°_gë_if
(
sockfd
)) < 0)

37 
	`îr_sys
("mcast_get_ifÉrror");

38 (
rc
);

39 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_loop.c

1 
	~"u≈.h
"

4 
	$mˇ°_gë_lo›
(
sockfd
)

6 
	`sockfd_to_Ámûy
(
sockfd
)) {

7 
AF_INET
: {

8 
u_ch¨
 
Êag
;

9 
sockÀn_t
 
Àn
;

11 
Àn
 = (
Êag
);

12 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_LOOP
,

13 &
Êag
, &
Àn
) < 0)

15 (
Êag
);

18 #ifdef 
IPV6


19 
AF_INET6
: {

20 
u_öt
 
Êag
;

21 
sockÀn_t
 
Àn
;

23 
Àn
 = (
Êag
);

24 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_LOOP
,

25 &
Êag
, &
Àn
) < 0)

27 (
Êag
);

32 
î∫o
 = 
EAFNOSUPPORT
;

35 
	}
}

38 
	$Mˇ°_gë_lo›
(
sockfd
)

40 
rc
;

42 i‡–(
rc
 = 
	`mˇ°_gë_lo›
(
sockfd
)) < 0)

43 
	`îr_sys
("mcast_get_loopÉrror");

44 (
rc
);

45 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_ttl.c

1 
	~"u≈.h
"

4 
	$mˇ°_gë_âl
(
sockfd
)

6 
	`sockfd_to_Ámûy
(
sockfd
)) {

7 
AF_INET
: {

8 
u_ch¨
 
âl
;

9 
sockÀn_t
 
Àn
;

11 
Àn
 = (
âl
);

12 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_TTL
,

13 &
âl
, &
Àn
) < 0)

15 (
âl
);

18 #ifdef 
IPV6


19 
AF_INET6
: {

20 
h›
;

21 
sockÀn_t
 
Àn
;

23 
Àn
 = (
h›
);

24 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_HOPS
,

25 &
h›
, &
Àn
) < 0)

27 (
h›
);

32 
î∫o
 = 
EAFNOSUPPORT
;

35 
	}
}

38 
	$Mˇ°_gë_âl
(
sockfd
)

40 
rc
;

42 i‡–(
rc
 = 
	`mˇ°_gë_âl
(
sockfd
)) < 0)

43 
	`îr_sys
("mcast_get_ttlÉrror");

44 (
rc
);

45 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_join.c

2 
	~"u≈.h
"

3 
	~<√t/if.h
>

6 
	$mˇ°_joö
(
sockfd
, c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

7 c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

9 #ifde‡
MCAST_JOIN_GROUP


10 
group_ªq
 
ªq
;

11 i‡(
ifödex
 > 0) {

12 
ªq
.
gr_öãrÁ˚
 = 
ifödex
;

13 } i‡(
i‚ame
 !
NULL
) {

14 i‡–(
ªq
.
gr_öãrÁ˚
 = 
	`if_«mëoödex
(
i‚ame
)) == 0) {

15 
î∫o
 = 
ENXIO
;

19 
ªq
.
gr_öãrÁ˚
 = 0;

20 i‡(
gΩÀn
 > (
ªq
.
gr_group
)) {

21 
î∫o
 = 
EINVAL
;

24 
	`mem˝y
(&
ªq
.
gr_group
, 
gΩ
, 
gΩÀn
);

25  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

26 
MCAST_JOIN_GROUP
, &
ªq
, (req)));

31 
gΩ
->
ß_Ámûy
) {

32 
AF_INET
: {

33 
ù_mªq
 
mªq
;

34 
i‰eq
 ifreq;

36 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

37 &((c⁄° 
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

38 (
ö_addr
));

40 i‡(
ifödex
 > 0) {

41 i‡(
	`if_ödext⁄ame
(
ifödex
, 
i‰eq
.
i‰_«me
Ë=
NULL
) {

42 
î∫o
 = 
ENXIO
;

45 
doio˘l
;

46 } i‡(
i‚ame
 !
NULL
) {

47 
	`°∫˝y
(
i‰eq
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

48 
doio˘l
:

49 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFADDR
, &
i‰eq
) < 0)

51 
	`mem˝y
(&
mªq
.
imr_öãrÁ˚
,

52 &((
sockaddr_ö
 *Ë&
i‰eq
.
i‰_addr
)->
sö_addr
,

53 (
ö_addr
));

55 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

57 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_ADD_MEMBERSHIP
,

58 &
mªq
, (mreq)));

63 #ifdef 
IPV6


64 #i‚def 
IPV6_JOIN_GROUP


65 
	#IPV6_JOIN_GROUP
 
IPV6_ADD_MEMBERSHIP


	)

67 
AF_INET6
: {

68 
ùv6_mªq
 
mªq6
;

70 
	`mem˝y
(&
mªq6
.
ùv6mr_mu…üddr
,

71 &((c⁄° 
sockaddr_ö6
 *Ë
gΩ
)->
sö6_addr
,

72 (
ö6_addr
));

74 i‡(
ifödex
 > 0) {

75 
mªq6
.
ùv6mr_öãrÁ˚
 = 
ifödex
;

76 } i‡(
i‚ame
 !
NULL
) {

77 i‡–(
mªq6
.
ùv6mr_öãrÁ˚
 = 
	`if_«mëoödex
(
i‚ame
)) == 0) {

78 
î∫o
 = 
ENXIO
;

82 
mªq6
.
ùv6mr_öãrÁ˚
 = 0;

84 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_JOIN_GROUP
,

85 &
mªq6
, (mreq6)));

90 
î∫o
 = 
EAFNOSUPPORT
;

94 
	}
}

98 
	$Mˇ°_joö
(
sockfd
, c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

99 c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

101 i‡(
	`mˇ°_joö
(
sockfd
, 
gΩ
, 
gΩÀn
, 
i‚ame
, 
ifödex
) < 0)

102 
	`îr_sys
("mcast_joinÉrror");

103 
	}
}

106 
	$mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

107 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

108 c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

110 #ifde‡
MCAST_JOIN_SOURCE_GROUP


111 
group_sour˚_ªq
 
ªq
;

112 i‡(
ifödex
 > 0) {

113 
ªq
.
g§_öãrÁ˚
 = 
ifödex
;

114 } i‡(
i‚ame
 !
NULL
) {

115 i‡–(
ªq
.
g§_öãrÁ˚
 = 
	`if_«mëoödex
(
i‚ame
)) == 0) {

116 
î∫o
 = 
ENXIO
;

120 
ªq
.
g§_öãrÁ˚
 = 0;

121 i‡(
gΩÀn
 > (
ªq
.
g§_group
Ë|| 
§˛í
 > ‘eq.
g§_sour˚
)) {

122 
î∫o
 = 
EINVAL
;

125 
	`mem˝y
(&
ªq
.
g§_group
, 
gΩ
, 
gΩÀn
);

126 
	`mem˝y
(&
ªq
.
g§_sour˚
, 
§c
, 
§˛í
);

127  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

128 
MCAST_JOIN_SOURCE_GROUP
, &
ªq
, (req)));

130 
gΩ
->
ß_Ámûy
) {

131 #ifde‡
IP_ADD_SOURCE_MEMBERSHIP


132 
AF_INET
: {

133 
ù_mªq_sour˚
 
mªq
;

134 
i‰eq
 ifreq;

136 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

137 &((
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

138 (
ö_addr
));

139 
	`mem˝y
(&
mªq
.
imr_sour˚addr
,

140 &((
sockaddr_ö
 *Ë
§c
)->
sö_addr
,

141 (
ö_addr
));

143 i‡(
ifödex
 > 0) {

144 i‡(
	`if_ödext⁄ame
(
ifödex
, 
i‰eq
.
i‰_«me
Ë=
NULL
) {

145 
î∫o
 = 
ENXIO
;

148 
doio˘l
;

149 } i‡(
i‚ame
 !
NULL
) {

150 
	`°∫˝y
(
i‰eq
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

151 
doio˘l
:

152 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFADDR
, &
i‰eq
) < 0)

154 
	`mem˝y
(&
mªq
.
imr_öãrÁ˚
,

155 &((
sockaddr_ö
 *Ë&
i‰eq
.
i‰_addr
)->
sö_addr
,

156 (
ö_addr
));

158 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

160 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_ADD_SOURCE_MEMBERSHIP
,

161 &
mªq
, (mreq)));

165 #ifdef 
IPV6


166 
AF_INET6
:

169 
î∫o
 = 
EAFNOSUPPORT
;

173 
	}
}

176 
	$Mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

177 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

178 c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

180 i‡(
	`mˇ°_joö_sour˚_group
(
sockfd
, 
§c
, 
§˛í
, 
gΩ
, 
gΩÀn
,

181 
i‚ame
, 
ifödex
) < 0)

182 
	`îr_sys
("mcast_join_source_groupÉrror");

183 
	}
}

186 
	$mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

187 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

189 #ifde‡
MCAST_BLOCK_SOURCE


190 
group_sour˚_ªq
 
ªq
;

191 
ªq
.
g§_öãrÁ˚
 = 0;

192 i‡(
gΩÀn
 > (
ªq
.
g§_group
Ë|| 
§˛í
 > ‘eq.
g§_sour˚
)) {

193 
î∫o
 = 
EINVAL
;

196 
	`mem˝y
(&
ªq
.
g§_group
, 
gΩ
, 
gΩÀn
);

197 
	`mem˝y
(&
ªq
.
g§_sour˚
, 
§c
, 
§˛í
);

198  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

199 
MCAST_BLOCK_SOURCE
, &
ªq
, (req)));

201 
gΩ
->
ß_Ámûy
) {

202 #ifde‡
IP_BLOCK_SOURCE


203 
AF_INET
: {

204 
ù_mªq_sour˚
 
mªq
;

206 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

207 &((
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

208 (
ö_addr
));

209 
	`mem˝y
(&
mªq
.
imr_sour˚addr
,

210 &((
sockaddr_ö
 *Ë
§c
)->
sö_addr
,

211 (
ö_addr
));

212 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

214 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_BLOCK_SOURCE
,

215 &
mªq
, (mreq)));

219 #ifdef 
IPV6


220 
AF_INET6
:

223 
î∫o
 = 
EAFNOSUPPORT
;

227 
	}
}

230 
	$Mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

231 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

233 i‡(
	`mˇ°_block_sour˚
(
sockfd
, 
§c
, 
§˛í
, 
gΩ
, 
gΩÀn
) < 0)

234 
	`îr_sys
("mcast_block_sourceÉrror");

235 
	}
}

238 
	$mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

239 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

241 #ifde‡
MCAST_UNBLOCK_SOURCE


242 
group_sour˚_ªq
 
ªq
;

243 
ªq
.
g§_öãrÁ˚
 = 0;

244 i‡(
gΩÀn
 > (
ªq
.
g§_group
Ë|| 
§˛í
 > ‘eq.
g§_sour˚
)) {

245 
î∫o
 = 
EINVAL
;

248 
	`mem˝y
(&
ªq
.
g§_group
, 
gΩ
, 
gΩÀn
);

249 
	`mem˝y
(&
ªq
.
g§_sour˚
, 
§c
, 
§˛í
);

250  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

251 
MCAST_UNBLOCK_SOURCE
, &
ªq
, (req)));

253 
gΩ
->
ß_Ámûy
) {

254 #ifde‡
IP_UNBLOCK_SOURCE


255 
AF_INET
: {

256 
ù_mªq_sour˚
 
mªq
;

258 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

259 &((
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

260 (
ö_addr
));

261 
	`mem˝y
(&
mªq
.
imr_sour˚addr
,

262 &((
sockaddr_ö
 *Ë
§c
)->
sö_addr
,

263 (
ö_addr
));

264 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

266 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_UNBLOCK_SOURCE
,

267 &
mªq
, (mreq)));

271 #ifdef 
IPV6


272 
AF_INET6
:

275 
î∫o
 = 
EAFNOSUPPORT
;

279 
	}
}

282 
	$Mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

283 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

285 i‡(
	`mˇ°_unblock_sour˚
(
sockfd
, 
§c
, 
§˛í
, 
gΩ
, 
gΩÀn
) < 0)

286 
	`îr_sys
("mcast_unblock_sourceÉrror");

287 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_leave.c

1 
	~"u≈.h
"

4 
	$mˇ°_Àave
(
sockfd
, c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

6 #ifde‡
MCAST_JOIN_GROUP


7 
group_ªq
 
ªq
;

8 
ªq
.
gr_öãrÁ˚
 = 0;

9 i‡(
gΩÀn
 > (
ªq
.
gr_group
)) {

10 
î∫o
 = 
EINVAL
;

13 
	`mem˝y
(&
ªq
.
gr_group
, 
gΩ
, 
gΩÀn
);

14  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

15 
MCAST_LEAVE_GROUP
, &
ªq
, (req)));

17 
gΩ
->
ß_Ámûy
) {

18 
AF_INET
: {

19 
ù_mªq
 
mªq
;

21 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

22 &((c⁄° 
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

23 (
ö_addr
));

24 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

25 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_DROP_MEMBERSHIP
,

26 &
mªq
, (mreq)));

29 #ifdef 
IPV6


30 #i‚def 
IPV6_LEAVE_GROUP


31 
	#IPV6_LEAVE_GROUP
 
IPV6_DROP_MEMBERSHIP


	)

33 
AF_INET6
: {

34 
ùv6_mªq
 
mªq6
;

36 
	`mem˝y
(&
mªq6
.
ùv6mr_mu…üddr
,

37 &((c⁄° 
sockaddr_ö6
 *Ë
gΩ
)->
sö6_addr
,

38 (
ö6_addr
));

39 
mªq6
.
ùv6mr_öãrÁ˚
 = 0;

40 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_LEAVE_GROUP
,

41 &
mªq6
, (mreq6)));

46 
î∫o
 = 
EAFNOSUPPORT
;

50 
	}
}

53 
	$Mˇ°_Àave
(
sockfd
, c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

55 i‡(
	`mˇ°_Àave
(
sockfd
, 
gΩ
, 
gΩÀn
) < 0)

56 
	`îr_sys
("mcast_leaveÉrror");

57 
	}
}

60 
	$mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

61 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

63 #ifde‡
MCAST_LEAVE_SOURCE_GROUP


64 
group_sour˚_ªq
 
ªq
;

65 
ªq
.
g§_öãrÁ˚
 = 0;

66 i‡(
gΩÀn
 > (
ªq
.
g§_group
Ë|| 
§˛í
 > ‘eq.
g§_sour˚
)) {

67 
î∫o
 = 
EINVAL
;

70 
	`mem˝y
(&
ªq
.
g§_group
, 
gΩ
, 
gΩÀn
);

71 
	`mem˝y
(&
ªq
.
g§_sour˚
, 
§c
, 
§˛í
);

72  (
	`£tsock›t
(
sockfd
, 
	`Ámûy_to_Àvñ
(
gΩ
->
ß_Ámûy
),

73 
MCAST_LEAVE_SOURCE_GROUP
, &
ªq
, (req)));

75 
gΩ
->
ß_Ámûy
) {

76 #ifde‡
IP_DROP_SOURCE_MEMBERSHIP


77 
AF_INET
: {

78 
ù_mªq_sour˚
 
mªq
;

80 
	`mem˝y
(&
mªq
.
imr_mu…üddr
,

81 &((
sockaddr_ö
 *Ë
gΩ
)->
sö_addr
,

82 (
ö_addr
));

83 
	`mem˝y
(&
mªq
.
imr_sour˚addr
,

84 &((
sockaddr_ö
 *Ë
§c
)->
sö_addr
,

85 (
ö_addr
));

86 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

88 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_DROP_SOURCE_MEMBERSHIP
,

89 &
mªq
, (mreq)));

93 #ifdef 
IPV6


94 
AF_INET6
:

97 
î∫o
 = 
EAFNOSUPPORT
;

101 
	}
}

104 
	$Mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

105 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
)

107 i‡(
	`mˇ°_Àave_sour˚_group
(
sockfd
, 
§c
, 
§˛í
, 
gΩ
, 
gΩÀn
) < 0)

108 
	`îr_sys
("mcast_leave_source_groupÉrror");

109 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_if.c

1 
	~"u≈.h
"

2 
	~<√t/if.h
>

5 
	$mˇ°_£t_if
(
sockfd
, c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

7 
	`sockfd_to_Ámûy
(
sockfd
)) {

8 
AF_INET
: {

9 
ö_addr
 
öaddr
;

10 
i‰eq
 ifreq;

12 i‡(
ifödex
 > 0) {

13 i‡(
	`if_ödext⁄ame
(
ifödex
, 
i‰eq
.
i‰_«me
Ë=
NULL
) {

14 
î∫o
 = 
ENXIO
;

17 
doio˘l
;

18 } i‡(
i‚ame
 !
NULL
) {

19 
	`°∫˝y
(
i‰eq
.
i‰_«me
, 
i‚ame
, 
IFNAMSIZ
);

20 
doio˘l
:

21 i‡(
	`io˘l
(
sockfd
, 
SIOCGIFADDR
, &
i‰eq
) < 0)

23 
	`mem˝y
(&
öaddr
,

24 &((
sockaddr_ö
 *Ë&
i‰eq
.
i‰_addr
)->
sö_addr
,

25 (
ö_addr
));

27 
öaddr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

29 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_IF
,

30 &
öaddr
, (
ö_addr
)));

33 #ifdef 
IPV6


34 
AF_INET6
: {

35 
u_öt
 
idx
;

37 i‡–(
idx
 = 
ifödex
) == 0) {

38 i‡(
i‚ame
 =
NULL
) {

39 
î∫o
 = 
EINVAL
;

42 i‡–(
idx
 = 
	`if_«mëoödex
(
i‚ame
)) == 0) {

43 
î∫o
 = 
ENXIO
;

47 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_IF
,

48 &
idx
, (idx)));

53 
î∫o
 = 
EAFNOSUPPORT
;

56 
	}
}

59 
	$Mˇ°_£t_if
(
sockfd
, c⁄° *
i‚ame
, 
u_öt
 
ifödex
)

61 i‡(
	`mˇ°_£t_if
(
sockfd
, 
i‚ame
, 
ifödex
) < 0)

62 
	`îr_sys
("mcast_set_ifÉrror");

63 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_loop.c

2 
	~"u≈.h
"

5 
	$mˇ°_£t_lo›
(
sockfd
, 
⁄off
)

7 
	`sockfd_to_Ámûy
(
sockfd
)) {

8 
AF_INET
: {

9 
u_ch¨
 
Êag
;

11 
Êag
 = 
⁄off
;

12 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_LOOP
,

13 &
Êag
, (flag)));

16 #ifdef 
IPV6


17 
AF_INET6
: {

18 
u_öt
 
Êag
;

20 
Êag
 = 
⁄off
;

21 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_LOOP
,

22 &
Êag
, (flag)));

27 
î∫o
 = 
EAFNOSUPPORT
;

30 
	}
}

34 
	$Mˇ°_£t_lo›
(
sockfd
, 
⁄off
)

36 i‡(
	`mˇ°_£t_lo›
(
sockfd
, 
⁄off
) < 0)

37 
	`îr_sys
("mcast_set_loopÉrror");

38 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_ttl.c

1 
	~"u≈.h
"

4 
	$mˇ°_£t_âl
(
sockfd
, 
vÆ
)

6 
	`sockfd_to_Ámûy
(
sockfd
)) {

7 
AF_INET
: {

8 
u_ch¨
 
âl
;

10 
âl
 = 
vÆ
;

11 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_TTL
,

12 &
âl
, (ttl)));

15 #ifdef 
IPV6


16 
AF_INET6
: {

17 
h›
;

19 
h›
 = 
vÆ
;

20 (
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_MULTICAST_HOPS
,

21 &
h›
, (hop)));

26 
î∫o
 = 
EAFNOSUPPORT
;

29 
	}
}

32 
	$Mˇ°_£t_âl
(
sockfd
, 
vÆ
)

34 i‡(
	`mˇ°_£t_âl
(
sockfd
, 
vÆ
) < 0)

35 
	`îr_sys
("mcast_set_ttlÉrror");

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/my_addrs.c

2 
	~"u≈.h
"

3 
	~<sys/ut¢ame.h
>

6 
	$my_addrs
(*
addπy≥
)

8 
ho°ít
 *
h±r
;

9 
ut¢ame
 
my«me
;

11 i‡(
	`u«me
(&
my«me
) < 0)

12 (
NULL
);

14 i‡–(
h±r
 = 
	`gëho°by«me
(
my«me
.
nodíame
)Ë=
NULL
)

15 (
NULL
);

17 *
addπy≥
 = 
h±r
->
h_addπy≥
;

18 (
h±r
->
h_addr_li°
);

19 
	}
}

23 
	$My_addrs
(*
pÁmûy
)

25 **
µå
;

27 i‡–(
µå
 = 
	`my_addrs
(
pÁmûy
)Ë=
NULL
)

28 
	`îr_sys
("my_addrsÉrror");

29 (
µå
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/pselect.c

10 
	~"u≈.h
"

13 
	$p£À˘
(
nfds
, 
fd_£t
 *
r£t
, fd_£à*
w£t
, fd_£à*
x£t
,

14 c⁄° 
time•ec
 *
ts
, c⁄° 
sig£t_t
 *
sigmask
)

16 
n
;

17 
timevÆ
 
tv
;

18 
sig£t_t
 
ßvemask
;

20 i‡(
ts
 !
NULL
) {

21 
tv
.
tv_£c
 = 
ts
->tv_sec;

22 
tv
.
tv_u£c
 = 
ts
->
tv_n£c
 / 1000;

25 
	`sig¥ocmask
(
SIG_SETMASK
, 
sigmask
, &
ßvemask
);

26 
n
 = 
	`£À˘
(
nfds
, 
r£t
, 
w£t
, 
x£t
, (
ts
 =
NULL
Ë? NULL : &
tv
);

27 
	`sig¥ocmask
(
SIG_SETMASK
, &
ßvemask
, 
NULL
);

29 (
n
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/read_fd.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$ªad_fd
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
ªcvfd
)

7 
msghdr
 
msg
;

8 
iovec
 
iov
[1];

9 
ssize_t
 
n
;

11 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


13 
cmsghdr
 
cm
;

14 
c⁄åﬁ
[
	`CMSG_SPACE
(())];

15 } 
c⁄åﬁ_un
;

16 
cmsghdr
 *
cm±r
;

18 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ_un
.
c⁄åﬁ
;

19 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ_un
.
c⁄åﬁ
);

21 
√wfd
;

23 
msg
.
msg_ac¸ights
 = (
ˇddr_t
Ë&
√wfd
;

24 
msg
.
msg_ac¸ight¶í
 = ();

27 
msg
.
msg_«me
 = 
NULL
;

28 
msg
.
msg_«mñí
 = 0;

30 
iov
[0].
iov_ba£
 = 
±r
;

31 
iov
[0].
iov_Àn
 = 
nbyãs
;

32 
msg
.
msg_iov
 = 
iov
;

33 
msg
.
msg_iovÀn
 = 1;

35 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) <= 0)

36 (
n
);

38 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


39 i‡–(
cm±r
 = 
	`CMSG_FIRSTHDR
(&
msg
)Ë!
NULL
 &&

40 
cm±r
->
cmsg_Àn
 =
	`CMSG_LEN
(())) {

41 i‡(
cm±r
->
cmsg_Àvñ
 !
SOL_SOCKET
)

42 
	`îr_quô
("controlÜevel != SOL_SOCKET");

43 i‡(
cm±r
->
cmsg_ty≥
 !
SCM_RIGHTS
)

44 
	`îr_quô
("controlÅype != SCM_RIGHTS");

45 *
ªcvfd
 = *((*Ë
	`CMSG_DATA
(
cm±r
));

47 *
ªcvfd
 = -1;

50 i‡(
msg
.
msg_ac¸ight¶í
 == ())

51 *
ªcvfd
 = 
√wfd
;

53 *
ªcvfd
 = -1;

57 (
n
);

58 
	}
}

61 
ssize_t


62 
	$Ród_fd
(
fd
, *
±r
, 
size_t
 
nbyãs
, *
ªcvfd
)

64 
ssize_t
 
n
;

66 i‡–(
n
 = 
	`ªad_fd
(
fd
, 
±r
, 
nbyãs
, 
ªcvfd
)) < 0)

67 
	`îr_sys
("read_fdÉrror");

69 (
n
);

70 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/readable_timeo.c

2 
	~"u≈.h
"

5 
	$ªadabÀ_timeo
(
fd
, 
£c
)

7 
fd_£t
 
r£t
;

8 
timevÆ
 
tv
;

10 
	`FD_ZERO
(&
r£t
);

11 
	`FD_SET
(
fd
, &
r£t
);

13 
tv
.
tv_£c
 = 
£c
;

14 
tv
.
tv_u£c
 = 0;

16 (
	`£À˘
(
fd
+1, &
r£t
, 
NULL
, NULL, &
tv
));

18 
	}
}

22 
	$RódabÀ_timeo
(
fd
, 
£c
)

24 
n
;

26 i‡–(
n
 = 
	`ªadabÀ_timeo
(
fd
, 
£c
)) < 0)

27 
	`îr_sys
("readable_timeoÉrror");

28 (
n
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/readline.c

2 
	~"u≈.h
"

4 
	gªad_˙t
;

5 *
	gªad_±r
;

6 
	gªad_buf
[
MAXLINE
];

8 
ssize_t


9 
	$my_ªad
(
fd
, *
±r
)

12 i‡(
ªad_˙t
 <= 0) {

13 
agaö
:

14 i‡–(
ªad_˙t
 = 
	`ªad
(
fd
, 
ªad_buf
, (read_buf))) < 0) {

15 i‡(
î∫o
 =
EINTR
)

16 
agaö
;

18 } i‡(
ªad_˙t
 == 0)

20 
ªad_±r
 = 
ªad_buf
;

23 
ªad_˙t
--;

24 *
±r
 = *
ªad_±r
++;

26 
	}
}

28 
ssize_t


29 
	$ªadlöe
(
fd
, *
v±r
, 
size_t
 
maxÀn
)

31 
ssize_t
 
n
, 
rc
;

32 
c
, *
±r
;

34 
±r
 = 
v±r
;

35 
n
 = 1;Ç < 
maxÀn
;Ç++) {

36 i‡–(
rc
 = 
	`my_ªad
(
fd
, &
c
)) == 1) {

37 *
±r
++ = 
c
;

38 i‡(
c
 == '\n')

40 } i‡(
rc
 == 0) {

41 *
±r
 = 0;

42 (
n
 - 1);

47 *
±r
 = 0;

48 (
n
);

49 
	}
}

51 
ssize_t


52 
	$ªadlöebuf
(**
v±Ωå
)

54 i‡(
ªad_˙t
)

55 *
v±Ωå
 = 
ªad_±r
;

56 (
ªad_˙t
);

57 
	}
}

60 
ssize_t


61 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

63 
ssize_t
 
n
;

65 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) < 0)

66 
	`îr_sys
("readlineÉrror");

67 (
n
);

68 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/readn.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$ªadn
(
fd
, *
v±r
, 
size_t
 
n
)

7 
size_t
 
∆e·
;

8 
ssize_t
 
ƒód
;

9 *
±r
;

11 
±r
 = 
v±r
;

12 
∆e·
 = 
n
;

13 
∆e·
 > 0) {

14 i‡–(
ƒód
 = 
	`ªad
(
fd
, 
±r
, 
∆e·
)) < 0) {

15 i‡(
î∫o
 =
EINTR
)

16 
ƒód
 = 0;

19 } i‡(
ƒód
 == 0)

22 
∆e·
 -
ƒód
;

23 
±r
 +
ƒód
;

25 (
n
 - 
∆e·
);

26 
	}
}

29 
ssize_t


30 
	$Ródn
(
fd
, *
±r
, 
size_t
 
nbyãs
)

32 
ssize_t
 
n
;

34 i‡–(
n
 = 
	`ªadn
(
fd
, 
±r
, 
nbyãs
)) < 0)

35 
	`îr_sys
("readnÉrror");

36 (
n
);

37 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/rtt.c

2 
	~"u≈πt.h
"

4 
	gπt_d_Êag
 = 0;

10 
	#RTT_RTOCALC
(
±r
Ë(’å)->
πt_§â
 + (4.0 * (±r)->
πt_πtv¨
))

	)

13 
	$πt_mömax
(
πo
)

15 i‡(
πo
 < 
RTT_RXTMIN
)

16 
πo
 = 
RTT_RXTMIN
;

17 i‡(
πo
 > 
RTT_RXTMAX
)

18 
πo
 = 
RTT_RXTMAX
;

19 (
πo
);

20 
	}
}

23 
	$πt_öô
(
πt_öfo
 *
±r
)

25 
timevÆ
 
tv
;

27 
	`Gëtimeofday
(&
tv
, 
NULL
);

28 
±r
->
πt_ba£
 = 
tv
.
tv_£c
;

30 
±r
->
πt_πt
 = 0;

31 
±r
->
πt_§â
 = 0;

32 
±r
->
πt_πtv¨
 = 0.75;

33 
±r
->
πt_πo
 = 
	`πt_mömax
(
	`RTT_RTOCALC
(ptr));

35 
	}
}

45 
uöt32_t


46 
	$πt_ts
(
πt_öfo
 *
±r
)

48 
uöt32_t
 
ts
;

49 
timevÆ
 
tv
;

51 
	`Gëtimeofday
(&
tv
, 
NULL
);

52 
ts
 = ((
tv
.
tv_£c
 - 
±r
->
πt_ba£
Ë* 1000Ë+ (tv.
tv_u£c
 / 1000);

53 (
ts
);

54 
	}
}

57 
	$πt_√w∑ck
(
πt_öfo
 *
±r
)

59 
±r
->
πt_ƒexmt
 = 0;

60 
	}
}

63 
	$πt_°¨t
(
πt_öfo
 *
±r
)

65 ((Ë(
±r
->
πt_πo
 + 0.5));

67 
	}
}

81 
	$πt_°›
(
πt_öfo
 *
±r
, 
uöt32_t
 
ms
)

83 
dñè
;

85 
±r
->
πt_πt
 = 
ms
 / 1000.0;

93 
dñè
 = 
±r
->
πt_πt
 -Öå->
πt_§â
;

94 
±r
->
πt_§â
 +
dñè
 / 8;

96 i‡(
dñè
 < 0.0)

97 
dñè
 = -delta;

99 
±r
->
πt_πtv¨
 +(
dñè
 -Ötr->rtt_rttvar) / 4;

101 
±r
->
πt_πo
 = 
	`πt_mömax
(
	`RTT_RTOCALC
(ptr));

102 
	}
}

112 
	$πt_timeout
(
πt_öfo
 *
±r
)

114 
±r
->
πt_πo
 *= 2;

116 i‡(++
±r
->
πt_ƒexmt
 > 
RTT_MAXNREXMT
)

119 
	}
}

127 
	$πt_debug
(
πt_öfo
 *
±r
)

129 i‡(
πt_d_Êag
 == 0)

132 
	`Ârötf
(
°dîr
, "rtt = %.3f, srtt = %.3f,Ñttvar = %.3f,Ñto = %.3f\n",

133 
±r
->
πt_πt
,Öå->
πt_§â
,Öå->
πt_πtv¨
,Öå->
πt_πo
);

134 
	`fÊush
(
°dîr
);

135 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/signal.c

2 
	~"u≈.h
"

4 
Sigfunc
 *

5 
	$sig«l
(
signo
, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

10 
	`sigem±y£t
(&
a˘
.
ß_mask
);

11 
a˘
.
ß_Êags
 = 0;

12 i‡(
signo
 =
SIGALRM
) {

13 #ifdef 
SA_INTERRUPT


14 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

17 #ifdef 
SA_RESTART


18 
a˘
.
ß_Êags
 |
SA_RESTART
;

21 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

22 (
SIG_ERR
);

23 (
ﬂ˘
.
ß_h™dÀr
);

24 
	}
}

27 
Sigfunc
 *

28 
	$Sig«l
(
signo
, 
Sigfunc
 *
func
)

30 
Sigfunc
 *
sigfunc
;

32 i‡–(
sigfunc
 = 
	`sig«l
(
signo
, 
func
)Ë=
SIG_ERR
)

33 
	`îr_sys
("signalÉrror");

34 (
sigfunc
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/signal_intr.c

2 
	~"u≈.h
"

4 
Sigfunc
 *

5 
	$sig«l_öå
(
signo
, 
Sigfunc
 *
func
)

7 
siga˘i⁄
 
a˘
, 
ﬂ˘
;

9 
a˘
.
ß_h™dÀr
 = 
func
;

10 
	`sigem±y£t
(&
a˘
.
ß_mask
);

11 
a˘
.
ß_Êags
 = 0;

12 #ifdef 
SA_INTERRUPT


13 
a˘
.
ß_Êags
 |
SA_INTERRUPT
;

15 i‡(
	`siga˘i⁄
(
signo
, &
a˘
, &
ﬂ˘
) < 0)

16 (
SIG_ERR
);

17 (
ﬂ˘
.
ß_h™dÀr
);

18 
	}
}

21 
Sigfunc
 *

22 
	$Sig«l_öå
(
signo
, 
Sigfunc
 *
func
)

24 
Sigfunc
 *
sigfunc
;

26 i‡–(
sigfunc
 = 
	`sig«l_öå
(
signo
, 
func
)Ë=
SIG_ERR
)

27 
	`îr_sys
("signal_intrÉrror");

28 (
sigfunc
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/snprintf.c

10 
	~"u≈.h
"

12 
	~<°d¨g.h
>

15 
	$¢¥ötf
(*
buf
, 
size_t
 
size
, c⁄° *
fmt
, ...)

17 
n
;

18 
va_li°
 
≠
;

20 
	`va_°¨t
(
≠
, 
fmt
);

21 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

22 
n
 = 
	`°æí
(
buf
);

23 
	`va_íd
(
≠
);

24 i‡(
n
 >
size
)

25 
	`îr_quô
("¢¥ötf: '%s' ovîÊowedáºay", 
fmt
);

26 (
n
);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_bind_wild.c

1 
	~"u≈.h
"

4 
	$sock_böd_wûd
(
sockfd
, 
Ámûy
)

6 
sockÀn_t
 
Àn
;

8 
Ámûy
) {

9 
AF_INET
: {

10 
sockaddr_ö
 
sö
;

12 
	`bzîo
(&
sö
, (sin));

13 
sö
.
sö_Ámûy
 = 
AF_INET
;

14 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

15 
sö
.
sö_p‹t
 = 
	`ht⁄s
(0);

17 i‡(
	`böd
(
sockfd
, (
SA
 *Ë&
sö
, (sin)) < 0)

19 
Àn
 = (
sö
);

20 i‡(
	`gësock«me
(
sockfd
, (
SA
 *Ë&
sö
, &
Àn
) < 0)

22 (
sö
.
sö_p‹t
);

25 #ifdef 
IPV6


26 
AF_INET6
: {

27 
sockaddr_ö6
 
sö6
;

29 
	`bzîo
(&
sö6
, (sin6));

30 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

31 
sö6
.
sö6_addr
 = 
ö6addr_™y
;

32 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(0);

34 i‡(
	`böd
(
sockfd
, (
SA
 *Ë&
sö6
, (sin6)) < 0)

36 
Àn
 = (
sö6
);

37 i‡(
	`gësock«me
(
sockfd
, (
SA
 *Ë&
sö6
, &
Àn
) < 0)

39 (
sö6
.
sö6_p‹t
);

44 
	}
}

47 
	$Sock_böd_wûd
(
sockfd
, 
Ámûy
)

49 
p‹t
;

51 i‡–(
p‹t
 = 
	`sock_böd_wûd
(
sockfd
, 
Ámûy
)) < 0)

52 
	`îr_sys
("sock_bind_wildÉrror");

54 (
p‹t
);

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_cmp_addr.c

1 
	~"u≈.h
"

3 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


4 
	~<√t/if_dl.h
>

8 
	$sock_cmp_addr
(c⁄° 
sockaddr
 *
ß1
, c⁄° sockadd∏*
ß2
,

9 
sockÀn_t
 
ßÀn
)

11 i‡(
ß1
->
ß_Ámûy
 !
ß2
->sa_family)

14 
ß1
->
ß_Ámûy
) {

15 
AF_INET
: {

16 (
	`memcmp
–&((
sockaddr_ö
 *Ë
ß1
)->
sö_addr
,

17 &((
sockaddr_ö
 *Ë
ß2
)->
sö_addr
,

18 (
ö_addr
)));

21 #ifdef 
IPV6


22 
AF_INET6
: {

23 (
	`memcmp
–&((
sockaddr_ö6
 *Ë
ß1
)->
sö6_addr
,

24 &((
sockaddr_ö6
 *Ë
ß2
)->
sö6_addr
,

25 (
ö6_addr
)));

29 #ifdef 
AF_UNIX


30 
AF_UNIX
: {

31 (
	`°rcmp
–((
sockaddr_un
 *Ë
ß1
)->
sun_∑th
,

32 ((
sockaddr_un
 *Ë
ß2
)->
sun_∑th
));

36 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


37 
AF_LINK
: {

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_cmp_port.c

1 
	~"u≈.h
"

3 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


4 
	~<√t/if_dl.h
>

8 
	$sock_cmp_p‹t
(c⁄° 
sockaddr
 *
ß1
, c⁄° sockadd∏*
ß2
,

9 
sockÀn_t
 
ßÀn
)

11 i‡(
ß1
->
ß_Ámûy
 !
ß2
->sa_family)

14 
ß1
->
ß_Ámûy
) {

15 
AF_INET
: {

16 –((
sockaddr_ö
 *Ë
ß1
)->
sö_p‹t
 ==

17 ((
sockaddr_ö
 *Ë
ß2
)->
sö_p‹t
);

20 #ifdef 
IPV6


21 
AF_INET6
: {

22 –((
sockaddr_ö6
 *Ë
ß1
)->
sö6_p‹t
 ==

23 ((
sockaddr_ö6
 *Ë
ß2
)->
sö6_p‹t
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_get_port.c

1 
	~"u≈.h
"

4 
	$sock_gë_p‹t
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

6 
ß
->
ß_Ámûy
) {

7 
AF_INET
: {

8 
sockaddr_ö
 *
sö
 = (sockaddr_ö *Ë
ß
;

10 (
sö
->
sö_p‹t
);

13 #ifdef 
IPV6


14 
AF_INET6
: {

15 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *Ë
ß
;

17 (
sö6
->
sö6_p‹t
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_ntop.c

1 
	~"u≈.h
"

3 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


4 
	~<√t/if_dl.h
>

9 
	$sock_¡›
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

11 
p‹t°r
[8];

12 
°r
[128];

14 
ß
->
ß_Ámûy
) {

15 
AF_INET
: {

16 
sockaddr_ö
 *
sö
 = (sockaddr_ö *Ë
ß
;

18 i‡(
	`öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
°r
, (°r)Ë=
NULL
)

19 (
NULL
);

20 i‡(
	`¡ohs
(
sö
->
sö_p‹t
) != 0) {

21 
	`¢¥ötf
(
p‹t°r
, ’‹t°r), ":%d", 
	`¡ohs
(
sö
->
sö_p‹t
));

22 
	`°rˇt
(
°r
, 
p‹t°r
);

24 (
°r
);

28 #ifdef 
IPV6


29 
AF_INET6
: {

30 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *Ë
ß
;

32 
°r
[0] = '[';

33 i‡(
	`öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
°r
 + 1, (°rË- 1Ë=
NULL
)

34 (
NULL
);

35 i‡(
	`¡ohs
(
sö6
->
sö6_p‹t
) != 0) {

36 
	`¢¥ötf
(
p‹t°r
, ’‹t°r), "]:%d", 
	`¡ohs
(
sö6
->
sö6_p‹t
));

37 
	`°rˇt
(
°r
, 
p‹t°r
);

38 (
°r
);

40  (
°r
 + 1);

44 #ifdef 
AF_UNIX


45 
AF_UNIX
: {

46 
sockaddr_un
 *
u≈
 = (sockaddr_u¿*Ë
ß
;

50 i‡(
u≈
->
sun_∑th
[0] == 0)

51 
	`°r˝y
(
°r
, "(noÖathname bound)");

53 
	`¢¥ötf
(
°r
, (°r), "%s", 
u≈
->
sun_∑th
);

54 (
°r
);

58 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


59 
AF_LINK
: {

60 
sockaddr_dl
 *
sdl
 = (sockaddr_d»*Ë
ß
;

62 i‡(
sdl
->
sdl_∆í
 > 0)

63 
	`¢¥ötf
(
°r
, (str), "%*s (index %d)",

64 
sdl
->
sdl_∆í
, &sdl->
sdl_d©a
[0], sdl->
sdl_ödex
);

66 
	`¢¥ötf
(
°r
, (°r), "AF_LINK, index=%d", 
sdl
->
sdl_ödex
);

67 (
°r
);

71 
	`¢¥ötf
(
°r
, (str), "sock_ntop: unknown AF_xxx: %d,Üen %d",

72 
ß
->
ß_Ámûy
, 
ßÀn
);

73 (
°r
);

75  (
NULL
);

76 
	}
}

79 
	$Sock_¡›
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

81 *
±r
;

83 i‡–(
±r
 = 
	`sock_¡›
(
ß
, 
ßÀn
)Ë=
NULL
)

84 
	`îr_sys
("sock_ntopÉrror");

85 (
±r
);

86 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_ntop_host.c

1 
	~"u≈.h
"

3 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


4 
	~<√t/if_dl.h
>

8 
	$sock_¡›_ho°
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

10 
°r
[128];

12 
ß
->
ß_Ámûy
) {

13 
AF_INET
: {

14 
sockaddr_ö
 *
sö
 = (sockaddr_ö *Ë
ß
;

16 i‡(
	`öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
°r
, (°r)Ë=
NULL
)

17 (
NULL
);

18 (
°r
);

21 #ifdef 
IPV6


22 
AF_INET6
: {

23 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *Ë
ß
;

25 i‡(
	`öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
°r
, (°r)Ë=
NULL
)

26 (
NULL
);

27 (
°r
);

31 #ifdef 
AF_UNIX


32 
AF_UNIX
: {

33 
sockaddr_un
 *
u≈
 = (sockaddr_u¿*Ë
ß
;

37 i‡(
u≈
->
sun_∑th
[0] == 0)

38 
	`°r˝y
(
°r
, "(noÖathname bound)");

40 
	`¢¥ötf
(
°r
, (°r), "%s", 
u≈
->
sun_∑th
);

41 (
°r
);

45 #ifdef 
HAVE_SOCKADDR_DL_STRUCT


46 
AF_LINK
: {

47 
sockaddr_dl
 *
sdl
 = (sockaddr_d»*Ë
ß
;

49 i‡(
sdl
->
sdl_∆í
 > 0)

50 
	`¢¥ötf
(
°r
, (str), "%*s",

51 
sdl
->
sdl_∆í
, &sdl->
sdl_d©a
[0]);

53 
	`¢¥ötf
(
°r
, (°r), "AF_LINK, index=%d", 
sdl
->
sdl_ödex
);

54 (
°r
);

58 
	`¢¥ötf
(
°r
, (str), "sock_ntop_host: unknown AF_xxx: %d,Üen %d",

59 
ß
->
ß_Ámûy
, 
ßÀn
);

60 (
°r
);

62  (
NULL
);

63 
	}
}

66 
	$Sock_¡›_ho°
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

68 *
±r
;

70 i‡–(
±r
 = 
	`sock_¡›_ho°
(
ß
, 
ßÀn
)Ë=
NULL
)

71 
	`îr_sys
("sock_ntop_hostÉrror");

72 (
±r
);

73 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_addr.c

1 
	~"u≈.h
"

4 
	$sock_£t_addr
(
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, c⁄° *
addr
)

6 
ß
->
ß_Ámûy
) {

7 
AF_INET
: {

8 
sockaddr_ö
 *
sö
 = (sockaddr_ö *Ë
ß
;

10 
	`mem˝y
(&
sö
->
sö_addr
, 
addr
, (
ö_addr
));

14 #ifdef 
IPV6


15 
AF_INET6
: {

16 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *Ë
ß
;

18 
	`mem˝y
(&
sö6
->
sö6_addr
, 
addr
, (
ö6_addr
));

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_port.c

1 
	~"u≈.h
"

4 
	$sock_£t_p‹t
(
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
, 
p‹t
)

6 
ß
->
ß_Ámûy
) {

7 
AF_INET
: {

8 
sockaddr_ö
 *
sö
 = (sockaddr_ö *Ë
ß
;

10 
sö
->
sö_p‹t
 = 
p‹t
;

14 #ifdef 
IPV6


15 
AF_INET6
: {

16 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *Ë
ß
;

18 
sö6
->
sö6_p‹t
 = 
p‹t
;

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_wild.c

1 
	~"u≈.h
"

4 
	$sock_£t_wûd
(
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

6 c⁄° *
wûd±r
;

8 
ß
->
ß_Ámûy
) {

9 
AF_INET
: {

10 
ö_addr
 
ö4addr_™y
;

12 
ö4addr_™y
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

13 
wûd±r
 = &
ö4addr_™y
;

17 #ifdef 
IPV6


18 
AF_INET6
: {

19 
wûd±r
 = &
ö6addr_™y
;

27 
	`sock_£t_addr
(
ß
, 
ßÀn
, 
wûd±r
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sockatmark.c

1 
	~"u≈.h
"

4 
	$sock©m¨k
(
fd
)

6 
Êag
;

8 i‡(
	`io˘l
(
fd
, 
SIOCATMARK
, &
Êag
) < 0)

10 (
Êag
 != 0);

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/sockfd_to_family.c

2 
	~"u≈.h
"

5 
	$sockfd_to_Ámûy
(
sockfd
)

7 
sockaddr_°‹age
 
ss
;

8 
sockÀn_t
 
Àn
;

10 
Àn
 = (
ss
);

11 i‡(
	`gësock«me
(
sockfd
, (
SA
 *Ë&
ss
, &
Àn
) < 0)

13 (
ss
.
ss_Ámûy
);

14 
	}
}

18 
	$Sockfd_to_Ámûy
(
sockfd
)

20 
rc
;

22 i‡–(
rc
 = 
	`sockfd_to_Ámûy
(
sockfd
)) < 0)

23 
	`îr_sys
("sockfd_to_familyÉrror");

25 (
rc
);

26 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/str_cli.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

8 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

10 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

12 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0)

13 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

15 
	`Fputs
(
ªcvlöe
, 
°dout
);

17 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/str_echo.c

1 
	~"u≈.h
"

4 
	$°r_echo
(
sockfd
)

6 
ssize_t
 
n
;

7 
buf
[
MAXLINE
];

9 
agaö
:

10  (
n
 = 
	`ªad
(
sockfd
, 
buf
, 
MAXLINE
)) > 0)

11 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

13 i‡(
n
 < 0 && 
î∫o
 =
EINTR
)

14 
agaö
;

15 i‡(
n
 < 0)

16 
	`îr_sys
("str_echo:ÑeadÉrror");

17 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/tcp_connect.c

2 
	~"u≈.h
"

5 
	$t˝_c⁄√˘
(c⁄° *
ho°
, c⁄° *
£rv
)

7 
sockfd
, 
n
;

8 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

10 
	`bzîo
(&
höts
, (
addröfo
));

11 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

12 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

14 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

15 
	`îr_quô
("tcp_connectÉrror for %s, %s: %s",

16 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

17 
ªsßve
 = 
ªs
;

20 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

21 i‡(
sockfd
 < 0)

24 i‡(
	`c⁄√˘
(
sockfd
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) == 0)

27 
	`Clo£
(
sockfd
);

28 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

30 i‡(
ªs
 =
NULL
)

31 
	`îr_sys
("t˝_c⁄√˘Éº‹ f‹ %s, %s", 
ho°
, 
£rv
);

33 
	`‰ìaddröfo
(
ªsßve
);

35 (
sockfd
);

36 
	}
}

46 
	$T˝_c⁄√˘
(c⁄° *
ho°
, c⁄° *
£rv
)

48 (
	`t˝_c⁄√˘
(
ho°
, 
£rv
));

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/tcp_listen.c

2 
	~"u≈.h
"

5 
	$t˝_li°í
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

7 
li°ífd
, 
n
;

8 c⁄° 
⁄
 = 1;

9 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

11 
	`bzîo
(&
höts
, (
addröfo
));

12 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

13 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

14 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

16 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

17 
	`îr_quô
("tcp_listenÉrror for %s, %s: %s",

18 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

19 
ªsßve
 = 
ªs
;

22 
li°ífd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

23 i‡(
li°ífd
 < 0)

26 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

27 i‡(
	`böd
(
li°ífd
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) == 0)

30 
	`Clo£
(
li°ífd
);

31 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

33 i‡(
ªs
 =
NULL
)

34 
	`îr_sys
("t˝_li°íÉº‹ f‹ %s, %s", 
ho°
, 
£rv
);

36 
	`Li°í
(
li°ífd
, 
LISTENQ
);

38 i‡(
addæíp
)

39 *
addæíp
 = 
ªs
->
ai_addæí
;

41 
	`‰ìaddröfo
(
ªsßve
);

43 (
li°ífd
);

44 
	}
}

54 
	$T˝_li°í
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

56 (
	`t˝_li°í
(
ho°
, 
£rv
, 
addæíp
));

57 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/tv_sub.c

1 
	~"u≈.h
"

4 
	$tv_sub
(
timevÆ
 *
out
, timevÆ *
ö
)

6 i‡–(
out
->
tv_u£c
 -
ö
->tv_usec) < 0) {

7 --
out
->
tv_£c
;

8 
out
->
tv_u£c
 += 1000000;

10 
out
->
tv_£c
 -
ö
->tv_sec;

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/udp_client.c

2 
	~"u≈.h
"

5 
	$udp_˛õ¡
(c⁄° *
ho°
, c⁄° *
£rv
, 
SA
 **
ß±r
, 
sockÀn_t
 *
À≈
)

7 
sockfd
, 
n
;

8 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

10 
	`bzîo
(&
höts
, (
addröfo
));

11 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

12 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

14 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

15 
	`îr_quô
("udp_clientÉrror for %s, %s: %s",

16 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

17 
ªsßve
 = 
ªs
;

20 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

21 i‡(
sockfd
 >= 0)

23 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

25 i‡(
ªs
 =
NULL
)

26 
	`îr_sys
("udp_˛õ¡Éº‹ f‹ %s, %s", 
ho°
, 
£rv
);

28 *
ß±r
 = 
	`MÆloc
(
ªs
->
ai_addæí
);

29 
	`mem˝y
(*
ß±r
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
);

30 *
À≈
 = 
ªs
->
ai_addæí
;

32 
	`‰ìaddröfo
(
ªsßve
);

34 (
sockfd
);

35 
	}
}

39 
	$Udp_˛õ¡
(c⁄° *
ho°
, c⁄° *
£rv
, 
SA
 **
ß±r
, 
sockÀn_t
 *
À≈å
)

41 (
	`udp_˛õ¡
(
ho°
, 
£rv
, 
ß±r
, 
À≈å
));

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/udp_connect.c

2 
	~"u≈.h
"

5 
	$udp_c⁄√˘
(c⁄° *
ho°
, c⁄° *
£rv
)

7 
sockfd
, 
n
;

8 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

10 
	`bzîo
(&
höts
, (
addröfo
));

11 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

12 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

14 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

15 
	`îr_quô
("udp_connectÉrror for %s, %s: %s",

16 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

17 
ªsßve
 = 
ªs
;

20 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

21 i‡(
sockfd
 < 0)

24 i‡(
	`c⁄√˘
(
sockfd
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) == 0)

27 
	`Clo£
(
sockfd
);

28 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

30 i‡(
ªs
 =
NULL
)

31 
	`îr_sys
("udp_c⁄√˘Éº‹ f‹ %s, %s", 
ho°
, 
£rv
);

33 
	`‰ìaddröfo
(
ªsßve
);

35 (
sockfd
);

36 
	}
}

40 
	$Udp_c⁄√˘
(c⁄° *
ho°
, c⁄° *
£rv
)

42 
n
;

44 i‡–(
n
 = 
	`udp_c⁄√˘
(
ho°
, 
£rv
)) < 0) {

45 
	`îr_quô
("udp_connectÉrror for %s, %s: %s",

46 
ho°
, 
£rv
, 
	`gai_°ªº‹
(-
n
));

48 (
n
);

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/udp_server.c

2 
	~"u≈.h
"

5 
	$udp_£rvî
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

7 
sockfd
, 
n
;

8 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

10 
	`bzîo
(&
höts
, (
addröfo
));

11 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

12 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

13 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

15 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

16 
	`îr_quô
("udp_serverÉrror for %s, %s: %s",

17 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

18 
ªsßve
 = 
ªs
;

21 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

22 i‡(
sockfd
 < 0)

25 i‡(
	`böd
(
sockfd
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) == 0)

28 
	`Clo£
(
sockfd
);

29 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

31 i‡(
ªs
 =
NULL
)

32 
	`îr_sys
("udp_£rvîÉº‹ f‹ %s, %s", 
ho°
, 
£rv
);

34 i‡(
addæíp
)

35 *
addæíp
 = 
ªs
->
ai_addæí
;

37 
	`‰ìaddröfo
(
ªsßve
);

39 (
sockfd
);

40 
	}
}

44 
	$Udp_£rvî
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

46 (
	`udp_£rvî
(
ho°
, 
£rv
, 
addæíp
));

47 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/unp.h

4 #i‚def 
__u≈_h


5 
	#__u≈_h


	)

7 
	~"../c⁄fig.h
"

13 
	~<sys/ty≥s.h
>

14 
	~<sys/sockë.h
>

15 #i‡
TIME_WITH_SYS_TIME


16 
	~<sys/time.h
>

17 
	~<time.h
>

19 #i‡
HAVE_SYS_TIME_H


20 
	~<sys/time.h
>

22 
	~<time.h
>

25 
	~<√töë/ö.h
>

26 
	~<¨∑/öë.h
>

27 
	~<î∫o.h
>

28 
	~<f˙é.h
>

29 
	~<√tdb.h
>

30 
	~<sig«l.h
>

31 
	~<°dio.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<sys/°©.h
>

35 
	~<sys/uio.h
>

36 
	~<uni°d.h
>

37 
	~<sys/waô.h
>

38 
	~<sys/un.h
>

40 #ifdef 
HAVE_SYS_SELECT_H


41 
	~<sys/£À˘.h
>

44 #ifdef 
HAVE_SYS_SYSCTL_H


45 #ifdef 
HAVE_SYS_PARAM_H


46 
	~<sys/∑øm.h
>

48 
	~<sys/sys˘l.h
>

51 #ifdef 
HAVE_POLL_H


52 
	~<pﬁl.h
>

55 #ifdef 
HAVE_SYS_EVENT_H


56 
	~<sys/evít.h
>

59 #ifdef 
HAVE_STRINGS_H


60 
	~<°rögs.h
>

66 #ifdef 
HAVE_SYS_IOCTL_H


67 
	~<sys/io˘l.h
>

69 #ifdef 
HAVE_SYS_FILIO_H


70 
	~<sys/fûio.h
>

72 #ifdef 
HAVE_SYS_SOCKIO_H


73 
	~<sys/sockio.h
>

76 #ifdef 
HAVE_PTHREAD_H


77 
	~<±hªad.h
>

80 #ifde‡
HAVE_NET_IF_DL_H


81 
	~<√t/if_dl.h
>

84 #ifde‡
HAVE_NETINET_SCTP_H


85 
	~<√töë/s˘p.h
>

89 #ifdef 
__osf__


90 #unde‡
ªcv


91 #unde‡
£nd


92 
	#ªcv
(
a
,
b
,
c
,
d
Ë
	`ªcv‰om
◊,b,c,d,0,0)

	)

93 
	#£nd
(
a
,
b
,
c
,
d
Ë
	`£ndto
◊,b,c,d,0,0)

	)

96 #i‚def 
INADDR_NONE


98 
	#INADDR_NONE
 0xfffffff‡

	)

101 #i‚def 
SHUT_RD


102 
	#SHUT_RD
 0

	)

103 
	#SHUT_WR
 1

	)

104 
	#SHUT_RDWR
 2

	)

111 #i‚de‡
INET_ADDRSTRLEN


113 
	#INET_ADDRSTRLEN
 16

	)

119 #i‚de‡
INET6_ADDRSTRLEN


121 
	#INET6_ADDRSTRLEN
 46

	)

129 #i‚def 
HAVE_BZERO


130 
	#bzîo
(
±r
,
n
Ë
	`mem£t
’å, 0,Ç)

	)

136 #i‚def 
HAVE_GETHOSTBYNAME2


137 
	#gëho°by«me2
(
ho°
,
Ámûy
Ë
	`gëho°by«me
((ho°))

	)

141 
	su≈_ö_pktöfo
 {

142 
ö_addr
 
	mùi_addr
;

143 
	mùi_ifödex
;

152 #i‚def 
CMSG_LEN


154 
	#CMSG_LEN
(
size
Ë((
cmsghdr
Ë+ (size))

	)

156 #i‚def 
CMSG_SPACE


158 
	#CMSG_SPACE
(
size
Ë((
cmsghdr
Ë+ (size))

	)

164 #i‚def 
SUN_LEN


166 
	#SUN_LEN
(
su
) \

167 ((*(
su
)Ë- ((su)->
sun_∑th
Ë+ 
	`°æí
((su)->sun_∑th))

	)

172 #i‚def 
AF_LOCAL


173 
	#AF_LOCAL
 
AF_UNIX


	)

175 #i‚def 
PF_LOCAL


176 
	#PF_LOCAL
 
PF_UNIX


	)

183 #i‚de‡
INFTIM


184 
	#INFTIM
 (-1Ë

	)

186 #ifdef 
HAVE_POLL_H


187 
	#INFTIM_UNPH


	)

193 
	#LISTENQ
 1024

	)

196 
	#MAXLINE
 4096

	)

197 
	#BUFFSIZE
 8192

	)

200 
	#SERV_PORT
 9877

	)

201 
	#SERV_PORT_STR
 "9877"

	)

202 
	#UNIXSTR_PATH
 "/tmp/unix.°r"

	)

203 
	#UNIXDG_PATH
 "/tmp/unix.dg"

	)

212 
	#SA
 
sockaddr


	)

214 #i‚de‡
HAVE_STRUCT_SOCKADDR_STORAGE


218 
	#__SS_MAXSIZE
 128

	)

219 
	#__SS_ALIGNSIZE
 ((
öt64_t
))

	)

220 #ifde‡
HAVE_SOCKADDR_SA_LEN


221 
	#__SS_PAD1SIZE
 (
__SS_ALIGNSIZE
 - (
u_ch¨
Ë- (
ß_Ámûy_t
))

	)

223 
	#__SS_PAD1SIZE
 (
__SS_ALIGNSIZE
 - (
ß_Ámûy_t
))

	)

225 
	#__SS_PAD2SIZE
 (
__SS_MAXSIZE
 - 2*
__SS_ALIGNSIZE
)

	)

227 
	ssockaddr_°‹age
 {

228 #ifde‡
HAVE_SOCKADDR_SA_LEN


229 
u_ch¨
 
	mss_Àn
;

231 
ß_Ámûy_t
 
	mss_Ámûy
;

232 
	m__ss_∑d1
[
__SS_PAD1SIZE
];

233 
öt64_t
 
	m__ss_Æign
;

234 
	m__ss_∑d2
[
__SS_PAD2SIZE
];

238 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

240 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

243 
	tSigfunc
();

245 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

246 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

248 #i‚def 
HAVE_ADDRINFO_STRUCT


249 
	~"../lib/addröfo.h
"

252 #i‚def 
HAVE_IF_NAMEINDEX_STRUCT


253 
	sif_«meödex
 {

254 
	mif_ödex
;

255 *
	mif_«me
;

262 #i‚def 
HAVE_TIMESPEC_STRUCT


263 
	stime•ec
 {

264 
time_t
 
	mtv_£c
;

265 
	mtv_n£c
;

274 
c⁄√˘_n⁄b
(, c⁄° 
SA
 *, 
sockÀn_t
, );

275 
c⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

276 
d´m⁄_öô
(const *, );

277 
d´m⁄_öëd
(const *, );

278 
dg_˛i
(
FILE
 *, , c⁄° 
SA
 *, 
sockÀn_t
);

279 
dg_echo
(, 
SA
 *, 
sockÀn_t
);

280 
Ámûy_to_Àvñ
();

281 *
gf_time
();

282 
hóπbót_˛i
(, , );

283 
hóπbót_£rv
(, , );

284 
addröfo
 *
ho°_£rv
(const *, const *, , );

285 
öë_§¸t_add
(*);

286 
u_ch¨
 *
öë_§¸t_öô
();

287 
öë_§¸t_¥öt
(
u_ch¨
 *, );

288 
öë6_§¸t_¥öt
(*);

289 **
my_addrs
(*);

290 
ªadabÀ_timeo
(, );

291 
ssize_t
 
ªadlöe
(, *, 
size_t
);

292 
ssize_t
 
ªadn
(, *, 
size_t
);

293 
ssize_t
 
ªad_fd
(, *, 
size_t
, *);

294 
ssize_t
 
ªcv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

295 
u≈_ö_pktöfo
 *);

296 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

297 
sock_böd_wûd
(, );

298 
sock_cmp_addr
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

299 
sock_cmp_p‹t
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

300 
sock_gë_p‹t
(c⁄° 
SA
 *, 
sockÀn_t
);

301 
sock_£t_addr
(
SA
 *, 
sockÀn_t
, const *);

302 
sock_£t_p‹t
(
SA
 *, 
sockÀn_t
, );

303 
sock_£t_wûd
(
SA
 *, 
sockÀn_t
);

304 *
sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

305 *
sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

306 
sockfd_to_Ámûy
();

307 
°r_echo
();

308 
°r_˛i
(
FILE
 *, );

309 
t˝_c⁄√˘
(const *, const *);

310 
t˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

311 
tv_sub
(
timevÆ
 *, timeval *);

312 
udp_˛õ¡
(c⁄° *, c⁄° *, 
SA
 **, 
sockÀn_t
 *);

313 
udp_c⁄√˘
(const *, const *);

314 
udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

315 
wrôabÀ_timeo
(, );

316 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

317 
ssize_t
 
wrôe_fd
(, *, 
size_t
, );

319 #ifdef 
MCAST


320 
mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

321 
mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

322 
mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

323 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

324 
mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

325 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

326 c⁄° *
i‚ame
, 
u_öt
 
ifödex
);

327 
mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

328 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

329 
mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

330 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

331 
mˇ°_gë_if
();

332 
mˇ°_gë_lo›
();

333 
mˇ°_gë_âl
();

334 
mˇ°_£t_if
(, c⁄° *, 
u_öt
);

335 
mˇ°_£t_lo›
(, );

336 
mˇ°_£t_âl
(, );

338 
Mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

339 
Mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

340 
Mˇ°_Àave_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

341 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

342 
Mˇ°_joö_sour˚_group
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

343 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
,

344 c⁄° *
i‚ame
, 
u_öt
 
ifödex
);

345 
Mˇ°_block_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

346 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

347 
Mˇ°_unblock_sour˚
(
sockfd
, c⁄° 
SA
 *
§c
, 
sockÀn_t
 
§˛í
,

348 c⁄° 
SA
 *
gΩ
, 
sockÀn_t
 
gΩÀn
);

349 
Mˇ°_gë_if
();

350 
Mˇ°_gë_lo›
();

351 
Mˇ°_gë_âl
();

352 
Mˇ°_£t_if
(, c⁄° *, 
u_öt
);

353 
Mˇ°_£t_lo›
(, );

354 
Mˇ°_£t_âl
(, );

357 
uöt16_t
 
ö_cksum
(uint16_t *, );

359 #i‚def 
HAVE_GETADDRINFO_PROTO


360 
gëaddröfo
(c⁄° *, c⁄° *, c⁄° 
addröfo
 *,

361 
addröfo
 **);

362 
‰ìaddröfo
(
addröfo
 *);

363 *
gai_°ªº‹
();

366 #i‚def 
HAVE_GETNAMEINFO_PROTO


367 
gë«meöfo
(c⁄° 
SA
 *, 
sockÀn_t
, *, 
size_t
, *, size_t, );

370 #i‚def 
HAVE_GETHOSTNAME_PROTO


371 
gëho°«me
(*, );

374 #i‚def 
HAVE_HSTRERROR_PROTO


375 c⁄° *
h°ªº‹
();

378 #i‚def 
HAVE_IF_NAMETOINDEX_PROTO


379 
if_«mëoödex
(const *);

380 *
if_ödext⁄ame
(, *);

381 
if_‰ì«meödex
(
if_«meödex
 *);

382 
if_«meödex
 *if_nameindex();

385 #i‚def 
HAVE_INET_PTON_PROTO


386 
öë_±⁄
(, const *, *);

387 c⁄° *
öë_¡›
(, c⁄° *, *, 
size_t
);

390 #i‚def 
HAVE_INET_ATON_PROTO


391 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

394 #i‚def 
HAVE_PSELECT_PROTO


395 
p£À˘
(, 
fd_£t
 *, fd_set *, fd_set *,

396 c⁄° 
time•ec
 *, c⁄° 
sig£t_t
 *);

399 #i‚def 
HAVE_SOCKATMARK_PROTO


400 
sock©m¨k
();

403 #i‚def 
HAVE_SNPRINTF_PROTO


404 
¢¥ötf
(*, 
size_t
, const *, ...);

408 
C⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

409 
Famûy_to_Àvñ
();

410 
addröfo
 *
Ho°_£rv
(const *, const *, , );

411 c⁄° *
I√t_¡›
(, c⁄° *, *, 
size_t
);

412 
I√t_±⁄
(, const *, *);

413 *
If_ödext⁄ame
(, *);

414 
If_«mëoödex
(const *);

415 
if_«meödex
 *
If_«meödex
();

416 **
My_addrs
(*);

417 
ssize_t
 
Ród_fd
(, *, 
size_t
, *);

418 
RódabÀ_timeo
(, );

419 
ssize_t
 
Recv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

420 
u≈_ö_pktöfo
 *);

421 
Sigfunc
 *
Sig«l
(, Sigfunc *);

422 
Sigfunc
 *
Sig«l_öå
(, Sigfunc *);

423 
Sock_böd_wûd
(, );

424 *
Sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

425 *
Sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

426 
Sockfd_to_Ámûy
();

427 
T˝_c⁄√˘
(const *, const *);

428 
T˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

429 
Udp_˛õ¡
(c⁄° *, c⁄° *, 
SA
 **, 
sockÀn_t
 *);

430 
Udp_c⁄√˘
(const *, const *);

431 
Udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

432 
ssize_t
 
Wrôe_fd
(, *, 
size_t
, );

433 
WrôabÀ_timeo
(, );

436 *
CÆloc
(
size_t
, size_t);

437 
Clo£
();

438 
Dup2
(, );

439 
F˙é
(, , );

440 
Gëtimeofday
(
timevÆ
 *, *);

441 
Io˘l
(, , *);

442 
pid_t
 
F‹k
();

443 *
MÆloc
(
size_t
);

444 
Mk°emp
(*);

445 *
Mm≠
(*, 
size_t
, , , , 
off_t
);

446 
O≥n
(c⁄° *, , 
mode_t
);

447 
Pùe
(*
fds
);

448 
ssize_t
 
Ród
(, *, 
size_t
);

449 
Sigadd£t
(
sig£t_t
 *, );

450 
Sigdñ£t
(
sig£t_t
 *, );

451 
Sigem±y£t
(
sig£t_t
 *);

452 
Sigfûl£t
(
sig£t_t
 *);

453 
Sigismembî
(c⁄° 
sig£t_t
 *, );

454 
Sig≥ndög
(
sig£t_t
 *);

455 
Sig¥ocmask
(, c⁄° 
sig£t_t
 *, sigset_t *);

456 *
Sådup
(const *);

457 
Sysc⁄f
();

458 
Sys˘l
(*, 
u_öt
, *, 
size_t
 *, *, size_t);

459 
U∆ök
(const *);

460 
pid_t
 
Waô
(*);

461 
pid_t
 
Waôpid
(pid_t, *, );

462 
Wrôe
(, *, 
size_t
);

465 
F˛o£
(
FILE
 *);

466 
FILE
 *
Fd›í
(, const *);

467 *
Fgës
(*, , 
FILE
 *);

468 
FILE
 *
F›í
(const *, const *);

469 
Fputs
(c⁄° *, 
FILE
 *);

472 
Ac˚±
(, 
SA
 *, 
sockÀn_t
 *);

473 
Böd
(, c⁄° 
SA
 *, 
sockÀn_t
);

474 
C⁄√˘
(, c⁄° 
SA
 *, 
sockÀn_t
);

475 
Gë≥î«me
(, 
SA
 *, 
sockÀn_t
 *);

476 
Gësock«me
(, 
SA
 *, 
sockÀn_t
 *);

477 
Gësock›t
(, , , *, 
sockÀn_t
 *);

478 #ifdef 
HAVE_INET6_RTH_INIT


479 
I√t6_πh_•a˚
(, );

480 *
I√t6_πh_öô
(*, 
sockÀn_t
, , );

481 
I√t6_πh_add
(*, c⁄° 
ö6_addr
 *);

482 
I√t6_πh_ªvî£
(const *, *);

483 
I√t6_πh_£gmíts
(const *);

484 
ö6_addr
 *
I√t6_πh_gëaddr
(const *, );

486 #ifdef 
HAVE_KQUEUE


487 
Kqueue
();

488 
Kevít
(, c⁄° 
kevít
 *, ,

489 
kevít
 *, , c⁄° 
time•ec
 *);

491 
Li°í
(, );

492 #ifdef 
HAVE_POLL


493 
Pﬁl
(
pﬁlfd
 *, , );

495 
ssize_t
 
Ródlöe
(, *, 
size_t
);

496 
ssize_t
 
Ródn
(, *, 
size_t
);

497 
ssize_t
 
Recv
(, *, 
size_t
, );

498 
ssize_t
 
Recv‰om
(, *, 
size_t
, , 
SA
 *, 
sockÀn_t
 *);

499 
ssize_t
 
Recvmsg
(, 
msghdr
 *, );

500 
Sñe˘
(, 
fd_£t
 *, fd_£à*, fd_£à*, 
timevÆ
 *);

501 
Síd
(, c⁄° *, 
size_t
, );

502 
Sídto
(, c⁄° *, 
size_t
, , c⁄° 
SA
 *, 
sockÀn_t
);

503 
Sídmsg
(, c⁄° 
msghdr
 *, );

504 
Sësock›t
(, , , c⁄° *, 
sockÀn_t
);

505 
Shutdown
(, );

506 
Sock©m¨k
();

507 
Sockë
(, , );

508 
Sockë∑ú
(, , , *);

509 
Wrôí
(, *, 
size_t
);

511 
îr_dump
(const *, ...);

512 
îr_msg
(const *, ...);

513 
îr_quô
(const *, ...);

514 
îr_ªt
(const *, ...);

515 
îr_sys
(const *, ...);

	@/media/sf_ddrive/progs/network/unpv13e/lib/unpifi.h

4 #i‚def 
__u≈_ifi_h


5 
	#__u≈_ifi_h


	)

7 
	~"u≈.h
"

8 
	~<√t/if.h
>

10 
	#IFI_NAME
 16

	)

11 
	#IFI_HADDR
 8

	)

13 
	sifi_öfo
 {

14 
	mifi_«me
[
IFI_NAME
];

15 
	mifi_ödex
;

16 
	mifi_mtu
;

17 
u_ch¨
 
	mifi_haddr
[
IFI_HADDR
];

18 
u_sh‹t
 
	mifi_hÀn
;

19 
	mifi_Êags
;

20 
	mifi_myÊags
;

21 
sockaddr
 *
	mifi_addr
;

22 
sockaddr
 *
	mifi_brdaddr
;

23 
sockaddr
 *
	mifi_d°addr
;

24 
ifi_öfo
 *
	mifi_√xt
;

27 
	#IFI_ALIAS
 1

	)

30 
ifi_öfo
 *
gë_ifi_öfo
(, );

31 
ifi_öfo
 *
Gë_ifi_öfo
(, );

32 
‰ì_ifi_öfo
(
ifi_öfo
 *);

	@/media/sf_ddrive/progs/network/unpv13e/lib/unprtt.h

1 #i‚def 
__u≈_πt_h


2 
	#__u≈_πt_h


	)

4 
	~"u≈.h
"

6 
	sπt_öfo
 {

7 
	mπt_πt
;

8 
	mπt_§â
;

9 
	mπt_πtv¨
;

10 
	mπt_πo
;

11 
	mπt_ƒexmt
;

12 
uöt32_t
 
	mπt_ba£
;

15 
	#RTT_RXTMIN
 2

	)

16 
	#RTT_RXTMAX
 60

	)

17 
	#RTT_MAXNREXMT
 3

	)

20 
πt_debug
(
πt_öfo
 *);

21 
πt_öô
(
πt_öfo
 *);

22 
πt_√w∑ck
(
πt_öfo
 *);

23 
πt_°¨t
(
πt_öfo
 *);

24 
πt_°›
(
πt_öfo
 *, 
uöt32_t
);

25 
πt_timeout
(
πt_öfo
 *);

26 
uöt32_t
 
πt_ts
(
πt_öfo
 *);

28 
πt_d_Êag
;

	@/media/sf_ddrive/progs/network/unpv13e/lib/unpthread.h

4 #i‚def 
__u≈_±hªad_h


5 
	#__u≈_±hªad_h


	)

7 
	~"u≈.h
"

9 
Pthªad_¸óã
(
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

11 
Pthªad_joö
(
±hªad_t
, **);

12 
Pthªad_dëach
(
±hªad_t
);

13 
Pthªad_kûl
(
±hªad_t
, );

15 
Pthªad_muãx©å_öô
(
±hªad_muãx©å_t
 *);

16 
Pthªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *, );

17 
Pthªad_muãx_öô
(
±hªad_muãx_t
 *, 
±hªad_muãx©å_t
 *);

18 
Pthªad_muãx_lock
(
±hªad_muãx_t
 *);

19 
Pthªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

21 
Pthªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *);

22 
Pthªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *);

23 
Pthªad_c⁄d_waô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *);

24 
Pthªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *,

25 c⁄° 
time•ec
 *);

27 
Pthªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

28 
	`Pthªad_£t•ecific
(
±hªad_key_t
, const *);

29 
	`Pthªad_⁄˚
(
±hªad_⁄˚_t
 *, (*)());

	@/media/sf_ddrive/progs/network/unpv13e/lib/wraplib.c

6 
	~"u≈.h
"

9 
	$I√t_¡›
(
Ámûy
, c⁄° *
addΩå
, *
°Ωå
, 
size_t
 
Àn
)

11 c⁄° *
±r
;

13 i‡(
°Ωå
 =
NULL
)

14 
	`îr_quô
("NULL 3rdárgumentÅo inet_ntop");

15 i‡–(
±r
 = 
	`öë_¡›
(
Ámûy
, 
addΩå
, 
°Ωå
, 
Àn
)Ë=
NULL
)

16 
	`îr_sys
("inet_ntopÉrror");

17 (
±r
);

18 
	}
}

21 
	$I√t_±⁄
(
Ámûy
, c⁄° *
°Ωå
, *
addΩå
)

23 
n
;

25 i‡–(
n
 = 
	`öë_±⁄
(
Ámûy
, 
°Ωå
, 
addΩå
)) < 0)

26 
	`îr_sys
("öë_±⁄Éº‹ f‹ %s", 
°Ωå
);

27 i‡(
n
 == 0)

28 
	`îr_quô
("öë_±⁄Éº‹ f‹ %s", 
°Ωå
);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/wrappthread.c

5 
	~"u≈.h
"

6 
	~"u≈thªad.h
"

9 
Pthªad_¸óã
(
±hªad_t
 *
tid
, c⁄° 
±hªad_©å_t
 *
©å
,

10 * (*
func
)(*), *
¨g
)

12 
	gn
;

14 i‡–(
	gn
 = 
±hªad_¸óã
(
tid
, 
©å
, 
func
, 
¨g
)) == 0)

16 
	gî∫o
 = 
n
;

17 
îr_sys
("pthread_createÉrror");

21 
	$Pthªad_joö
(
±hªad_t
 
tid
, **
°©us
)

23 
n
;

25 i‡–(
n
 = 
	`±hªad_joö
(
tid
, 
°©us
)) == 0)

27 
î∫o
 = 
n
;

28 
	`îr_sys
("pthread_joinÉrror");

29 
	}
}

32 
	$Pthªad_dëach
(
±hªad_t
 
tid
)

34 
n
;

36 i‡–(
n
 = 
	`±hªad_dëach
(
tid
)) == 0)

38 
î∫o
 = 
n
;

39 
	`îr_sys
("pthread_detachÉrror");

40 
	}
}

43 
	$Pthªad_kûl
(
±hªad_t
 
tid
, 
signo
)

45 
n
;

47 i‡–(
n
 = 
	`±hªad_kûl
(
tid
, 
signo
)) == 0)

49 
î∫o
 = 
n
;

50 
	`îr_sys
("pthread_killÉrror");

51 
	}
}

54 
	$Pthªad_muãx©å_öô
(
±hªad_muãx©å_t
 *
©å
)

56 
n
;

58 i‡–(
n
 = 
	`±hªad_muãx©å_öô
(
©å
)) == 0)

60 
î∫o
 = 
n
;

61 
	`îr_sys
("pthread_mutexattr_initÉrror");

62 
	}
}

64 #ifdef 
_POSIX_THREAD_PROCESS_SHARED


66 
	$Pthªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *
©å
, 
Êag
)

68 
n
;

70 i‡–(
n
 = 
	`±hªad_muãx©å_£çsh¨ed
(
©å
, 
Êag
)) == 0)

72 
î∫o
 = 
n
;

73 
	`îr_sys
("pthread_mutexattr_setpsharedÉrror");

74 
	}
}

78 
	$Pthªad_muãx_öô
(
±hªad_muãx_t
 *
m±r
, 
±hªad_muãx©å_t
 *
©å
)

80 
n
;

82 i‡–(
n
 = 
	`±hªad_muãx_öô
(
m±r
, 
©å
)) == 0)

84 
î∫o
 = 
n
;

85 
	`îr_sys
("pthread_mutex_initÉrror");

86 
	}
}

90 
	$Pthªad_muãx_lock
(
±hªad_muãx_t
 *
m±r
)

92 
n
;

94 i‡–(
n
 = 
	`±hªad_muãx_lock
(
m±r
)) == 0)

96 
î∫o
 = 
n
;

97 
	`îr_sys
("pthread_mutex_lockÉrror");

98 
	}
}

102 
	$Pthªad_muãx_u∆ock
(
±hªad_muãx_t
 *
m±r
)

104 
n
;

106 i‡–(
n
 = 
	`±hªad_muãx_u∆ock
(
m±r
)) == 0)

108 
î∫o
 = 
n
;

109 
	`îr_sys
("pthread_mutex_unlockÉrror");

110 
	}
}

113 
	$Pthªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *
˝å
)

115 
n
;

117 i‡–(
n
 = 
	`±hªad_c⁄d_brﬂdˇ°
(
˝å
)) == 0)

119 
î∫o
 = 
n
;

120 
	`îr_sys
("pthread_cond_broadcastÉrror");

121 
	}
}

124 
	$Pthªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *
˝å
)

126 
n
;

128 i‡–(
n
 = 
	`±hªad_c⁄d_sig«l
(
˝å
)) == 0)

130 
î∫o
 = 
n
;

131 
	`îr_sys
("pthread_cond_signalÉrror");

132 
	}
}

135 
	$Pthªad_c⁄d_waô
(
±hªad_c⁄d_t
 *
˝å
, 
±hªad_muãx_t
 *
m±r
)

137 
n
;

139 i‡–(
n
 = 
	`±hªad_c⁄d_waô
(
˝å
, 
m±r
)) == 0)

141 
î∫o
 = 
n
;

142 
	`îr_sys
("pthread_cond_waitÉrror");

143 
	}
}

146 
	$Pthªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *
˝å
, 
±hªad_muãx_t
 *
m±r
,

147 c⁄° 
time•ec
 *
t•å
)

149 
n
;

151 i‡–(
n
 = 
	`±hªad_c⁄d_timedwaô
(
˝å
, 
m±r
, 
t•å
)) == 0)

153 
î∫o
 = 
n
;

154 
	`îr_sys
("pthread_cond_timedwaitÉrror");

155 
	}
}

158 
Pthªad_⁄˚
(
±hªad_⁄˚_t
 *
±r
, (*
func
)())

160 
n
;

162 i‡–(
n
 = 
	`±hªad_⁄˚
(
±r
, 
func
)) == 0)

164 
î∫o
 = 
n
;

165 
	`îr_sys
("pthread_onceÉrror");

166 
	}
}

169 
Pthªad_key_¸óã
(
±hªad_key_t
 *
key
, (*
func
)(*))

171 
n
;

173 i‡–(
n
 = 
	`±hªad_key_¸óã
(
key
, 
func
)) == 0)

175 
î∫o
 = 
n
;

176 
	`îr_sys
("pthread_key_createÉrror");

177 
	}
}

180 
	$Pthªad_£t•ecific
(
±hªad_key_t
 
key
, c⁄° *
vÆue
)

182 
n
;

184 i‡–(
n
 = 
	`±hªad_£t•ecific
(
key
, 
vÆue
)) == 0)

186 
î∫o
 = 
n
;

187 
	`îr_sys
("pthread_setspecificÉrror");

188 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/wrapsock.c

19 
	~"u≈.h
"

22 
	$Ac˚±
(
fd
, 
sockaddr
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
)

24 
n
;

26 
agaö
:

27 i‡–(
n
 = 
	`ac˚±
(
fd
, 
ß
, 
ßÀ≈å
)) < 0) {

28 #ifdef 
EPROTO


29 i‡(
î∫o
 =
EPROTO
 ||Éºnÿ=
ECONNABORTED
)

31 i‡(
î∫o
 =
ECONNABORTED
)

33 
agaö
;

35 
	`îr_sys
("acceptÉrror");

37 (
n
);

38 
	}
}

41 
	$Böd
(
fd
, c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

43 i‡(
	`böd
(
fd
, 
ß
, 
ßÀn
) < 0)

44 
	`îr_sys
("bindÉrror");

45 
	}
}

48 
	$C⁄√˘
(
fd
, c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

50 i‡(
	`c⁄√˘
(
fd
, 
ß
, 
ßÀn
) < 0)

51 
	`îr_sys
("connectÉrror");

52 
	}
}

55 
	$Gë≥î«me
(
fd
, 
sockaddr
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
)

57 i‡(
	`gë≥î«me
(
fd
, 
ß
, 
ßÀ≈å
) < 0)

58 
	`îr_sys
("getpeernameÉrror");

59 
	}
}

62 
	$Gësock«me
(
fd
, 
sockaddr
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
)

64 i‡(
	`gësock«me
(
fd
, 
ß
, 
ßÀ≈å
) < 0)

65 
	`îr_sys
("getsocknameÉrror");

66 
	}
}

69 
	$Gësock›t
(
fd
, 
Àvñ
, 
›äame
, *
›tvÆ
, 
sockÀn_t
 *
›éí±r
)

71 i‡(
	`gësock›t
(
fd
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí±r
) < 0)

72 
	`îr_sys
("getsockoptÉrror");

73 
	}
}

75 #ifdef 
HAVE_INET6_RTH_INIT


77 
	$I√t6_πh_•a˚
(
ty≥
, 
£gmíts
)

79 
ªt
;

81 
ªt
 = 
	`öë6_πh_•a˚
(
ty≥
, 
£gmíts
);

82 i‡(
ªt
 < 0)

83 
	`îr_quô
("inet6_rth_spaceÉrror");

85  
ªt
;

86 
	}
}

89 
	$I√t6_πh_öô
(*
πhbuf
, 
sockÀn_t
 
πhÀn
, 
ty≥
, 
£gmíts
)

91 *
ªt
;

93 
ªt
 = 
	`öë6_πh_öô
(
πhbuf
, 
πhÀn
, 
ty≥
, 
£gmíts
);

94 i‡(
ªt
 =
NULL
)

95 
	`îr_quô
("inet6_rth_initÉrror");

97  
ªt
;

98 
	}
}

101 
	$I√t6_πh_add
(*
πhbuf
, c⁄° 
ö6_addr
 *
addr
)

103 i‡(
	`öë6_πh_add
(
πhbuf
, 
addr
) < 0)

104 
	`îr_quô
("inet6_rth_addÉrror");

105 
	}
}

108 
	$I√t6_πh_ªvî£
(c⁄° *
ö
, *
out
)

110 i‡(
	`öë6_πh_ªvî£
(
ö
, 
out
) < 0)

111 
	`îr_quô
("inet6_rth_reverseÉrror");

112 
	}
}

115 
	$I√t6_πh_£gmíts
(c⁄° *
πhbuf
)

117 
ªt
;

119 
ªt
 = 
	`öë6_πh_£gmíts
(
πhbuf
);

120 i‡(
ªt
 < 0)

121 
	`îr_quô
("inet6_rth_segmentsÉrror");

123  
ªt
;

124 
	}
}

126 
ö6_addr
 *

127 
	$I√t6_πh_gëaddr
(c⁄° *
πhbuf
, 
idx
)

129 
ö6_addr
 *
ªt
;

131 
ªt
 = 
	`öë6_πh_gëaddr
(
πhbuf
, 
idx
);

132 i‡(
ªt
 =
NULL
)

133 
	`îr_quô
("inet6_rth_getaddrÉrror");

135  
ªt
;

136 
	}
}

139 #ifde‡
HAVE_KQUEUE


141 
	$Kqueue
()

143 
ªt
;

145 i‡((
ªt
 = 
	`kqueue
()) < 0)

146 
	`îr_sys
("kqueueÉrror");

147  
ªt
;

148 
	}
}

151 
	$Kevít
(
kq
, c⁄° 
kevít
 *
ch™gñi°
, 
nch™ges
,

152 
kevít
 *
evíéi°
, 
√víts
, c⁄° 
time•ec
 *
timeout
)

154 
ªt
;

156 i‡((
ªt
 = 
	`kevít
(
kq
, 
ch™gñi°
, 
nch™ges
,

157 
evíéi°
, 
√víts
, 
timeout
)) < 0)

158 
	`îr_sys
("keventÉrror");

159  
ªt
;

160 
	}
}

166 
	$Li°í
(
fd
, 
backlog
)

168 *
±r
;

171 i‡–(
±r
 = 
	`gëív
("LISTENQ")Ë!
NULL
)

172 
backlog
 = 
	`©oi
(
±r
);

174 i‡(
	`li°í
(
fd
, 
backlog
) < 0)

175 
	`îr_sys
("listenÉrror");

176 
	}
}

179 #ifdef 
HAVE_POLL


181 
	$Pﬁl
(
pﬁlfd
 *
fd¨øy
, 
nfds
, 
timeout
)

183 
n
;

185 i‡–(
n
 = 
	`pﬁl
(
fd¨øy
, 
nfds
, 
timeout
)) < 0)

186 
	`îr_sys
("pollÉrror");

188 (
n
);

189 
	}
}

192 
ssize_t


193 
	$Recv
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
Êags
)

195 
ssize_t
 
n
;

197 i‡–(
n
 = 
	`ªcv
(
fd
, 
±r
, 
nbyãs
, 
Êags
)) < 0)

198 
	`îr_sys
("recvÉrror");

199 (
n
);

200 
	}
}

202 
ssize_t


203 
	$Recv‰om
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
Êags
,

204 
sockaddr
 *
ß
, 
sockÀn_t
 *
ßÀ≈å
)

206 
ssize_t
 
n
;

208 i‡–(
n
 = 
	`ªcv‰om
(
fd
, 
±r
, 
nbyãs
, 
Êags
, 
ß
, 
ßÀ≈å
)) < 0)

209 
	`îr_sys
("recvfromÉrror");

210 (
n
);

211 
	}
}

213 
ssize_t


214 
	$Recvmsg
(
fd
, 
msghdr
 *
msg
, 
Êags
)

216 
ssize_t
 
n
;

218 i‡–(
n
 = 
	`ªcvmsg
(
fd
, 
msg
, 
Êags
)) < 0)

219 
	`îr_sys
("recvmsgÉrror");

220 (
n
);

221 
	}
}

224 
	$Sñe˘
(
nfds
, 
fd_£t
 *
ªadfds
, fd_£à*
wrôefds
, fd_£à*
ex˚±fds
,

225 
timevÆ
 *
timeout
)

227 
n
;

229 i‡–(
n
 = 
	`£À˘
(
nfds
, 
ªadfds
, 
wrôefds
, 
ex˚±fds
, 
timeout
)) < 0)

230 
	`îr_sys
("selectÉrror");

231 (
n
);

232 
	}
}

235 
	$Síd
(
fd
, c⁄° *
±r
, 
size_t
 
nbyãs
, 
Êags
)

237 i‡(
	`£nd
(
fd
, 
±r
, 
nbyãs
, 
Êags
Ë!(
ssize_t
)nbytes)

238 
	`îr_sys
("sendÉrror");

239 
	}
}

242 
	$Sídto
(
fd
, c⁄° *
±r
, 
size_t
 
nbyãs
, 
Êags
,

243 c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

245 i‡(
	`£ndto
(
fd
, 
±r
, 
nbyãs
, 
Êags
, 
ß
, 
ßÀn
Ë!(
ssize_t
)nbytes)

246 
	`îr_sys
("sendtoÉrror");

247 
	}
}

250 
	$Sídmsg
(
fd
, c⁄° 
msghdr
 *
msg
, 
Êags
)

252 
i
;

253 
ssize_t
 
nbyãs
;

255 
nbyãs
 = 0;

256 
i
 = 0; i < 
msg
->
msg_iovÀn
; i++)

257 
nbyãs
 +
msg
->
msg_iov
[
i
].
iov_Àn
;

259 i‡(
	`£ndmsg
(
fd
, 
msg
, 
Êags
Ë!
nbyãs
)

260 
	`îr_sys
("sendmsgÉrror");

261 
	}
}

264 
	$Sësock›t
(
fd
, 
Àvñ
, 
›äame
, c⁄° *
›tvÆ
, 
sockÀn_t
 
›éí
)

266 i‡(
	`£tsock›t
(
fd
, 
Àvñ
, 
›äame
, 
›tvÆ
, 
›éí
) < 0)

267 
	`îr_sys
("setsockoptÉrror");

268 
	}
}

271 
	$Shutdown
(
fd
, 
how
)

273 i‡(
	`shutdown
(
fd
, 
how
) < 0)

274 
	`îr_sys
("shutdownÉrror");

275 
	}
}

278 
	$Sock©m¨k
(
fd
)

280 
n
;

282 i‡–(
n
 = 
	`sock©m¨k
(
fd
)) < 0)

283 
	`îr_sys
("sockatmarkÉrror");

284 (
n
);

285 
	}
}

289 
	$Sockë
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
)

291 
n
;

293 i‡–(
n
 = 
	`sockë
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
)) < 0)

294 
	`îr_sys
("socketÉrror");

295 (
n
);

296 
	}
}

300 
	$Sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
, *
fd
)

302 
n
;

304 i‡–(
n
 = 
	`sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
, 
fd
)) < 0)

305 
	`îr_sys
("socketpairÉrror");

306 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/wrapstdio.c

5 
	~"u≈.h
"

8 
	$F˛o£
(
FILE
 *
Â
)

10 i‡(
	`f˛o£
(
Â
) != 0)

11 
	`îr_sys
("fcloseÉrror");

12 
	}
}

14 
FILE
 *

15 
	$Fd›í
(
fd
, c⁄° *
ty≥
)

17 
FILE
 *
Â
;

19 i‡–(
Â
 = 
	`fd›í
(
fd
, 
ty≥
)Ë=
NULL
)

20 
	`îr_sys
("fdopenÉrror");

22 (
Â
);

23 
	}
}

26 
	$Fgës
(*
±r
, 
n
, 
FILE
 *
°ªam
)

28 *
Ωå
;

30 i‡–(
Ωå
 = 
	`fgës
(
±r
, 
n
, 
°ªam
)Ë=
NULL
 && 
	`„º‹
(stream))

31 
	`îr_sys
("fgetsÉrror");

33  (
Ωå
);

34 
	}
}

36 
FILE
 *

37 
	$F›í
(c⁄° *
fûíame
, c⁄° *
mode
)

39 
FILE
 *
Â
;

41 i‡–(
Â
 = 
	`f›í
(
fûíame
, 
mode
)Ë=
NULL
)

42 
	`îr_sys
("fopenÉrror");

44 (
Â
);

45 
	}
}

48 
	$Fputs
(c⁄° *
±r
, 
FILE
 *
°ªam
)

50 i‡(
	`Âuts
(
±r
, 
°ªam
Ë=
EOF
)

51 
	`îr_sys
("fputsÉrror");

52 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/wrapunix.c

19 
	~"u≈.h
"

22 
	$CÆloc
(
size_t
 
n
, size_à
size
)

24 *
±r
;

26 i‡–(
±r
 = 
	`ˇŒoc
(
n
, 
size
)Ë=
NULL
)

27 
	`îr_sys
("callocÉrror");

28 (
±r
);

29 
	}
}

32 
	$Clo£
(
fd
)

34 i‡(
	`˛o£
(
fd
) == -1)

35 
	`îr_sys
("closeÉrror");

36 
	}
}

39 
	$Dup2
(
fd1
, 
fd2
)

41 i‡(
	`dup2
(
fd1
, 
fd2
) == -1)

42 
	`îr_sys
("dup2Érror");

43 
	}
}

46 
	$F˙é
(
fd
, 
cmd
, 
¨g
)

48 
n
;

50 i‡–(
n
 = 
	`f˙é
(
fd
, 
cmd
, 
¨g
)) == -1)

51 
	`îr_sys
("fcntlÉrror");

52 (
n
);

53 
	}
}

56 
	$Gëtimeofday
(
timevÆ
 *
tv
, *
foo
)

58 i‡(
	`gëtimeofday
(
tv
, 
foo
) == -1)

59 
	`îr_sys
("gettimeofdayÉrror");

61 
	}
}

64 
	$Io˘l
(
fd
, 
ªque°
, *
¨g
)

66 
n
;

68 i‡–(
n
 = 
	`io˘l
(
fd
, 
ªque°
, 
¨g
)) == -1)

69 
	`îr_sys
("ioctlÉrror");

70 (
n
);

71 
	}
}

73 
pid_t


74 
	$F‹k
()

76 
pid_t
 
pid
;

78 i‡–(
pid
 = 
	`f‹k
()) == -1)

79 
	`îr_sys
("forkÉrror");

80 (
pid
);

81 
	}
}

84 
	$MÆloc
(
size_t
 
size
)

86 *
±r
;

88 i‡–(
±r
 = 
	`mÆloc
(
size
)Ë=
NULL
)

89 
	`îr_sys
("mallocÉrror");

90 (
±r
);

91 
	}
}

94 
	$Mk°emp
(*
ãm∂©e
)

96 
i
;

98 #ifde‡
HAVE_MKSTEMP


99 i‡((
i
 = 
	`mk°emp
(
ãm∂©e
)) < 0)

100 
	`îr_quô
("mkstempÉrror");

102 i‡(
	`mkãmp
(
ãm∂©e
Ë=
NULL
 ||Åemplate[0] == 0)

103 
	`îr_quô
("mktempÉrror");

104 
i
 = 
	`O≥n
(
ãm∂©e
, 
O_CREAT
 | 
O_WRONLY
, 
FILE_MODE
);

107  
i
;

108 
	}
}

110 
	~<sys/mm™.h
>

113 
	$Mm≠
(*
addr
, 
size_t
 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off_t
 
off£t
)

115 *
±r
;

117 i‡–(
±r
 = 
	`mm≠
(
addr
, 
Àn
, 
¥Ÿ
, 
Êags
, 
fd
, 
off£t
)) == ((*) -1))

118 
	`îr_sys
("mmapÉrror");

119 (
±r
);

120 
	}
}

123 
	$O≥n
(c⁄° *
∑th«me
, 
oÊag
, 
mode_t
 
mode
)

125 
fd
;

127 i‡–(
fd
 = 
	`›í
(
∑th«me
, 
oÊag
, 
mode
)) == -1)

128 
	`îr_sys
("›íÉº‹ f‹ %s", 
∑th«me
);

129 (
fd
);

130 
	}
}

133 
	$Pùe
(*
fds
)

135 i‡(
	`pùe
(
fds
) < 0)

136 
	`îr_sys
("pipeÉrror");

137 
	}
}

139 
ssize_t


140 
	$Ród
(
fd
, *
±r
, 
size_t
 
nbyãs
)

142 
ssize_t
 
n
;

144 i‡–(
n
 = 
	`ªad
(
fd
, 
±r
, 
nbyãs
)) == -1)

145 
	`îr_sys
("readÉrror");

146 (
n
);

147 
	}
}

150 
	$Sigadd£t
(
sig£t_t
 *
£t
, 
signo
)

152 i‡(
	`sigadd£t
(
£t
, 
signo
) == -1)

153 
	`îr_sys
("sigaddsetÉrror");

154 
	}
}

157 
	$Sigdñ£t
(
sig£t_t
 *
£t
, 
signo
)

159 i‡(
	`sigdñ£t
(
£t
, 
signo
) == -1)

160 
	`îr_sys
("sigdelsetÉrror");

161 
	}
}

164 
	$Sigem±y£t
(
sig£t_t
 *
£t
)

166 i‡(
	`sigem±y£t
(
£t
) == -1)

167 
	`îr_sys
("sigemptysetÉrror");

168 
	}
}

171 
	$Sigfûl£t
(
sig£t_t
 *
£t
)

173 i‡(
	`sigfûl£t
(
£t
) == -1)

174 
	`îr_sys
("sigfillsetÉrror");

175 
	}
}

178 
	$Sigismembî
(c⁄° 
sig£t_t
 *
£t
, 
signo
)

180 
n
;

182 i‡–(
n
 = 
	`sigismembî
(
£t
, 
signo
)) == -1)

183 
	`îr_sys
("sigismemberÉrror");

184 (
n
);

185 
	}
}

188 
	$Sig≥ndög
(
sig£t_t
 *
£t
)

190 i‡(
	`sig≥ndög
(
£t
) == -1)

191 
	`îr_sys
("sigpendingÉrror");

192 
	}
}

195 
	$Sig¥ocmask
(
how
, c⁄° 
sig£t_t
 *
£t
, sig£t_à*
o£t
)

197 i‡(
	`sig¥ocmask
(
how
, 
£t
, 
o£t
) == -1)

198 
	`îr_sys
("sigprocmaskÉrror");

199 
	}
}

202 
	$Sådup
(c⁄° *
°r
)

204 *
±r
;

206 i‡–(
±r
 = 
	`°rdup
(
°r
)Ë=
NULL
)

207 
	`îr_sys
("strdupÉrror");

208 (
±r
);

209 
	}
}

212 
	$Sysc⁄f
(
«me
)

214 
vÆ
;

216 
î∫o
 = 0;

217 i‡–(
vÆ
 = 
	`sysc⁄f
(
«me
)) == -1)

218 
	`îr_sys
("sysconfÉrror");

219 (
vÆ
);

220 
	}
}

222 #ifdef 
HAVE_SYS_SYSCTL_H


224 
	$Sys˘l
(*
«me
, 
u_öt
 
«mñí
, *
ﬁdp
, 
size_t
 *
ﬁdÀ≈
,

225 *
√wp
, 
size_t
 
√wÀn
)

227 i‡(
	`sys˘l
(
«me
, 
«mñí
, 
ﬁdp
, 
ﬁdÀ≈
, 
√wp
, 
√wÀn
) == -1)

228 
	`îr_sys
("sysctlÉrror");

229 
	}
}

233 
	$U∆ök
(c⁄° *
∑th«me
)

235 i‡(
	`u∆ök
(
∑th«me
) == -1)

236 
	`îr_sys
("u∆ökÉº‹ f‹ %s", 
∑th«me
);

237 
	}
}

239 
pid_t


240 
	$Waô
(*
ùå
)

242 
pid_t
 
pid
;

244 i‡–(
pid
 = 
	`waô
(
ùå
)) == -1)

245 
	`îr_sys
("waitÉrror");

246 (
pid
);

247 
	}
}

249 
pid_t


250 
	$Waôpid
(
pid_t
 
pid
, *
ùå
, 
›ti⁄s
)

252 
pid_t
 
ªçid
;

254 i‡–(
ªçid
 = 
	`waôpid
(
pid
, 
ùå
, 
›ti⁄s
)) == -1)

255 
	`îr_sys
("waitpidÉrror");

256 (
ªçid
);

257 
	}
}

260 
	$Wrôe
(
fd
, *
±r
, 
size_t
 
nbyãs
)

262 i‡(
	`wrôe
(
fd
, 
±r
, 
nbyãs
) !=Çbytes)

263 
	`îr_sys
("writeÉrror");

264 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/writable_timeo.c

2 
	~"u≈.h
"

5 
	$wrôabÀ_timeo
(
fd
, 
£c
)

7 
fd_£t
 
w£t
;

8 
timevÆ
 
tv
;

10 
	`FD_ZERO
(&
w£t
);

11 
	`FD_SET
(
fd
, &
w£t
);

13 
tv
.
tv_£c
 = 
£c
;

14 
tv
.
tv_u£c
 = 0;

16 (
	`£À˘
(
fd
+1, 
NULL
, &
w£t
, NULL, &
tv
));

18 
	}
}

22 
	$WrôabÀ_timeo
(
fd
, 
£c
)

24 
n
;

26 i‡–(
n
 = 
	`wrôabÀ_timeo
(
fd
, 
£c
)) < 0)

27 
	`îr_sys
("writable_timeoÉrror");

28 (
n
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/write_fd.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$wrôe_fd
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
£ndfd
)

7 
msghdr
 
msg
;

8 
iovec
 
iov
[1];

10 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


12 
cmsghdr
 
cm
;

13 
c⁄åﬁ
[
	`CMSG_SPACE
(())];

14 } 
c⁄åﬁ_un
;

15 
cmsghdr
 *
cm±r
;

17 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ_un
.
c⁄åﬁ
;

18 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ_un
.
c⁄åﬁ
);

20 
cm±r
 = 
	`CMSG_FIRSTHDR
(&
msg
);

21 
cm±r
->
cmsg_Àn
 = 
	`CMSG_LEN
(());

22 
cm±r
->
cmsg_Àvñ
 = 
SOL_SOCKET
;

23 
cm±r
->
cmsg_ty≥
 = 
SCM_RIGHTS
;

24 *((*Ë
	`CMSG_DATA
(
cm±r
)Ë
£ndfd
;

26 
msg
.
msg_ac¸ights
 = (
ˇddr_t
Ë&
£ndfd
;

27 
msg
.
msg_ac¸ight¶í
 = ();

30 
msg
.
msg_«me
 = 
NULL
;

31 
msg
.
msg_«mñí
 = 0;

33 
iov
[0].
iov_ba£
 = 
±r
;

34 
iov
[0].
iov_Àn
 = 
nbyãs
;

35 
msg
.
msg_iov
 = 
iov
;

36 
msg
.
msg_iovÀn
 = 1;

38 (
	`£ndmsg
(
fd
, &
msg
, 0));

39 
	}
}

42 
ssize_t


43 
	$Wrôe_fd
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
£ndfd
)

45 
ssize_t
 
n
;

47 i‡–(
n
 = 
	`wrôe_fd
(
fd
, 
±r
, 
nbyãs
, 
£ndfd
)) < 0)

48 
	`îr_sys
("write_fdÉrror");

50 (
n
);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/lib/writen.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$wrôí
(
fd
, c⁄° *
v±r
, 
size_t
 
n
)

7 
size_t
 
∆e·
;

8 
ssize_t
 
nwrôãn
;

9 c⁄° *
±r
;

11 
±r
 = 
v±r
;

12 
∆e·
 = 
n
;

13 
∆e·
 > 0) {

14 i‡–(
nwrôãn
 = 
	`wrôe
(
fd
, 
±r
, 
∆e·
)) <= 0) {

15 i‡(
nwrôãn
 < 0 && 
î∫o
 =
EINTR
)

16 
nwrôãn
 = 0;

21 
∆e·
 -
nwrôãn
;

22 
±r
 +
nwrôãn
;

24 (
n
);

25 
	}
}

29 
	$Wrôí
(
fd
, *
±r
, 
size_t
 
nbyãs
)

31 i‡(
	`wrôí
(
fd
, 
±r
, 
nbyãs
) !=Çbytes)

32 
	`îr_sys
("writenÉrror");

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/addrinfo.h

1 #i‚def 
__addröfo_h


2 
	#__addröfo_h


	)

10 
	saddröfo
 {

11 
	mai_Êags
;

12 
	mai_Ámûy
;

13 
	mai_sockty≥
;

14 
	mai_¥Ÿocﬁ
;

15 
size_t
 
	mai_addæí
;

16 *
	mai_ˇn⁄«me
;

17 
sockaddr
 *
	mai_addr
;

18 
addröfo
 *
	mai_√xt
;

22 
	#AI_PASSIVE
 1

	)

23 
	#AI_CANONNAME
 2

	)

26 
	#NI_MAXHOST
 1025

	)

27 
	#NI_MAXSERV
 32

	)

29 
	#NI_NOFQDN
 1

	)

30 
	#NI_NUMERICHOST
 2

	)

31 
	#NI_NAMEREQD
 4

	)

32 
	#NI_NUMERICSERV
 8

	)

33 
	#NI_DGRAM
 16

	)

36 
	#EAI_ADDRFAMILY
 1

	)

37 
	#EAI_AGAIN
 2

	)

38 
	#EAI_BADFLAGS
 3

	)

39 
	#EAI_FAIL
 4

	)

40 
	#EAI_FAMILY
 5

	)

41 
	#EAI_MEMORY
 6

	)

42 
	#EAI_NODATA
 7

	)

43 
	#EAI_NONAME
 8

	)

44 
	#EAI_SERVICE
 9

	)

45 
	#EAI_SOCKTYPE
 10

	)

46 
	#EAI_SYSTEM
 11

	)

	@/media/sf_ddrive/progs/network/unpv13e/libfree/getaddrinfo.c

21 #ifdef 
__osf__


22 
	#_SOCKADDR_LEN


	)

23 
	#INET6


	)

26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

28 
	~<√töë/ö.h
>

29 
	~<˘y≥.h
>

30 
	~<√tdb.h
>

31 
	~<¨∑/öë.h
>

32 
	~<¨∑/«me£r.h
>

33 
	~<ªsﬁv.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 
	~<uni°d.h
>

37 
	~<sys/un.h
>

39 #i‚def 
__osf__


40 
	~"addröfo.h
"

52 #ifdef 
AF_INET


53 
	#IPV4


	)

57 #if 
deföed
(
IPV6ADDR_ANY_INIT
)

58 
	#IPV6


	)

59 #ñif 
deföed
(
IPV6_FLOWINFO_FLOWLABEL
)

60 
	#IPV6


	)

67 #ifdef 
AF_UNIX


68 
	#LOCAL


	)

70 #i‚def 
AF_LOCAL


71 
	#AF_LOCAL
 
AF_UNIX


	)

73 #i‚def 
PF_LOCAL


74 
	#PF_LOCAL
 
PF_UNIX


	)

113 
öë_±⁄
(, const *, *);

115 
	#HENTBUFSIZ
 8*1024

	)

116 
	#HENTMAXADDR
 32

	)

119 
	#AI_CLONE
 4

	)

122 
gëaddröfo_ho°
(c⁄° *, 
ho°ít
 *,

123 
ho°ít
 **, *, , );

124 
gëaddröfo_£rv
(
addröfo
 *,

125 c⁄° 
addröfo
 *, const *,

126 
£rvít
 *, *, );

127 
gëaddröfo_p‹t
(
addröfo
 *, , );

128 
addröfo_loˇl
(c⁄° *, 
addröfo
 *,

129 
addröfo
 **);

130 
addröfo
 *
gëaddröfo_˛⁄e
(addrinfo *);

134 
addröfo
 
	ghöts_deÁu…
;

137 
	$gëaddröfo
(c⁄° *
ho°
, c⁄° *
£rv
,

138 c⁄° 
addröfo
 *
höt•å
, addröfÿ**
ªsu…
)

140 
rc
, 
îr‹
;

141 
ho°ít
 *
h±r
, 
hít
;

142 
£rvít
 
£¡
;

143 
hítbuf
[
HENTBUFSIZ
], 
hít_addr
[
HENTMAXADDR
];

144 *
hít_Æü£s
[1], *
hít_addr_li°
[2];

145 **
≠
;

146 
addröfo
 
höts
, *
ai
, *
aihód
, **
aù√xt
;

148 #ifdef 
IPV4


149 
sockaddr_ö
 *
sö±r
;

152 #ifdef 
IPV6


153 
sockaddr_ö6
 *
sö6±r
;

158 
	#îr‹
(
e
Ë{ 
îr‹
 = (e); 
bad
; }

	)

168 i‡(
höt•å
 =
NULL
) {

169 
höts_deÁu…
.
ai_Ámûy
 = 
AF_UNSPEC
;

170 
höts
 = 
höts_deÁu…
;

172 
höts
 = *
höt•å
;

177 i‡(
höts
.
ai_Êags
 & ~(
AI_PASSIVE
 | 
AI_CANONNAME
))

178 
	`îr‹
(
EAI_BADFLAGS
);

184 i‡(
höts
.
ai_Ámûy
 != 0) {

185 
höts
.
ai_Ámûy
) {

186 
AF_UNSPEC
: ;

189 #ifdef 
IPV4


190 
AF_INET
:

191 i‡(
höts
.
ai_sockty≥
 != 0 &&

192 (
höts
.
ai_sockty≥
 !
SOCK_STREAM
 &&

193 
höts
.
ai_sockty≥
 !
SOCK_DGRAM
 &&

194 
höts
.
ai_sockty≥
 !
SOCK_RAW
))

195 
	`îr‹
(
EAI_SOCKTYPE
);

198 #ifdef 
IPV6


199 
AF_INET6
:

200 i‡(
höts
.
ai_sockty≥
 != 0 &&

201 (
höts
.
ai_sockty≥
 !
SOCK_STREAM
 &&

202 
höts
.
ai_sockty≥
 !
SOCK_DGRAM
 &&

203 
höts
.
ai_sockty≥
 !
SOCK_RAW
))

204 
	`îr‹
(
EAI_SOCKTYPE
);

207 #ifdef 
LOCAL


208 
AF_LOCAL
:

209 i‡(
höts
.
ai_sockty≥
 != 0 &&

210 (
höts
.
ai_sockty≥
 !
SOCK_STREAM
 &&

211 
höts
.
ai_sockty≥
 !
SOCK_DGRAM
))

212 
	`îr‹
(
EAI_SOCKTYPE
);

216 
	`îr‹
(
EAI_FAMILY
);

220 i‡(
ho°
 =
NULL
 || host[0] == '\0') {

221 i‡(
£rv
 =
NULL
 || serv[0] == '\0')

222 
	`îr‹
(
EAI_NONAME
);

224 i‡(
höts
.
ai_Êags
 & 
AI_PASSIVE
) {

229 
höts
.
ai_Ámûy
) {

230 #ifdef 
IPV4


231 
AF_INET
: 
ho°
 = "0.0.0.0"; ;

233 #ifdef 
IPV6


234 
AF_INET6
: 
ho°
 = "0::0"; ;

236 #ifdef 
LOCAL


237 
AF_LOCAL
:

238 i‡(
£rv
[0] != '/')

239 
	`îr‹
(
EAI_ADDRFAMILY
);

242 0: 
	`îr‹
(
EAI_ADDRFAMILY
);

252 
ho°
 = "localhost";

254 } i‡(
höts
.
ai_Ámûy
 == 0) {

267 
ãmp
[16];

269 #ifdef 
IPV4


270 i‡(
	`öë_±⁄
(
AF_INET
, 
ho°
, 
ãmp
) == 1)

271 
höts
.
ai_Ámûy
 = 
AF_INET
;

273 #ifdef 
IPV6


274 i‡(
	`öë_±⁄
(
AF_INET6
, 
ho°
, 
ãmp
) == 1)

275 
höts
.
ai_Ámûy
 = 
AF_INET6
;

284 #ifdef 
LOCAL


300 i‡((
ho°
 !
NULL
 && host[0] == '/'))

301 (
	`addröfo_loˇl
(
ho°
, &
höts
, 
ªsu…
));

303 i‡((
£rv
 !
NULL
 && serv[0] == '/'))

304 (
	`addröfo_loˇl
(
£rv
, &
höts
, 
ªsu…
));

316 
hít
.
h_«me
 = 
hítbuf
;

317 
hít
.
h_Æü£s
 = 
hít_Æü£s
;

318 
hít_Æü£s
[0] = 
NULL
;

319 
hít
.
h_addr_li°
 = 
hít_addr_li°
;

320 
hít_addr_li°
[0] = 
hít_addr
;

321 
hít_addr_li°
[1] = 
NULL
;

322 
h±r
 = &
hít
;

324 i‡–(
rc
 = 
	`gëaddröfo_ho°
(
ho°
, &
hít
, &
h±r
, 
hítbuf
, 
HENTBUFSIZ
,

325 
höts
.
ai_Ámûy
)) != 0)

326 
	`îr‹
(
rc
);

341 i‡(
höts
.
ai_Ámûy
 !
AF_UNSPEC
 && höts.ai_Ámûy !
h±r
->
h_addπy≥
)

342 
	`îr‹
(
EAI_ADDRFAMILY
);

350 
aihód
 = 
NULL
;

351 
aù√xt
 = &
aihód
;

352 
≠
 = 
h±r
->
h_addr_li°
; *≠ !
NULL
;áp++) {

353 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

354 
	`îr‹
(
EAI_MEMORY
);

355 *
aù√xt
 = 
ai
;

356 
aù√xt
 = &
ai
->
ai_√xt
;

359 i‡–(
ai
->
ai_sockty≥
 = 
höts
.ai_socktype) == 0)

360 
ai
->
ai_Êags
 |
AI_CLONE
;

361 
ai
->
ai_¥Ÿocﬁ
 = 
höts
.ai_protocol;

363 
ai
->
ai_Ámûy
 = 
h±r
->
h_addπy≥
;

364 
ai
->
ai_Ámûy
) {

370 #ifdef 
IPV4


371 
AF_INET
:

372 i‡–(
sö±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö
))Ë=
NULL
)

373 
	`îr‹
(
EAI_MEMORY
);

374 #ifdef 
SIN_LEN


375 
sö±r
->
sö_Àn
 = (
sockaddr_ö
);

377 
sö±r
->
sö_Ámûy
 = 
AF_INET
;

378 
	`mem˝y
(&
sö±r
->
sö_addr
, *
≠
, (
ö_addr
));

379 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö±r
;

380 
ai
->
ai_addæí
 = (
sockaddr_ö
);

384 #ifdef 
IPV6


385 
AF_INET6
:

386 i‡–(
sö6±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö6
))Ë=
NULL
)

387 
	`îr‹
(
EAI_MEMORY
);

388 #ifdef 
SIN6_LEN


389 
sö6±r
->
sö6_Àn
 = (
sockaddr_ö6
);

391 
sö6±r
->
sö6_Ámûy
 = 
AF_INET6
;

392 
	`mem˝y
(&
sö6±r
->
sö6_addr
, *
≠
, (
ö6_addr
));

393 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö6±r
;

394 
ai
->
ai_addæí
 = (
sockaddr_ö6
);

401 i‡(
höts
.
ai_Êags
 & 
AI_CANONNAME
) {

407 i‡(
h±r
->
h_«me
 !
NULL
) {

408 i‡–(
aihód
->
ai_ˇn⁄«me
 = 
	`°rdup
(
h±r
->
h_«me
)Ë=
NULL
)

409 
	`îr‹
(
EAI_MEMORY
);

416 i‡–(
aihód
->
ai_ˇn⁄«me
 = 
	`°rdup
(
ho°
)Ë=
NULL
)

417 
	`îr‹
(
EAI_MEMORY
);

424 i‡(
£rv
 !
NULL
 && serv[0] != '\0') {

425 i‡–(
rc
 = 
	`gëaddröfo_£rv
(
aihód
, &
höts
, 
£rv
, &
£¡
,

426 
hítbuf
, 
HENTBUFSIZ
)) != 0)

427 
	`îr‹
(
rc
);

430 *
ªsu…
 = 
aihód
;

433 
bad
:

434 
	`‰ìaddröfo
(
aihód
);

435 (
îr‹
);

436 
	}
}

443 
	$gëaddröfo_ho°
(c⁄° *
ho°
,

444 
ho°ít
 *
h±r
, ho°íà**
h±Ωå
,

445 *
buf
, 
bufsiz
, 
Ámûy
)

448 #ifdef 
REENTRANT


449 
h_î∫o
;

452 #ifdef 
IPV4


460 i‡(
	`isdigô
(
ho°
[0])) {

461 i‡(
	`öë_±⁄
(
AF_INET
, 
ho°
, 
h±r
->
h_addr_li°
[0]) == 1) {

464 
	`°∫˝y
(
h±r
->
h_«me
, 
ho°
, 
bufsiz
-1);

465 
buf
[
bufsiz
-1] = '\0';

466 
h±r
->
h_addπy≥
 = 
AF_INET
;

467 
h±r
->
h_Àngth
 = (
ö_addr
);

473 #ifdef 
IPV6


477 i‡(
	`isxdigô
(
ho°
[0]) || host[0] == ':') {

478 i‡(
	`öë_±⁄
(
AF_INET6
, 
ho°
, 
h±r
->
h_addr_li°
[0]) == 1) {

481 
	`°∫˝y
(
buf
, 
ho°
, 
bufsiz
-1);

482 
buf
[
bufsiz
-1] = '\0';

483 
h±r
->
h_addπy≥
 = 
AF_INET6
;

484 
h±r
->
h_Àngth
 = (
ö6_addr
);

495 i‡((
_ªs
.
›ti⁄s
 & 
RES_INIT
) == 0)

496 
	`ªs_öô
();

498 #ifdef 
IPV6


506 #i‚def 
RES_USE_INET6


509 
	#RES_USE_INET6
 0x00002000

	)

511 i‡(
Ámûy
 =
AF_INET6
)

512 
_ªs
.
›ti⁄s
 |
RES_USE_INET6
;

515 #ifdef 
REENTRANT


516 
h±r
 = 
	`gëho°by«me_r
(
ho°
, h±r, 
buf
, 
bufsiz
, &
h_î∫o
);

518 
h±r
 = 
	`gëho°by«me
(
ho°
);

520 i‡(
h±r
 =
NULL
) {

521 
h_î∫o
) {

522 
HOST_NOT_FOUND
: (
EAI_NONAME
);

523 
TRY_AGAIN
: (
EAI_AGAIN
);

524 
NO_RECOVERY
: (
EAI_FAIL
);

525 
NO_DATA
: (
EAI_NODATA
);

526 : (
EAI_NONAME
);

529 *
h±Ωå
 = 
h±r
;

531 
	}
}

538 
	$gëaddröfo_£rv
(
addröfo
 *
aihód
,

539 c⁄° 
addröfo
 *
höt•å
, c⁄° *
£rv
,

540 
£rvít
 *
•å¨g
, *
buf
, 
bufsiz
)

542 
p‹t
, 
rc
;

543 
nfound
 = 0;

544 
£rvít
 *
•å
;

554 i‡(
	`isdigô
(
£rv
[0]Ë&& 
höt•å
->
ai_sockty≥
 != 0) {

555 
p‹t
 = 
	`ht⁄s
(
	`©oi
(
£rv
));

556 i‡–(
rc
 = 
	`gëaddröfo_p‹t
(
aihód
, 
p‹t
, 
höt•å
->
ai_sockty≥
)) == 0)

557 (
EAI_NONAME
);

558 i‡(
rc
 < 0)

559 (
EAI_MEMORY
);

569 i‡(
höt•å
->
ai_sockty≥
 =0 || höt•å->ai_sockty≥ =
SOCK_STREAM
) {

570 #ifdef 
REENTRANT


571 
•å
 = 
	`gë£rvby«me_r
(
£rv
, "t˝", 
•å¨g
, 
buf
, 
bufsiz
);

573 
•å
 = 
	`gë£rvby«me
(
£rv
, "tcp");

575 i‡(
•å
 !
NULL
) {

576 
rc
 = 
	`gëaddröfo_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_STREAM
);

577 i‡(
rc
 < 0)

578 (
EAI_MEMORY
);

579 
nfound
 +
rc
;

586 i‡(
höt•å
->
ai_sockty≥
 =0 || höt•å->ai_sockty≥ =
SOCK_DGRAM
) {

587 #ifdef 
REENTRANT


588 
•å
 = 
	`gë£rvby«me_r
(
£rv
, "udp", 
•å¨g
, 
buf
, 
bufsiz
);

590 
•å
 = 
	`gë£rvby«me
(
£rv
, "udp");

592 i‡(
•å
 !
NULL
) {

593 
rc
 = 
	`gëaddröfo_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_DGRAM
);

594 i‡(
rc
 < 0)

595 (
EAI_MEMORY
);

596 
nfound
 +
rc
;

600 i‡(
nfound
 == 0) {

605 i‡(
höt•å
->
ai_sockty≥
 == 0)

606 (
EAI_NONAME
);

608 (
EAI_SERVICE
);

611 
	}
}

640 
	$gëaddröfo_p‹t
(
addröfo
 *
aihód
, 
p‹t
, 
sockty≥
)

643 
nfound
 = 0;

644 
addröfo
 *
ai
;

646 
ai
 = 
aihód
;áò!
NULL
;áòai->
ai_√xt
) {

656 i‡(
ai
->
ai_Êags
 & 
AI_CLONE
) {

657 i‡(
ai
->
ai_sockty≥
 != 0) {

658 i‡–(
ai
 = 
	`gëaddröfo_˛⁄e
◊i)Ë=
NULL
)

662 } i‡(
ai
->
ai_sockty≥
 !
sockty≥
)

665 
ai
->
ai_sockty≥
 = 
sockty≥
;

667 
ai
->
ai_Ámûy
) {

668 #ifdef 
IPV4


669 
AF_INET
:

670 ((
sockaddr_ö
 *Ë
ai
->
ai_addr
)->
sö_p‹t
 = 
p‹t
;

671 
nfound
++;

674 #ifdef 
IPV6


675 
AF_INET6
:

676 ((
sockaddr_ö6
 *Ë
ai
->
ai_addr
)->
sö6_p‹t
 = 
p‹t
;

677 
nfound
++;

682 (
nfound
);

683 
	}
}

689 
addröfo
 *

690 
	$gëaddröfo_˛⁄e
(
addröfo
 *
ai
)

692 
addröfo
 *
√w
;

694 i‡–(
√w
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

695 (
NULL
);

697 
√w
->
ai_√xt
 = 
ai
->ai_next;

698 
ai
->
ai_√xt
 = 
√w
;

700 
√w
->
ai_Êags
 = 0;

701 
√w
->
ai_Ámûy
 = 
ai
->ai_family;

702 
√w
->
ai_sockty≥
 = 
ai
->ai_socktype;

703 
√w
->
ai_¥Ÿocﬁ
 = 
ai
->ai_protocol;

704 
√w
->
ai_ˇn⁄«me
 = 
NULL
;

705 
√w
->
ai_addæí
 = 
ai
->ai_addrlen;

706 i‡–(
√w
->
ai_addr
 = 
	`mÆloc
(
ai
->
ai_addæí
)Ë=
NULL
)

707 (
NULL
);

708 
	`mem˝y
(
√w
->
ai_addr
, 
ai
->ai_addr,ái->
ai_addæí
);

710 (
√w
);

711 
	}
}

713 #ifdef 
LOCAL


720 
	$addröfo_loˇl
(c⁄° *
∑th
, 
addröfo
 *
höts
,

721 
addröfo
 **
ªsu…
)

723 
addröfo
 *
ai
;

724 
sockaddr_un
 *
u≈
;

726 i‡(
höts
->
ai_sockty≥
 == 0)

727 (
EAI_SOCKTYPE
);

729 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

730 (
NULL
);

732 
ai
->
ai_Êags
 = 0;

733 
ai
->
ai_Ámûy
 = 
AF_LOCAL
;

734 
ai
->
ai_sockty≥
 = 
höts
->ai_socktype;

735 
ai
->
ai_¥Ÿocﬁ
 = 0;

738 
ai
->
ai_addæí
 = (
sockaddr_un
);

739 i‡–(
ai
->
ai_addr
 = 
	`mÆloc
◊i->
ai_addæí
)Ë=
NULL
)

740 (
EAI_MEMORY
);

741 
u≈
 = (
sockaddr_un
 *Ë
ai
->
ai_addr
;

742 
u≈
->
sun_Ámûy
 = 
AF_UNIX
;

743 
	`°∫˝y
(
u≈
->
sun_∑th
, 
∑th
, (unp->sun_path));

745 
ai
->
ai_ˇn⁄«me
 = 
NULL
;

746 
ai
->
ai_√xt
 = 
NULL
;

747 *
ªsu…
 = 
ai
;

749 i‡(
höts
->
ai_Êags
 & 
AI_PASSIVE
)

750 
	`u∆ök
(
∑th
);

753 
	}
}

757 
	$‰ìaddröfo
(
addröfo
 *
aihód
)

759 
addröfo
 *
ai
, *
aöext
;

761 
ai
 = 
aihód
;áò!
NULL
;áò
aöext
) {

762 i‡(
ai
->
ai_addr
 !
NULL
)

763 
	`‰ì
(
ai
->
ai_addr
);

764 i‡(
ai
->
ai_ˇn⁄«me
 !
NULL
)

765 
	`‰ì
(
ai
->
ai_ˇn⁄«me
);

766 
aöext
 = 
ai
->
ai_√xt
;

767 
	`‰ì
(
ai
);

769 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/getnameinfo.c

20 
	~<sys/ty≥s.h
>

21 
	~<sys/sockë.h
>

22 
	~<√töë/ö.h
>

23 
	~<√tdb.h
>

24 
	~<°rög.h
>

29 #ifdef 
AF_INET


30 
	#IPV4


	)

32 #ifdef 
IPV6ADDR_ANY_INIT


33 
	#IPV6


	)

42 
	#HENTBUFSIZ
 8*1024

	)

45 
do_ùv46
(*, 
size_t
, *, size_t,

46 *, 
size_t
, , );

49 
	$gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
size_t
 
ßÀn
,

50 *
ho°
, 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
)

53 
ß
->
ß_Ámûy
) {

54 #ifdef 
IPV4


55 
AF_INET
: {

56 
sockaddr_ö
 *
ßö
 = (sockaddr_ö *Ë
ß
;

58 (
	`do_ùv46
(
ho°
, 
ho°Àn
, 
£rv
, 
£rvÀn
,

59 &
ßö
->
sö_addr
, (
ö_addr
), 
AF_INET
,

60 
ßö
->
sö_p‹t
));

64 #ifdef 
IPV6


65 
AF_INET6
: {

66 
sockaddr_ö6
 *
ßö
 = (sockaddr_ö6 *Ë
ß
;

68 (
	`do_ùv46
(
ho°
, 
ho°Àn
, 
£rv
, 
£rvÀn
,

69 &
ßö
->
sö6_addr
, (
ö6_addr
), 
AF_INET6
,

70 
ßö
->
sö6_p‹t
));

77 
	}
}

84 
	$do_ùv46
(*
ho°
, 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
,

85 *
≠å
, 
size_t
 
Æí
, 
Ámûy
, 
p‹t
)

87 
ho°ít
 *
h±r
, 
hít
;

88 
£rvít
 *
•å
, 
£¡
;

89 
hítbuf
[
HENTBUFSIZ
];

91 i‡(
ho°Àn
 > 0) {

92 #ifdef 
REENTRANT


93 
h±r
 = 
	`gëho°byaddr_r
(
≠å
, 
Æí
, 
Ámûy
,

94 &
hít
, 
hítbuf
, 
HENTBUFSIZ
, &
h_î∫o
);

96 
h±r
 = 
	`gëho°byaddr
(
≠å
, 
Æí
, 
Ámûy
);

98 i‡(
h±r
 !
NULL
 && h±r->
h_«me
 != NULL)

99 
	`°∫˝y
(
ho°
, 
h±r
->
h_«me
, 
ho°Àn
);

104 i‡(
£rvÀn
 > 0) {

110 #ifdef 
REENTRANT


111 
•å
 = 
	`gë£rvbyp‹t_r
(
p‹t
, 
NULL
,

112 &
£¡
, 
hítbuf
, 
HENTBUFSIZ
);

114 
•å
 = 
	`gë£rvbyp‹t
(
p‹t
, 
NULL
);

116 i‡(
•å
 !
NULL
 && s±r->
s_«me
 != NULL)

117 
	`°∫˝y
(
£rv
, 
•å
->
s_«me
, 
£rvÀn
);

122 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/in_cksum.c

1 
	~"u≈.h
"

3 
uöt16_t


4 
	$ö_cksum
(
uöt16_t
 *
addr
, 
Àn
)

6 
∆e·
 = 
Àn
;

7 
uöt32_t
 
sum
 = 0;

8 
uöt16_t
 *
w
 = 
addr
;

9 
uöt16_t
 
™swî
 = 0;

16 
∆e·
 > 1) {

17 
sum
 +*
w
++;

18 
∆e·
 -= 2;

22 i‡(
∆e·
 == 1) {

23 *(*)(&
™swî
Ë*(*)
w
 ;

24 
sum
 +
™swî
;

28 
sum
 = (sum >> 16) + (sum & 0xffff);

29 
sum
 += (sum >> 16);

30 
™swî
 = ~
sum
;

31 (
™swî
);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/inet_aton.c

11 
	~<sys/ty≥s.h
>

12 
	~<√töë/ö.h
>

23 
	$öë_©⁄
(c⁄° *
˝
, 
ö_addr
 *
≠
)

25 
dŸs
 = 0;

26 
u_l⁄g
 
acc
 = 0, 
addr
 = 0;

29 
cc
 = *
˝
;

31 
cc
) {

42 
acc
 =ác¯* 10 + (
cc
 - '0');

46 i‡(++
dŸs
 > 3) {

52 i‡(
acc
 > 255) {

55 
addr
 =ádd∏<< 8 | 
acc
;

56 
acc
 = 0;

62 } *
˝
++) ;

65 i‡(
dŸs
 < 3) {

66 
addr
 <<8 * (3 - 
dŸs
) ;

70 i‡(
≠
) {

71 
≠
->
s_addr
 = 
	`ht⁄l
(
addr
);

75 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/inet_ntop.c

19 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

20 
	grcsid
[] = "$Id: inet_ntop.c,v 1.1.1.1 2002/11/14 03:33:35 fenner Exp $";

23 
	~<sys/∑øm.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/sockë.h
>

26 
	~<√töë/ö.h
>

27 
	~<¨∑/öë.h
>

28 
	~<°rög.h
>

29 
	~<î∫o.h
>

30 
	~<°dio.h
>

32 
	#IN6ADDRSZ
 16

	)

33 
	#INT16SZ
 2

	)

35 #i‚def 
AF_INET6


36 
	#AF_INET6
 
AF_MAX
+1

	)

44 c⁄° *
öë_¡›4
(c⁄° 
u_ch¨
 *
§c
, *
d°
, 
size_t
 
size
);

45 c⁄° *
öë_¡›6
(c⁄° 
u_ch¨
 *
§c
, *
d°
, 
size_t
 
size
);

56 
	$öë_¡›
(
af
, 
§c
, 
d°
, 
size
)

57 
af
;

58 c⁄° *
§c
;

59 *
d°
;

60 
size_t
 
size
;

62 
af
) {

63 
AF_INET
:

64  (
	`öë_¡›4
(
§c
, 
d°
, 
size
));

65 
AF_INET6
:

66  (
	`öë_¡›6
(
§c
, 
d°
, 
size
));

68 
î∫o
 = 
EAFNOSUPPORT
;

69  (
NULL
);

72 
	}
}

86 
	$öë_¡›4
(
§c
, 
d°
, 
size
)

87 c⁄° 
u_ch¨
 *
§c
;

88 *
d°
;

89 
size_t
 
size
;

91 c⁄° 
fmt
[] = "%u.%u.%u.%u";

92 
tmp
[ "255.255.255.255"];

94 
	`•rötf
(
tmp
, 
fmt
, 
§c
[0], src[1], src[2], src[3]);

95 i‡(
	`°æí
(
tmp
Ë> 
size
) {

96 
î∫o
 = 
ENOSPC
;

97  (
NULL
);

99 
	`°r˝y
(
d°
, 
tmp
);

100  (
d°
);

101 
	}
}

110 
	$öë_¡›6
(
§c
, 
d°
, 
size
)

111 c⁄° 
u_ch¨
 *
§c
;

112 *
d°
;

113 
size_t
 
size
;

122 
tmp
[ "ffff:ffff:ffff:ffff:ffff:ffff:255.255.255.255"], *
ç
;

123 °ru˘ { 
ba£
, 
Àn
; } 
be°
, 
cur
;

124 
u_öt
 
w‹ds
[
IN6ADDRSZ
 / 
INT16SZ
];

125 
i
;

132 
	`mem£t
(
w‹ds
, 0,  words);

133 
i
 = 0; i < 
IN6ADDRSZ
; i++)

134 
w‹ds
[
i
 / 2] |(
§c
[i] << ((1 - (i % 2)) << 3));

135 
be°
.
ba£
 = -1;

136 
cur
.
ba£
 = -1;

137 
i
 = 0; i < (
IN6ADDRSZ
 / 
INT16SZ
); i++) {

138 i‡(
w‹ds
[
i
] == 0) {

139 i‡(
cur
.
ba£
 == -1)

140 
cur
.
ba£
 = 
i
, cur.
Àn
 = 1;

142 
cur
.
Àn
++;

144 i‡(
cur
.
ba£
 != -1) {

145 i‡(
be°
.
ba£
 =-1 || 
cur
.
Àn
 > best.len)

146 
be°
 = 
cur
;

147 
cur
.
ba£
 = -1;

151 i‡(
cur
.
ba£
 != -1) {

152 i‡(
be°
.
ba£
 =-1 || 
cur
.
Àn
 > best.len)

153 
be°
 = 
cur
;

155 i‡(
be°
.
ba£
 !-1 && be°.
Àn
 < 2)

156 
be°
.
ba£
 = -1;

161 
ç
 = 
tmp
;

162 
i
 = 0; i < (
IN6ADDRSZ
 / 
INT16SZ
); i++) {

164 i‡(
be°
.
ba£
 !-1 && 
i
 >= best.base &&

165 
i
 < (
be°
.
ba£
 + be°.
Àn
)) {

166 i‡(
i
 =
be°
.
ba£
)

167 *
ç
++ = ':';

171 i‡(
i
 != 0)

172 *
ç
++ = ':';

174 i‡(
i
 =6 && 
be°
.
ba£
 == 0 &&

175 (
be°
.
Àn
 =6 || (be°.À¿=5 && 
w‹ds
[5] == 0xffff))) {

176 i‡(!
	`öë_¡›4
(
§c
+12, 
ç
,  
tmp
 - (tp -Åmp)))

177  (
NULL
);

178 
ç
 +
	`°æí
(tp);

181 
	`•rötf
(
ç
, "%x", 
w‹ds
[
i
]);

182 
ç
 +
	`°æí
(tp);

185 i‡(
be°
.
ba£
 !-1 && (be°.ba£ + be°.
Àn
Ë=(
IN6ADDRSZ
 / 
INT16SZ
))

186 *
ç
++ = ':';

187 *
ç
++ = '\0';

192 i‡((
ç
 - 
tmp
Ë> 
size
) {

193 
î∫o
 = 
ENOSPC
;

194  (
NULL
);

196 
	`°r˝y
(
d°
, 
tmp
);

197  (
d°
);

198 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/inet_ntop_ipv4.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<î∫o.h
>

4 
	~<°dio.h
>

6 #i‚def 
INET_ADDRSTRLEN


7 
	#INET_ADDRSTRLEN
 16

	)

12 
	$öë_¡›
(
Ámûy
, c⁄° *
addΩå
, *
°Ωå
, 
size_t
 
Àn
)

14 c⁄° 
u_ch¨
 *
p
 = (c⁄° u_ch¨ *Ë
addΩå
;

16 i‡(
Ámûy
 =
AF_INET
) {

17 
ãmp
[
INET_ADDRSTRLEN
];

19 
	`¢¥ötf
(
ãmp
, (temp), "%d.%d.%d.%d",

20 
p
[0],Ö[1],Ö[2],Ö[3]);

21 i‡(
	`°æí
(
ãmp
Ë>
Àn
) {

22 
î∫o
 = 
ENOSPC
;

23  (
NULL
);

25 
	`°r˝y
(
°Ωå
, 
ãmp
);

26  (
°Ωå
);

28 
î∫o
 = 
EAFNOSUPPORT
;

29  (
NULL
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/inet_pton.c

19 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

20 
	grcsid
[] = "$Id: inet_pton.c,v 1.1.1.1 2002/11/14 03:33:35 fenner Exp $";

23 
	~<sys/∑øm.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<sys/sockë.h
>

26 
	~<√töë/ö.h
>

27 
	~<¨∑/öë.h
>

28 
	~<°rög.h
>

29 
	~<î∫o.h
>

31 
	#IN6ADDRSZ
 16

	)

32 
	#INADDRSZ
 4

	)

33 
	#INT16SZ
 2

	)

35 #i‚def 
AF_INET6


36 
	#AF_INET6
 
AF_MAX
+1

	)

44 
öë_±⁄4
(c⁄° *
§c
, 
u_ch¨
 *
d°
);

45 
öë_±⁄6
(c⁄° *
§c
, 
u_ch¨
 *
d°
);

59 
	$öë_±⁄
(
af
, 
§c
, 
d°
)

60 
af
;

61 c⁄° *
§c
;

62 *
d°
;

64 
af
) {

65 
AF_INET
:

66  (
	`öë_±⁄4
(
§c
, 
d°
));

67 
AF_INET6
:

68  (
	`öë_±⁄6
(
§c
, 
d°
));

70 
î∫o
 = 
EAFNOSUPPORT
;

74 
	}
}

87 
	$öë_±⁄4
(
§c
, 
d°
)

88 c⁄° *
§c
;

89 
u_ch¨
 *
d°
;

91 c⁄° 
digôs
[] = "0123456789";

92 
ßw_digô
, 
o˘ës
, 
ch
;

93 
u_ch¨
 
tmp
[
INADDRSZ
], *
ç
;

95 
ßw_digô
 = 0;

96 
o˘ës
 = 0;

97 *(
ç
 = 
tmp
) = 0;

98 (
ch
 = *
§c
++) != '\0') {

99 c⁄° *
pch
;

101 i‡((
pch
 = 
	`°rchr
(
digôs
, 
ch
)Ë!
NULL
) {

102 
u_öt
 
√w
 = *
ç
 * 10 + (
pch
 - 
digôs
);

104 i‡(
√w
 > 255)

106 *
ç
 = 
√w
;

107 i‡(! 
ßw_digô
) {

108 i‡(++
o˘ës
 > 4)

110 
ßw_digô
 = 1;

112 } i‡(
ch
 ='.' && 
ßw_digô
) {

113 i‡(
o˘ës
 == 4)

115 *++
ç
 = 0;

116 
ßw_digô
 = 0;

120 i‡(
o˘ës
 < 4)

123 
	`mem˝y
(
d°
, 
tmp
, 
INADDRSZ
);

125 
	}
}

141 
	$öë_±⁄6
(
§c
, 
d°
)

142 c⁄° *
§c
;

143 
u_ch¨
 *
d°
;

145 c⁄° 
xdigôs_l
[] = "0123456789abcdef",

146 
xdigôs_u
[] = "0123456789ABCDEF";

147 
u_ch¨
 
tmp
[
IN6ADDRSZ
], *
ç
, *
ídp
, *
cﬁ⁄p
;

148 c⁄° *
xdigôs
, *
cuπok
;

149 
ch
, 
ßw_xdigô
;

150 
u_öt
 
vÆ
;

152 
	`mem£t
((
ç
 = 
tmp
), 0, 
IN6ADDRSZ
);

153 
ídp
 = 
ç
 + 
IN6ADDRSZ
;

154 
cﬁ⁄p
 = 
NULL
;

156 i‡(*
§c
 == ':')

157 i‡(*++
§c
 != ':')

159 
cuπok
 = 
§c
;

160 
ßw_xdigô
 = 0;

161 
vÆ
 = 0;

162 (
ch
 = *
§c
++) != '\0') {

163 c⁄° *
pch
;

165 i‡((
pch
 = 
	`°rchr
((
xdigôs
 = 
xdigôs_l
), 
ch
)Ë=
NULL
)

166 
pch
 = 
	`°rchr
((
xdigôs
 = 
xdigôs_u
), 
ch
);

167 i‡(
pch
 !
NULL
) {

168 
vÆ
 <<= 4;

169 
vÆ
 |(
pch
 - 
xdigôs
);

170 i‡(
vÆ
 > 0xffff)

172 
ßw_xdigô
 = 1;

175 i‡(
ch
 == ':') {

176 
cuπok
 = 
§c
;

177 i‡(!
ßw_xdigô
) {

178 i‡(
cﬁ⁄p
)

180 
cﬁ⁄p
 = 
ç
;

183 i‡(
ç
 + 
INT16SZ
 > 
ídp
)

185 *
ç
++ = (
u_ch¨
Ë(
vÆ
 >> 8) & 0xff;

186 *
ç
++ = (
u_ch¨
Ë
vÆ
 & 0xff;

187 
ßw_xdigô
 = 0;

188 
vÆ
 = 0;

191 i‡(
ch
 ='.' && ((
ç
 + 
INADDRSZ
Ë<
ídp
) &&

192 
	`öë_±⁄4
(
cuπok
, 
ç
) > 0) {

193 
ç
 +
INADDRSZ
;

194 
ßw_xdigô
 = 0;

199 i‡(
ßw_xdigô
) {

200 i‡(
ç
 + 
INT16SZ
 > 
ídp
)

202 *
ç
++ = (
u_ch¨
Ë(
vÆ
 >> 8) & 0xff;

203 *
ç
++ = (
u_ch¨
Ë
vÆ
 & 0xff;

205 i‡(
cﬁ⁄p
 !
NULL
) {

210 c⁄° 
n
 = 
ç
 - 
cﬁ⁄p
;

211 
i
;

213 
i
 = 1; i <
n
; i++) {

214 
ídp
[- 
i
] = 
cﬁ⁄p
[
n
 - i];

215 
cﬁ⁄p
[
n
 - 
i
] = 0;

217 
ç
 = 
ídp
;

219 i‡(
ç
 !
ídp
)

222 
	`mem˝y
(
d°
, 
tmp
, 
IN6ADDRSZ
);

224 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/inet_pton_ipv4.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<¨∑/öë.h
>

5 
	~<î∫o.h
>

6 
	~<°rög.h
>

10 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

14 
	$öë_±⁄
(
Ámûy
, c⁄° *
°Ωå
, *
addΩå
)

16 i‡(
Ámûy
 =
AF_INET
) {

17 
ö_addr
 
ö_vÆ
;

19 i‡(
	`öë_©⁄
(
°Ωå
, &
ö_vÆ
)) {

20 
	`mem˝y
(
addΩå
, &
ö_vÆ
, (
ö_addr
));

25 
î∫o
 = 
EAFNOSUPPORT
;

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/test_ascii2addr.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/sockë.h
>

3 
	~<√töë/ö.h
>

4 
	~<√tdb.h
>

5 
	~<°dio.h
>

7 
	$maö
()

9 
ö6_addr
 
foo
;

11 
	`¥ötf
("ascii2addrÑeturned %d\n",

12 
	`ascii2addr
(
AF_INET6
, "::140.252.13.36", &
foo
));

14 
	`exô
(0);

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/test_getservbyname_r.c

1 
	~<√tdb.h
>

3 
	$maö
()

5 
buf
[8192];

6 
£rvít
 
£¡
, *
•å
;

8 
•å
 = 
	`gë£rvby«me_r
("t·p", "t˝", &
£¡
, 
buf
, (buf));

9 
	`¥ötf
("TCP, s±∏%p\n", 
•å
);

11 
•å
 = 
	`gë£rvby«me_r
("t·p", "udp", &
£¡
, 
buf
, (buf));

12 
	`¥ötf
("UDP, s±∏%p\n", 
•å
);

14 
•å
 = 
	`gë£rvby«me_r
("t·p", "t˝", &
£¡
, 
buf
, (buf));

15 
	`¥ötf
("TCP, s±∏%p\n", 
•å
);

17 
•å
 = 
	`gë£rvby«me_r
("t·p", "udp", &
£¡
, 
buf
, (buf));

18 
	`¥ötf
("UDP, s±∏%p\n", 
•å
);

20 
	`exô
(0);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libfree/test_inet_pton.c

1 
	~"../lib/u≈.h
"

3 #i‚def 
AF_INET6


4 
	#AF_INET6
 
AF_MAX
+1

	)

7 
öë_±⁄
(, const *, *);

10 
	$maö
(
¨gc
, **
¨gv
)

12 
i
;

13 
buff
[100];

26 i‡–(
i
 = 
	`öë_±⁄
(
AF_INET
, "0.0.0.0", 
buff
)) != 1)

27 
	`¥ötf
("AF_INET, 0.0.0.0Ñëu∫ed: %d\n", 
i
);

28 i‡–(
i
 = 
	`öë_±⁄
(
AF_INET6
, "0.0.0.0", 
buff
)) != 0)

29 
	`¥ötf
("AF_INET6, 0.0.0.0Ñëu∫ed: %d\n", 
i
);

31 i‡–(
i
 = 
	`öë_±⁄
(
AF_INET6
, "0::0", 
buff
)) != 1)

32 
	`¥ötf
("AF_INET6, 0::0Ñëu∫ed: %d\n", 
i
);

33 i‡–(
i
 = 
	`öë_±⁄
(
AF_INET
, "0::0", 
buff
)) != 0)

34 
	`¥ötf
("AF_INET, 0::0Ñëu∫ed: %d\n", 
i
);

36 
	`¥ötf
("inet_pton(AF_INET6, \"1.2.3.4\", buff)Ñeturns %d\n",

37 
	`öë_±⁄
(
AF_INET6
, "1.2.3.4", 
buff
));

38 
	`¥ötf
("inet_pton(AF_INET6, \"::1.2.3.4\", buff)Ñeturns %d\n",

39 
	`öë_±⁄
(
AF_INET6
, "::1.2.3.4", 
buff
));

41 
	`exô
(0);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/addrinfo.h

1 #i‚def 
__addröfo_h


2 
	#__addröfo_h


	)

10 
	saddröfo
 {

11 
	mai_Êags
;

12 
	mai_Ámûy
;

13 
	mai_sockty≥
;

14 
	mai_¥Ÿocﬁ
;

15 
size_t
 
	mai_addæí
;

16 *
	mai_ˇn⁄«me
;

17 
sockaddr
 *
	mai_addr
;

18 
addröfo
 *
	mai_√xt
;

22 
	#AI_PASSIVE
 1

	)

23 
	#AI_CANONNAME
 2

	)

26 
	#NI_MAXHOST
 1025

	)

27 
	#NI_MAXSERV
 32

	)

29 
	#NI_NOFQDN
 1

	)

30 
	#NI_NUMERICHOST
 2

	)

31 
	#NI_NAMEREQD
 4

	)

32 
	#NI_NUMERICSERV
 8

	)

33 
	#NI_DGRAM
 16

	)

36 
	#EAI_ADDRFAMILY
 1

	)

37 
	#EAI_AGAIN
 2

	)

38 
	#EAI_BADFLAGS
 3

	)

39 
	#EAI_FAIL
 4

	)

40 
	#EAI_FAMILY
 5

	)

41 
	#EAI_MEMORY
 6

	)

42 
	#EAI_NODATA
 7

	)

43 
	#EAI_NONAME
 8

	)

44 
	#EAI_SERVICE
 9

	)

45 
	#EAI_SOCKTYPE
 10

	)

46 
	#EAI_SYSTEM
 11

	)

	@/media/sf_ddrive/progs/network/unpv13e/libgai/freeaddrinfo.c

1 
	~"gai_hdr.h
"

5 
	$‰ìaddröfo
(
addröfo
 *
aihód
)

7 
addröfo
 *
ai
, *
aöext
;

9 
ai
 = 
aihód
;áò!
NULL
;áò
aöext
) {

10 i‡(
ai
->
ai_addr
 !
NULL
)

11 
	`‰ì
(
ai
->
ai_addr
);

13 i‡(
ai
->
ai_ˇn⁄«me
 !
NULL
)

14 
	`‰ì
(
ai
->
ai_ˇn⁄«me
);

16 
aöext
 = 
ai
->
ai_√xt
;

17 
	`‰ì
(
ai
);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_aistruct.c

1 
	~"gai_hdr.h
"

9 
	$ga_ai°ru˘
(
addröfo
 ***
∑ù√xt
, c⁄° addröfÿ*
höt•
,

10 c⁄° *
addr
, 
Ámûy
)

12 
addröfo
 *
ai
;

14 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

15 (
EAI_MEMORY
);

16 
ai
->
ai_√xt
 = 
NULL
;

17 
ai
->
ai_ˇn⁄«me
 = 
NULL
;

18 **
∑ù√xt
 = 
ai
;

19 *
∑ù√xt
 = &
ai
->
ai_√xt
;

21 i‡–(
ai
->
ai_sockty≥
 = 
höt•
->ai_socktype) == 0)

22 
ai
->
ai_Êags
 |
AI_CLONE
;

24 
ai
->
ai_¥Ÿocﬁ
 = 
höt•
->ai_protocol;

28 (
ai
->
ai_Ámûy
 = 
Ámûy
)) {

29 #ifdef 
IPv4


30 
AF_INET
: {

31 
sockaddr_ö
 *
sö±r
;

34 i‡–(
sö±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö
))Ë=
NULL
)

35 (
EAI_MEMORY
);

36 #ifdef 
HAVE_SOCKADDR_SA_LEN


37 
sö±r
->
sö_Àn
 = (
sockaddr_ö
);

39 
sö±r
->
sö_Ámûy
 = 
AF_INET
;

40 
	`mem˝y
(&
sö±r
->
sö_addr
, 
addr
, (
ö_addr
));

41 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö±r
;

42 
ai
->
ai_addæí
 = (
sockaddr_ö
);

46 #ifdef 
IPv6


47 
AF_INET6
: {

48 
sockaddr_ö6
 *
sö6±r
;

51 i‡–(
sö6±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö6
))Ë=
NULL
)

52 (
EAI_MEMORY
);

53 #ifdef 
HAVE_SOCKADDR_SA_LEN


54 
sö6±r
->
sö6_Àn
 = (
sockaddr_ö6
);

56 
sö6±r
->
sö6_Ámûy
 = 
AF_INET6
;

57 
	`mem˝y
(&
sö6±r
->
sö6_addr
, 
addr
, (
ö6_addr
));

58 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö6±r
;

59 
ai
->
ai_addæí
 = (
sockaddr_ö6
);

63 #ifdef 
UNIXdomaö


64 
AF_LOCAL
: {

65 
sockaddr_un
 *
u≈
;

69 i‡(
	`°æí
(
addr
Ë>(
u≈
->
sun_∑th
))

70 (
EAI_SERVICE
);

71 i‡–(
u≈
 = 
	`ˇŒoc
(1, (
sockaddr_un
))Ë=
NULL
)

72 (
EAI_MEMORY
);

74 
u≈
->
sun_Ámûy
 = 
AF_LOCAL
;

75 
	`°r˝y
(
u≈
->
sun_∑th
, 
addr
);

76 #ifdef 
HAVE_SOCKADDR_SA_LEN


77 
u≈
->
sun_Àn
 = 
	`SUN_LEN
(unp);

79 
ai
->
ai_addr
 = (
sockaddr
 *Ë
u≈
;

80 
ai
->
ai_addæí
 = (
sockaddr_un
);

81 i‡(
höt•
->
ai_Êags
 & 
AI_PASSIVE
)

82 
	`u∆ök
(
u≈
->
sun_∑th
);

88 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_clone.c

1 
	~"gai_hdr.h
"

8 
addröfo
 *

9 
	$ga_˛⁄e
(
addröfo
 *
ai
)

11 
addröfo
 *
√w
;

13 i‡–(
√w
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

14 (
NULL
);

16 
√w
->
ai_√xt
 = 
ai
->ai_next;

17 
ai
->
ai_√xt
 = 
√w
;

19 
√w
->
ai_Êags
 = 0;

20 
√w
->
ai_Ámûy
 = 
ai
->ai_family;

21 
√w
->
ai_sockty≥
 = 
ai
->ai_socktype;

22 
√w
->
ai_¥Ÿocﬁ
 = 
ai
->ai_protocol;

23 
√w
->
ai_ˇn⁄«me
 = 
NULL
;

24 
√w
->
ai_addæí
 = 
ai
->ai_addrlen;

25 i‡–(
√w
->
ai_addr
 = 
	`mÆloc
(
ai
->
ai_addæí
)Ë=
NULL
)

26 (
NULL
);

27 
	`mem˝y
(
√w
->
ai_addr
, 
ai
->ai_addr,ái->
ai_addæí
);

29 (
√w
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_echeck.c

1 
	~"gai_hdr.h
"

9 
	$ga_echeck
(c⁄° *
ho°«me
, c⁄° *
£rv«me
,

10 
Êags
, 
Ámûy
, 
sockty≥
, 
¥Ÿocﬁ
)

12 i‡(
Êags
 & ~(
AI_PASSIVE
 | 
AI_CANONNAME
))

13 (
EAI_BADFLAGS
);

15 i‡(
ho°«me
 =
NULL
 || hostname[0] == '\0') {

16 i‡(
£rv«me
 =
NULL
 || servname[0] == '\0')

17 (
EAI_NONAME
);

20 
Ámûy
) {

21 
AF_UNSPEC
:

23 #ifdef 
IPv4


24 
AF_INET
:

25 i‡(
sockty≥
 != 0 &&

26 (
sockty≥
 !
SOCK_STREAM
 &&

27 
sockty≥
 !
SOCK_DGRAM
 &&

28 
sockty≥
 !
SOCK_RAW
))

29 (
EAI_SOCKTYPE
);

32 #ifdef 
IPv6


33 
AF_INET6
:

34 i‡(
sockty≥
 != 0 &&

35 (
sockty≥
 !
SOCK_STREAM
 &&

36 
sockty≥
 !
SOCK_DGRAM
 &&

37 
sockty≥
 !
SOCK_RAW
))

38 (
EAI_SOCKTYPE
);

41 #ifdef 
UNIXdomaö


42 
AF_LOCAL
:

43 i‡(
sockty≥
 != 0 &&

44 (
sockty≥
 !
SOCK_STREAM
 &&

45 
sockty≥
 !
SOCK_DGRAM
))

46 (
EAI_SOCKTYPE
);

50 (
EAI_FAMILY
);

53 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_nsearch.c

1 
	~"gai_hdr.h
"

10 
	$ga_n£¨ch
(c⁄° *
ho°«me
, c⁄° 
addröfo
 *
höt•
,

11 
£¨ch
 *search)

13 
n£¨ch
 = 0;

15 i‡(
ho°«me
 =
NULL
 || hostname[0] == '\0') {

16 i‡(
höt•
->
ai_Êags
 & 
AI_PASSIVE
) {

18 
höt•
->
ai_Ámûy
) {

19 #ifdef 
IPv4


20 
AF_INET
:

21 
£¨ch
[
n£¨ch
].
ho°
 = "0.0.0.0";

22 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

23 
n£¨ch
++;

26 #ifdef 
IPv6


27 
AF_INET6
:

28 
£¨ch
[
n£¨ch
].
ho°
 = "0::0";

29 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

30 
n£¨ch
++;

33 
AF_UNSPEC
:

34 #ifdef 
IPv6


35 
£¨ch
[
n£¨ch
].
ho°
 = "0::0";

36 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

37 
n£¨ch
++;

39 #ifdef 
IPv4


40 
£¨ch
[
n£¨ch
].
ho°
 = "0.0.0.0";

41 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

42 
n£¨ch
++;

50 
höt•
->
ai_Ámûy
) {

51 #ifdef 
IPv4


52 
AF_INET
:

53 
£¨ch
[
n£¨ch
].
ho°
 = "localhost";

54 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

55 
n£¨ch
++;

58 #ifdef 
IPv6


59 
AF_INET6
:

60 
£¨ch
[
n£¨ch
].
ho°
 = "0::1";

61 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

62 
n£¨ch
++;

65 
AF_UNSPEC
:

66 #ifdef 
IPv6


67 
£¨ch
[
n£¨ch
].
ho°
 = "0::1";

68 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

69 
n£¨ch
++;

71 #ifdef 
IPv4


72 
£¨ch
[
n£¨ch
].
ho°
 = "localhost";

73 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

74 
n£¨ch
++;

82 
höt•
->
ai_Ámûy
) {

83 #ifdef 
IPv4


84 
AF_INET
:

85 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

86 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

87 
n£¨ch
++;

90 #ifdef 
IPv6


91 
AF_INET6
:

92 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

93 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

94 
n£¨ch
++;

97 
AF_UNSPEC
:

98 #ifdef 
IPv6


99 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

100 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

101 
n£¨ch
++;

103 #ifdef 
IPv4


104 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

105 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

106 
n£¨ch
++;

111 i‡(
n£¨ch
 < 1 ||Çsearch > 2)

112 
	`îr_quô
("n£¨ch = %d", 
n£¨ch
);

113 (
n£¨ch
);

114 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_port.c

1 
	~"gai_hdr.h
"

31 
	$ga_p‹t
(
addröfo
 *
aihód
, 
p‹t
, 
sockty≥
)

34 
nfound
 = 0;

35 
addröfo
 *
ai
;

37 
ai
 = 
aihód
;áò!
NULL
;áòai->
ai_√xt
) {

38 i‡(
ai
->
ai_Êags
 & 
AI_CLONE
) {

39 i‡(
ai
->
ai_sockty≥
 != 0) {

40 i‡–(
ai
 = 
	`ga_˛⁄e
◊i)Ë=
NULL
)

44 } i‡(
ai
->
ai_sockty≥
 !
sockty≥
)

47 
ai
->
ai_sockty≥
 = 
sockty≥
;

49 
ai
->
ai_Ámûy
) {

50 #ifdef 
IPv4


51 
AF_INET
:

52 ((
sockaddr_ö
 *Ë
ai
->
ai_addr
)->
sö_p‹t
 = 
p‹t
;

53 
nfound
++;

56 #ifdef 
IPv6


57 
AF_INET6
:

58 ((
sockaddr_ö6
 *Ë
ai
->
ai_addr
)->
sö6_p‹t
 = 
p‹t
;

59 
nfound
++;

64 (
nfound
);

65 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_serv.c

1 
	~"gai_hdr.h
"

9 
	$ga_£rv
(
addröfo
 *
aihód
, c⁄° addröfÿ*
höt•
,

10 c⁄° *
£rv
)

12 
p‹t
, 
rc
, 
nfound
;

13 
£rvít
 *
•å
;

15 
nfound
 = 0;

16 i‡(
	`isdigô
(
£rv
[0])) {

17 
p‹t
 = 
	`ht⁄s
(
	`©oi
(
£rv
));

18 i‡(
höt•
->
ai_sockty≥
) {

20 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
p‹t
, 
höt•
->
ai_sockty≥
)) < 0)

21 (
EAI_MEMORY
);

22 
nfound
 +
rc
;

25 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
p‹t
, 
SOCK_STREAM
)) < 0)

26 (
EAI_MEMORY
);

27 
nfound
 +
rc
;

28 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
p‹t
, 
SOCK_DGRAM
)) < 0)

29 (
EAI_MEMORY
);

30 
nfound
 +
rc
;

34 i‡(
höt•
->
ai_sockty≥
 =0 || höt•->ai_sockty≥ =
SOCK_STREAM
) {

35 i‡–(
•å
 = 
	`gë£rvby«me
(
£rv
, "t˝")Ë!
NULL
) {

36 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_STREAM
)) < 0)

37 (
EAI_MEMORY
);

38 
nfound
 +
rc
;

41 i‡(
höt•
->
ai_sockty≥
 =0 || höt•->ai_sockty≥ =
SOCK_DGRAM
) {

42 i‡–(
•å
 = 
	`gë£rvby«me
(
£rv
, "udp")Ë!
NULL
) {

43 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_DGRAM
)) < 0)

44 (
EAI_MEMORY
);

45 
nfound
 +
rc
;

50 i‡(
nfound
 == 0) {

51 i‡(
höt•
->
ai_sockty≥
 == 0)

52 (
EAI_NONAME
);

54 (
EAI_SERVICE
);

57 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/ga_unix.c

1 
	~"gai_hdr.h
"

2 
	~<sys/ut¢ame.h
>

4 #ifdef 
UNIXdomaö


7 
	$ga_unix
(c⁄° *
∑th
, 
addröfo
 *
höt•
, addröfÿ**
ªsu…
)

9 
rc
;

10 
addröfo
 *
aihód
, **
aù√xt
;

12 
aihód
 = 
NULL
;

13 
aù√xt
 = &
aihód
;

15 i‡(
höt•
->
ai_Ámûy
 !
AF_UNSPEC
 && höt•->ai_Ámûy !
AF_LOCAL
)

16 (
EAI_ADDRFAMILY
);

18 i‡(
höt•
->
ai_sockty≥
 == 0) {

20 
höt•
->
ai_sockty≥
 = 
SOCK_STREAM
;

21 i‡–(
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, 
höt•
, 
∑th
, 
AF_LOCAL
)) != 0)

22 (
rc
);

23 
höt•
->
ai_sockty≥
 = 
SOCK_DGRAM
;

26 i‡–(
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, 
höt•
, 
∑th
, 
AF_LOCAL
)) != 0)

27 (
rc
);

29 i‡(
höt•
->
ai_Êags
 & 
AI_CANONNAME
) {

30 
ut¢ame
 
my«me
;

32 i‡(
	`u«me
(&
my«me
) < 0)

33 (
EAI_SYSTEM
);

34 i‡–(
aihód
->
ai_ˇn⁄«me
 = 
	`°rdup
(
my«me
.
nodíame
)Ë=
NULL
)

35 (
EAI_MEMORY
);

38 *
ªsu…
 = 
aihód
;

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/gai_hdr.h

1 
	~"u≈.h
"

2 
	~<˘y≥.h
>

5 
	#AI_CLONE
 4

	)

7 
	s£¨ch
 {

8 c⁄° *
	mho°
;

9 
	mÁmûy
;

13 
ga_ai°ru˘
(
addröfo
 ***, const addrinfo *,

15 
addröfo
 *
ga_˛⁄e
(addrinfo *);

16 
ga_echeck
(const *, const *, , , , );

17 
ga_n£¨ch
(c⁄° *, c⁄° 
addröfo
 *, 
£¨ch
 *);

18 
ga_p‹t
(
addröfo
 *, , );

19 
ga_£rv
(
addröfo
 *, const addrinfo *, const *);

20 
ga_unix
(c⁄° *, 
addröfo
 *, addrinfo **);

22 
gn_ùv46
(*, 
size_t
, *, size_t, *, size_t,

	@/media/sf_ddrive/progs/network/unpv13e/libgai/gai_strerror.c

6 
	~<sys/ty≥s.h
>

7 
	~"addröfo.h
"

10 
	$gai_°ªº‹
(
îr
)

12 
îr
) {

13 
EAI_ADDRFAMILY
:("address family for hostÇot supported");

14 
EAI_AGAIN
: ("temporary failure inÇameÑesolution");

15 
EAI_BADFLAGS
: ("invalid flags value");

16 
EAI_FAIL
: ("non-recoverable failure inÇameÑesolution");

17 
EAI_FAMILY
: ("address familyÇot supported");

18 
EAI_MEMORY
: ("memoryállocation failure");

19 
EAI_NODATA
: ("noáddressássociated with host");

20 
EAI_NONAME
: ("hostÇor serviceÖrovided, orÇot known");

21 
EAI_SERVICE
: ("serviceÇot supported for socketÅype");

22 
EAI_SOCKTYPE
: ("socketÅypeÇot supported");

23 
EAI_SYSTEM
: ("systemÉrror");

26 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/getaddrinfo.c

2 
	~"gai_hdr.h
"

3 
	~<¨∑/«me£r.h
>

4 
	~<ªsﬁv.h
>

7 
	$gëaddröfo
(c⁄° *
ho°«me
, c⁄° *
£rv«me
,

8 c⁄° 
addröfo
 *
höt•
, addröfÿ**
ªsu…
)

10 
rc
, 
îr‹
, 
n£¨ch
;

11 **
≠
, *
ˇn⁄
;

12 
ho°ít
 *
h±r
;

13 
£¨ch
 sórch[3], *
•å
;

14 
addröfo
 
höts
, *
aihód
, **
aù√xt
;

20 
	#îr‹
(
e
Ë{ 
îr‹
 = (e); 
bad
; }

	)

22 
aihód
 = 
NULL
;

23 
aù√xt
 = &
aihód
;

24 
ˇn⁄
 = 
NULL
;

26 i‡(
höt•
 =
NULL
) {

27 
	`bzîo
(&
höts
, (hints));

28 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

30 
höts
 = *
höt•
;

33 i‡–(
rc
 = 
	`ga_echeck
(
ho°«me
, 
£rv«me
, 
höts
.
ai_Êags
, höts.
ai_Ámûy
,

34 
höts
.
ai_sockty≥
, höts.
ai_¥Ÿocﬁ
)) != 0)

35 
	`îr‹
(
rc
);

37 #ifdef 
UNIXdomaö


39 i‡(
ho°«me
 !
NULL
 &&

40 (
	`°rcmp
(
ho°«me
, "/local") == 0 || strcmp(hostname, "/unix") == 0) &&

41 (
£rv«me
 !
NULL
 && servname[0] == '/'))

42 (
	`ga_unix
(
£rv«me
, &
höts
, 
ªsu…
));

48 
n£¨ch
 = 
	`ga_n£¨ch
(
ho°«me
, &
höts
, &
£¨ch
[0]);

49 
•å
 = &
£¨ch
[0]; s±∏< &£¨ch[
n£¨ch
]; sptr++) {

50 #ifdef 
IPv4


52 i‡(
	`isdigô
(
•å
->
ho°
[0])) {

53 
ö_addr
 
öaddr
;

55 i‡(
	`öë_±⁄
(
AF_INET
, 
•å
->
ho°
, &
öaddr
) == 1) {

56 i‡(
höts
.
ai_Ámûy
 !
AF_UNSPEC
 &&

57 
höts
.
ai_Ámûy
 !
AF_INET
)

58 
	`îr‹
(
EAI_ADDRFAMILY
);

59 i‡(
•å
->
Ámûy
 !
AF_INET
)

61 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, &
öaddr
, 
AF_INET
);

62 i‡(
rc
 != 0)

63 
	`îr‹
(
rc
);

69 #ifdef 
IPv6


71 i‡((
	`isxdigô
(
•å
->
ho°
[0]) || sptr->host[0] == ':') &&

72 (
	`°rchr
(
•å
->
ho°
, ':'Ë!
NULL
)) {

73 
ö6_addr
 
ö6addr
;

75 i‡(
	`öë_±⁄
(
AF_INET6
, 
•å
->
ho°
, &
ö6addr
) == 1) {

76 i‡(
höts
.
ai_Ámûy
 !
AF_UNSPEC
 &&

77 
höts
.
ai_Ámûy
 !
AF_INET6
)

78 
	`îr‹
(
EAI_ADDRFAMILY
);

79 i‡(
•å
->
Ámûy
 !
AF_INET6
)

81 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, &
ö6addr
, 
AF_INET6
);

82 i‡(
rc
 != 0)

83 
	`îr‹
(
rc
);

91 i‡((
_ªs
.
›ti⁄s
 & 
RES_INIT
) == 0)

92 
	`ªs_öô
();

94 i‡(
n£¨ch
 == 2) {

95 #ifdef 
IPv6


96 
_ªs
.
›ti⁄s
 &~
RES_USE_INET6
;

98 
h±r
 = 
	`gëho°by«me2
(
•å
->
ho°
, s±r->
Ámûy
);

100 #ifde‡ 
IPv6


101 i‡(
•å
->
Ámûy
 =
AF_INET6
)

102 
_ªs
.
›ti⁄s
 |
RES_USE_INET6
;

104 
_ªs
.
›ti⁄s
 &~
RES_USE_INET6
;

106 
h±r
 = 
	`gëho°by«me
(
•å
->
ho°
);

108 i‡(
h±r
 =
NULL
) {

109 i‡(
n£¨ch
 == 2)

112 
h_î∫o
) {

113 
HOST_NOT_FOUND
: 
	`îr‹
(
EAI_NONAME
);

114 
TRY_AGAIN
: 
	`îr‹
(
EAI_AGAIN
);

115 
NO_RECOVERY
: 
	`îr‹
(
EAI_FAIL
);

116 
NO_DATA
: 
	`îr‹
(
EAI_NODATA
);

117 : 
	`îr‹
(
EAI_NONAME
);

122 i‡(
höts
.
ai_Ámûy
 !
AF_UNSPEC
 && höts.ai_Ámûy !
h±r
->
h_addπy≥
)

123 
	`îr‹
(
EAI_ADDRFAMILY
);

126 i‡(
ho°«me
 !
NULL
 && hostname[0] != '\0' &&

127 (
höts
.
ai_Êags
 & 
AI_CANONNAME
Ë&& 
ˇn⁄
 =
NULL
) {

128 i‡–(
ˇn⁄
 = 
	`°rdup
(
h±r
->
h_«me
)Ë=
NULL
)

129 
	`îr‹
(
EAI_MEMORY
);

133 
≠
 = 
h±r
->
h_addr_li°
; *≠ !
NULL
;áp++) {

134 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, *
≠
, 
h±r
->
h_addπy≥
);

135 i‡(
rc
 != 0)

136 
	`îr‹
(
rc
);

139 i‡(
aihód
 =
NULL
)

140 
	`îr‹
(
EAI_NONAME
);

145 i‡(
ho°«me
 !
NULL
 && hostname[0] != '\0' &&

146 
höts
.
ai_Êags
 & 
AI_CANONNAME
) {

147 i‡(
ˇn⁄
 !
NULL
)

148 
aihód
->
ai_ˇn⁄«me
 = 
ˇn⁄
;

150 i‡–(
aihód
->
ai_ˇn⁄«me
 = 
	`°rdup
(
£¨ch
[0].
ho°
)Ë=
NULL
)

151 
	`îr‹
(
EAI_MEMORY
);

156 i‡(
£rv«me
 !
NULL
 && servname[0] != '\0') {

157 i‡–(
rc
 = 
	`ga_£rv
(
aihód
, &
höts
, 
£rv«me
)) != 0)

158 
	`îr‹
(
rc
);

161 *
ªsu…
 = 
aihód
;

164 
bad
:

165 
	`‰ìaddröfo
(
aihód
);

166 (
îr‹
);

167 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/getnameinfo.c

1 
	~"gai_hdr.h
"

5 
	$gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
,

6 *
ho°
, 
size_t
 
ho°Àn
,

7 *
£rv
, 
size_t
 
£rvÀn
, 
Êags
)

10 
ß
->
ß_Ámûy
) {

11 #ifdef 
IPv4


12 
AF_INET
: {

13 
sockaddr_ö
 *
ßö
 = (sockaddr_ö *Ë
ß
;

15 (
	`gn_ùv46
(
ho°
, 
ho°Àn
, 
£rv
, 
£rvÀn
,

16 &
ßö
->
sö_addr
, (
ö_addr
),

17 
AF_INET
, 
ßö
->
sö_p‹t
, 
Êags
));

21 #ifdef 
IPv6


22 
AF_INET6
: {

23 
sockaddr_ö6
 *
ßö
 = (sockaddr_ö6 *Ë
ß
;

25 (
	`gn_ùv46
(
ho°
, 
ho°Àn
, 
£rv
, 
£rvÀn
,

26 &
ßö
->
sö6_addr
, (
ö6_addr
),

27 
AF_INET6
, 
ßö
->
sö6_p‹t
, 
Êags
));

31 #ifdef 
UNIXdomaö


32 
AF_LOCAL
: {

33 
sockaddr_un
 *
un
 = (sockaddr_u¿*Ë
ß
;

35 i‡(
ho°Àn
 > 0)

36 
	`¢¥ötf
(
ho°
, 
ho°Àn
, "%s", "/local");

37 i‡(
£rvÀn
 > 0)

38 
	`¢¥ötf
(
£rv
, 
£rvÀn
, "%s", 
un
->
sun_∑th
);

46 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/gn_ipv46.c

1 
	~"gai_hdr.h
"

9 
	$gn_ùv46
(*
ho°
, 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
,

10 *
≠å
, 
size_t
 
Æí
, 
Ámûy
, 
p‹t
, 
Êags
)

12 *
±r
;

13 
ho°ít
 *
h±r
;

14 
£rvít
 *
•å
;

16 i‡(
ho°Àn
 > 0) {

17 i‡(
Êags
 & 
NI_NUMERICHOST
) {

18 i‡(
	`öë_¡›
(
Ámûy
, 
≠å
, 
ho°
, 
ho°Àn
Ë=
NULL
)

21 
h±r
 = 
	`gëho°byaddr
(
≠å
, 
Æí
, 
Ámûy
);

22 i‡(
h±r
 !
NULL
 && h±r->
h_«me
 != NULL) {

23 i‡(
Êags
 & 
NI_NOFQDN
) {

24 i‡–(
±r
 = 
	`°rchr
(
h±r
->
h_«me
, '.')Ë!
NULL
)

25 *
±r
 = 0;

27 
	`¢¥ötf
(
ho°
, 
ho°Àn
, "%s", 
h±r
->
h_«me
);

29 i‡(
Êags
 & 
NI_NAMEREQD
)

31 i‡(
	`öë_¡›
(
Ámûy
, 
≠å
, 
ho°
, 
ho°Àn
Ë=
NULL
)

37 i‡(
£rvÀn
 > 0) {

38 i‡(
Êags
 & 
NI_NUMERICSERV
) {

39 
	`¢¥ötf
(
£rv
, 
£rvÀn
, "%d", 
	`¡ohs
(
p‹t
));

41 
•å
 = 
	`gë£rvbyp‹t
(
p‹t
, (
Êags
 & 
NI_DGRAM
Ë? "udp" : 
NULL
);

42 i‡(
•å
 !
NULL
 && s±r->
s_«me
 != NULL)

43 
	`¢¥ötf
(
£rv
, 
£rvÀn
, "%s", 
•å
->
s_«me
);

45 
	`¢¥ötf
(
£rv
, 
£rvÀn
, "%d", 
	`¡ohs
(
p‹t
));

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/old/ga_unixstruct.c

1 
	~"gai_hdr.h
"

3 #ifdef 
UNIXDOMAIN


5 
	$ga_unix°ru˘
(c⁄° *
∑th
, 
addröfo
 *
höt•
,

6 
addröfo
 **
ªsu…
, 
sockty≥
)

8 
addröfo
 *
ai
;

9 
sockaddr_un
 *
u≈
;

11 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

12 (
EAI_MEMORY
);

14 
ai
->
ai_Êags
 = 0;

15 
ai
->
ai_Ámûy
 = 
AF_LOCAL
;

16 
ai
->
ai_sockty≥
 = 
sockty≥
;

17 
ai
->
ai_¥Ÿocﬁ
 = 0;

20 
ai
->
ai_addæí
 = (
sockaddr_un
);

21 i‡–(
ai
->
ai_addr
 = 
	`mÆloc
◊i->
ai_addæí
)Ë=
NULL
)

22 (
EAI_MEMORY
);

23 
u≈
 = (
sockaddr_un
 *Ë
ai
->
ai_addr
;

24 
u≈
->
sun_Ámûy
 = 
AF_UNIX
;

25 
	`°∫˝y
(
u≈
->
sun_∑th
, 
∑th
, (unp->sun_path));

27 
ai
->
ai_ˇn⁄«me
 = 
NULL
;

28 
ai
->
ai_√xt
 = 
NULL
;

29 *
ªsu…
 = 
ai
;

31 i‡(
höt•
->
ai_Êags
 & 
AI_PASSIVE
)

32 
	`u∆ök
(
∑th
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/old/savecopy.c

1 
	~"u≈.h
"

2 
	~<˘y≥.h
>

3 
	~<¨∑/«me£r.h
>

4 
	~<ªsﬁv.h
>

7 
	#AI_CLONE
 4

	)

9 
	s£¨ch
 {

10 c⁄° *
	mho°
;

11 
	mÁmûy
;

15 
ga_echeck
(c⁄° *, c⁄° *, c⁄° 
addröfo
 *);

16 
ga_n£¨ch
(c⁄° *, c⁄° 
addröfo
 *,

17 
£¨ch
 *);

18 
ga_ai°ru˘
(
addröfo
 ***, const addrinfo *,

20 
ga_£rv
(
addröfo
 *, const addrinfo *, const *);

21 
ga_p‹t
(
addröfo
 *, , );

22 
ga_unix
(c⁄° *, 
addröfo
 *, addrinfo **);

23 
addröfo
 *
ga_˛⁄e
(addrinfo *);

27 
addröfo
 
	ghöts_deÁu…
;

30 
	$gëaddröfo
(c⁄° *
ho°«me
, c⁄° *
£rv«me
,

31 c⁄° 
addröfo
 *
höt•
, addröfÿ**
ªsu…
)

33 
rc
, 
îr‹
, 
n£¨ch
;

34 **
≠
;

35 
ho°ít
 *
h±r
;

36 
£¨ch
 sórch[3], *
•å
;

37 
addröfo
 
höts
, *
ai
, *
aihód
, **
aù√xt
;

43 
	#îr‹
(
e
Ë{ 
îr‹
 = (e); 
bad
; }

	)

45 i‡(
höt•
 =
NULL
) {

46 
höts
 = 
höts_deÁu…
;

47 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

49 
höts
 = *
höt•
;

52 i‡–(
rc
 = 
	`ga_echeck
(
ho°«me
, 
£rv«me
, &
höts
)) != 0)

53 
	`îr‹
(
rc
);

55 #ifdef 
UNIXDOMAIN


60 i‡(
ho°«me
 !
NULL
 && hostname[0] == '/' &&

61 (
£rv«me
 =
NULL
 || servname[0] == '\0'))

62 (
	`ga_unix
(
ho°«me
, &
höts
, 
ªsu…
));

64 i‡(
£rv«me
 !
NULL
 && servname[0] == '/' &&

65 (
ho°«me
 =
NULL
 || hostname[0] == '\0'))

66 (
	`ga_unix
(
£rv«me
, &
höts
, 
ªsu…
));

69 
n£¨ch
 = 
	`ga_n£¨ch
(
ho°«me
, &
höts
, &
£¨ch
[0]);

71 
aihód
 = 
NULL
;

72 
aù√xt
 = &
aihód
;

73 
•å
 = &
£¨ch
[0]; s±∏< &£¨ch[
n£¨ch
]; sptr++) {

74 #ifdef 
IPV4


76 i‡(
	`isdigô
(
•å
->
ho°
[0])) {

77 
ö_addr
 
öaddr
;

79 i‡(
	`öë_±⁄
(
AF_INET
, 
•å
->
ho°
, &
öaddr
) == 1) {

80 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, &
öaddr
, 
AF_INET
);

81 i‡(
rc
 != 0)

82 
	`îr‹
(
rc
);

88 #ifdef 
IPV6


90 i‡(
	`isxdigô
(
•å
->
ho°
[0]) || sptr->host[0] == ':') {

91 
ö6_addr
 
ö6addr
;

93 i‡(
	`öë_±⁄
(
AF_INET6
, 
•å
->
ho°
, &
ö6addr
) == 1) {

94 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, &
ö6addr
, 
AF_INET6
);

95 i‡(
rc
 != 0)

96 
	`îr‹
(
rc
);

102 i‡((
_ªs
.
›ti⁄s
 & 
RES_INIT
) == 0)

103 
	`ªs_öô
();

105 i‡(
n£¨ch
 == 2)

106 
h±r
 = 
	`gëho°by«me2
(
•å
->
ho°
, s±r->
Ámûy
);

108 #ifdef 
IPV6


109 i‡(
•å
->
Ámûy
 =
AF_INET6
)

110 
_ªs
.
›ti⁄s
 |
RES_USE_INET6
;

112 
_ªs
.
›ti⁄s
 &~
RES_USE_INET6
;

114 
h±r
 = 
	`gëho°by«me
(
•å
->
ho°
);

116 i‡(
h±r
 =
NULL
) {

117 
h_î∫o
) {

118 
HOST_NOT_FOUND
: 
	`îr‹
(
EAI_NONAME
);

119 
TRY_AGAIN
: 
	`îr‹
(
EAI_AGAIN
);

120 
NO_RECOVERY
: 
	`îr‹
(
EAI_FAIL
);

121 
NO_DATA
: 
	`îr‹
(
EAI_NODATA
);

122 : 
	`îr‹
(
EAI_NONAME
);

127 i‡(
höts
.
ai_Ámûy
 !
AF_UNSPEC
 && höts.ai_Ámûy !
h±r
->
h_addπy≥
)

128 
	`îr‹
(
EAI_ADDRFAMILY
);

131 
≠
 = 
h±r
->
h_addr_li°
; *≠ !
NULL
;áp++) {

132 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

133 
	`îr‹
(
EAI_MEMORY
);

134 *
aù√xt
 = 
ai
;

135 
aù√xt
 = &
ai
->
ai_√xt
;

136 
rc
 = 
	`ga_ai°ru˘
(&
aù√xt
, &
höts
, *
≠
, 
h±r
->
h_addπy≥
);

137 i‡(
rc
 != 0)

138 
	`îr‹
(
rc
);

143 i‡(
ho°«me
 !
NULL
 && hostname[0] != '\0' &&

144 
höts
.
ai_Êags
 & 
AI_CANONNAME
) {

145 
aihód
->
ai_ˇn⁄«me
 = 
	`°rdup
(
h±r
->
h_«me
 !
NULL
 ?

146 
h±r
->
h_«me
 : 
£¨ch
[0].
ho°
);

147 i‡(
aihód
->
ai_ˇn⁄«me
 =
NULL
)

148 
	`îr‹
(
EAI_MEMORY
);

152 i‡(
£rv«me
 !
NULL
 && servname[0] != '\0') {

153 i‡–(
rc
 = 
	`ga_£rv
(
aihód
, &
höts
, 
£rv«me
)) != 0)

154 
	`îr‹
(
rc
);

157 *
ªsu…
 = 
aihód
;

160 
bad
:

161 
	`‰ìaddröfo
(
aihód
);

162 (
îr‹
);

163 
	}
}

170 
	$ga_echeck
(c⁄° *
ho°«me
, c⁄° *
£rv«me
,

171 c⁄° 
addröfo
 *
höt•
)

173 i‡(
höt•
->
ai_Êags
 & ~(
AI_PASSIVE
 | 
AI_CANONNAME
))

174 (
EAI_BADFLAGS
);

176 i‡(
ho°«me
 =
NULL
 || hostname[0] == '\0') {

177 i‡(
£rv«me
 =
NULL
 || servname[0] == '\0')

178 (
EAI_NONAME
);

181 
höt•
->
ai_Ámûy
) {

182 
AF_UNSPEC
:

184 #ifdef 
IPV4


185 
AF_INET
:

186 i‡(
höt•
->
ai_sockty≥
 != 0 &&

187 (
höt•
->
ai_sockty≥
 !
SOCK_STREAM
 &&

188 
höt•
->
ai_sockty≥
 !
SOCK_DGRAM
 &&

189 
höt•
->
ai_sockty≥
 !
SOCK_RAW
))

190 (
EAI_SOCKTYPE
);

193 #ifdef 
IPV6


194 
AF_INET6
:

195 i‡(
höt•
->
ai_sockty≥
 != 0 &&

196 (
höt•
->
ai_sockty≥
 !
SOCK_STREAM
 &&

197 
höt•
->
ai_sockty≥
 !
SOCK_DGRAM
 &&

198 
höt•
->
ai_sockty≥
 !
SOCK_RAW
))

199 (
EAI_SOCKTYPE
);

202 #ifdef 
UNIXDOMAIN


203 
AF_LOCAL
:

204 i‡(
höt•
->
ai_sockty≥
 != 0 &&

205 (
höt•
->
ai_sockty≥
 !
SOCK_STREAM
 &&

206 
höt•
->
ai_sockty≥
 !
SOCK_DGRAM
))

207 (
EAI_SOCKTYPE
);

211 (
EAI_FAMILY
);

214 
	}
}

222 
	$ga_n£¨ch
(c⁄° *
ho°«me
, c⁄° 
addröfo
 *
höt•
,

223 
£¨ch
 *search)

225 
n£¨ch
 = 0;

227 i‡(
ho°«me
 =
NULL
 || hostname[0] == '\0') {

228 i‡(
höt•
->
ai_Êags
 & 
AI_PASSIVE
) {

230 
höt•
->
ai_Ámûy
) {

231 #ifdef 
IPV4


232 
AF_INET
:

233 
£¨ch
[
n£¨ch
].
ho°
 = "0.0.0.0";

234 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

235 
n£¨ch
++;

238 #ifdef 
IPV6


239 
AF_INET6
:

240 
£¨ch
[
n£¨ch
].
ho°
 = "0::0";

241 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

242 
n£¨ch
++;

245 
AF_UNSPEC
:

246 #ifdef 
IPV6


247 
£¨ch
[
n£¨ch
].
ho°
 = "0::0";

248 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

249 
n£¨ch
++;

251 #ifdef 
IPV4


252 
£¨ch
[
n£¨ch
].
ho°
 = "0.0.0.0";

253 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

254 
n£¨ch
++;

260 
höt•
->
ai_Ámûy
) {

261 #ifdef 
IPV4


262 
AF_INET
:

263 
£¨ch
[
n£¨ch
].
ho°
 = "localhost";

264 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

265 
n£¨ch
++;

268 #ifdef 
IPV6


269 
AF_INET6
:

270 
£¨ch
[
n£¨ch
].
ho°
 = "0::1";

271 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

272 
n£¨ch
++;

275 
AF_UNSPEC
:

276 #ifdef 
IPV6


277 
£¨ch
[
n£¨ch
].
ho°
 = "0::1";

278 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

279 
n£¨ch
++;

281 #ifdef 
IPV4


282 
£¨ch
[
n£¨ch
].
ho°
 = "localhost";

283 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

284 
n£¨ch
++;

290 
höt•
->
ai_Ámûy
) {

291 #ifdef 
IPV4


292 
AF_INET
:

293 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

294 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

295 
n£¨ch
++;

298 #ifdef 
IPV6


299 
AF_INET6
:

300 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

301 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

302 
n£¨ch
++;

305 
AF_UNSPEC
:

306 #ifdef 
IPV6


307 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

308 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET6
;

309 
n£¨ch
++;

311 #ifdef 
IPV4


312 
£¨ch
[
n£¨ch
].
ho°
 = 
ho°«me
;

313 
£¨ch
[
n£¨ch
].
Ámûy
 = 
AF_INET
;

314 
n£¨ch
++;

319 i‡(
n£¨ch
 < 1 ||Çsearch > 2)

320 
	`îr_quô
("n£¨ch = %d", 
n£¨ch
);

321 (
n£¨ch
);

322 
	}
}

329 
	$ga_ai°ru˘
(
addröfo
 ***
∑ù√xt
, c⁄° addröfÿ*
höt•
,

330 *
addr
, 
Ámûy
)

332 
addröfo
 *
ai
;

334 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

335 (
EAI_MEMORY
);

336 
ai
->
ai_√xt
 = 
NULL
;

337 
ai
->
ai_ˇn⁄«me
 = 
NULL
;

338 **
∑ù√xt
 = 
ai
;

339 *
∑ù√xt
 = &
ai
->
ai_√xt
;

341 i‡–(
ai
->
ai_sockty≥
 = 
höt•
->ai_socktype) == 0)

342 
ai
->
ai_Êags
 |
AI_CLONE
;

344 
ai
->
ai_¥Ÿocﬁ
 = 
höt•
->ai_protocol;

346 (
ai
->
ai_Ámûy
 = 
Ámûy
)) {

347 #ifdef 
IPV4


348 
AF_INET
: {

349 
sockaddr_ö
 *
sö±r
;

352 i‡–(
sö±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö
))Ë=
NULL
)

353 (
EAI_MEMORY
);

354 #ifdef 
HAVE_SOCKADDR_SA_LEN


355 
sö±r
->
sö_Àn
 = (
sockaddr_ö
);

357 
sö±r
->
sö_Ámûy
 = 
AF_INET
;

358 
	`mem˝y
(&
sö±r
->
sö_addr
, 
addr
, (
ö_addr
));

359 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö±r
;

360 
ai
->
ai_addæí
 = (
sockaddr_ö
);

365 #ifdef 
IPV6


367 
AF_INET6
: {

368 
sockaddr_ö6
 *
sö6±r
;

370 i‡–(
sö6±r
 = 
	`ˇŒoc
(1, (
sockaddr_ö6
))Ë=
NULL
)

371 (
EAI_MEMORY
);

372 #ifdef 
HAVE_SOCKADDR_SA_LEN


373 
sö6±r
->
sö6_Àn
 = (
sockaddr_ö6
);

375 
sö6±r
->
sö6_Ámûy
 = 
AF_INET6
;

376 
	`mem˝y
(&
sö6±r
->
sö6_addr
, 
addr
, (
ö6_addr
));

377 
ai
->
ai_addr
 = (
sockaddr
 *Ë
sö6±r
;

378 
ai
->
ai_addæí
 = (
sockaddr_ö6
);

384 
	}
}

391 
	$ga_£rv
(
addröfo
 *
aihód
, c⁄° addröfÿ*
höt•
,

392 c⁄° *
£rv
)

394 
p‹t
, 
rc
, 
nfound
;

395 
£rvít
 *
•å
;

398 i‡(
	`isdigô
(
£rv
[0]Ë&& 
höt•
->
ai_sockty≥
 != 0) {

399 
p‹t
 = 
	`ht⁄s
(
	`©oi
(
£rv
));

400 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
p‹t
, 
höt•
->
ai_sockty≥
)) == 0)

401 (
EAI_NONAME
);

402 i‡(
rc
 < 0)

403 (
EAI_MEMORY
);

409 
nfound
 = 0;

410 i‡(
höt•
->
ai_sockty≥
 =0 || höt•->ai_sockty≥ =
SOCK_STREAM
) {

411 i‡–(
•å
 = 
	`gë£rvby«me
(
£rv
, "t˝")Ë!
NULL
) {

412 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_STREAM
)) < 0)

413 (
EAI_MEMORY
);

414 
nfound
 +
rc
;

419 i‡(
höt•
->
ai_sockty≥
 =0 || höt•->ai_sockty≥ =
SOCK_DGRAM
) {

420 i‡–(
•å
 = 
	`gë£rvby«me
(
£rv
, "udp")Ë!
NULL
) {

421 i‡–(
rc
 = 
	`ga_p‹t
(
aihód
, 
•å
->
s_p‹t
, 
SOCK_DGRAM
)) < 0)

422 (
EAI_MEMORY
);

423 
nfound
 +
rc
;

427 i‡(
nfound
 == 0) {

428 i‡(
höt•
->
ai_sockty≥
 == 0)

429 (
EAI_NONAME
);

431 (
EAI_SERVICE
);

434 
	}
}

463 
	$ga_p‹t
(
addröfo
 *
aihód
, 
p‹t
, 
sockty≥
)

466 
nfound
 = 0;

467 
addröfo
 *
ai
;

469 
ai
 = 
aihód
;áò!
NULL
;áòai->
ai_√xt
) {

470 i‡(
ai
->
ai_Êags
 & 
AI_CLONE
) {

471 i‡(
ai
->
ai_sockty≥
 != 0) {

472 i‡–(
ai
 = 
	`ga_˛⁄e
◊i)Ë=
NULL
)

476 } i‡(
ai
->
ai_sockty≥
 !
sockty≥
)

479 
ai
->
ai_sockty≥
 = 
sockty≥
;

481 
ai
->
ai_Ámûy
) {

482 #ifdef 
IPV4


483 
AF_INET
:

484 ((
sockaddr_ö
 *Ë
ai
->
ai_addr
)->
sö_p‹t
 = 
p‹t
;

485 
nfound
++;

488 #ifdef 
IPV6


489 
AF_INET6
:

490 ((
sockaddr_ö6
 *Ë
ai
->
ai_addr
)->
sö6_p‹t
 = 
p‹t
;

491 
nfound
++;

496 (
nfound
);

497 
	}
}

503 
addröfo
 *

504 
	$ga_˛⁄e
(
addröfo
 *
ai
)

506 
addröfo
 *
√w
;

508 i‡–(
√w
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

509 (
NULL
);

511 
√w
->
ai_√xt
 = 
ai
->ai_next;

512 
ai
->
ai_√xt
 = 
√w
;

514 
√w
->
ai_Êags
 = 0;

515 
√w
->
ai_Ámûy
 = 
ai
->ai_family;

516 
√w
->
ai_sockty≥
 = 
ai
->ai_socktype;

517 
√w
->
ai_¥Ÿocﬁ
 = 
ai
->ai_protocol;

518 
√w
->
ai_ˇn⁄«me
 = 
NULL
;

519 
√w
->
ai_addæí
 = 
ai
->ai_addrlen;

520 i‡–(
√w
->
ai_addr
 = 
	`mÆloc
(
ai
->
ai_addæí
)Ë=
NULL
)

521 (
NULL
);

522 
	`mem˝y
(
√w
->
ai_addr
, 
ai
->ai_addr,ái->
ai_addæí
);

524 (
√w
);

525 
	}
}

527 #ifdef 
UNIXDOMAIN


534 
	$ga_unix
(c⁄° *
∑th
, 
addröfo
 *
höt•
, addröfÿ**
ªsu…
)

536 
addröfo
 *
ai
;

537 
sockaddr_un
 *
u≈
;

539 i‡(
höt•
->
ai_sockty≥
 == 0)

540 (
EAI_SOCKTYPE
);

542 i‡–(
ai
 = 
	`ˇŒoc
(1, (
addröfo
))Ë=
NULL
)

543 (
NULL
);

545 
ai
->
ai_Êags
 = 0;

546 
ai
->
ai_Ámûy
 = 
AF_LOCAL
;

547 
ai
->
ai_sockty≥
 = 
höt•
->ai_socktype;

548 
ai
->
ai_¥Ÿocﬁ
 = 0;

551 
ai
->
ai_addæí
 = (
sockaddr_un
);

552 i‡–(
ai
->
ai_addr
 = 
	`mÆloc
◊i->
ai_addæí
)Ë=
NULL
)

553 (
EAI_MEMORY
);

554 
u≈
 = (
sockaddr_un
 *Ë
ai
->
ai_addr
;

555 
u≈
->
sun_Ámûy
 = 
AF_UNIX
;

556 
	`°∫˝y
(
u≈
->
sun_∑th
, 
∑th
, (unp->sun_path));

558 
ai
->
ai_ˇn⁄«me
 = 
NULL
;

559 
ai
->
ai_√xt
 = 
NULL
;

560 *
ªsu…
 = 
ai
;

562 i‡(
höt•
->
ai_Êags
 & 
AI_PASSIVE
)

563 
	`u∆ök
(
∑th
);

566 
	}
}

570 
	$‰ìaddröfo
(
addröfo
 *
aihód
)

572 
addröfo
 *
ai
, *
aöext
;

574 
ai
 = 
aihód
;áò!
NULL
;áò
aöext
) {

575 i‡(
ai
->
ai_addr
 !
NULL
)

576 
	`‰ì
(
ai
->
ai_addr
);

577 i‡(
ai
->
ai_ˇn⁄«me
 !
NULL
)

578 
	`‰ì
(
ai
->
ai_ˇn⁄«me
);

579 
aöext
 = 
ai
->
ai_√xt
;

580 
	`‰ì
(
ai
);

582 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/test1.c

1 
	~"u≈.h
"

10 
	$maö
(
¨gc
, **
¨gv
)

12 
ho°ít
 *
h±r
;

14 i‡(
¨gc
 != 2)

15 
	`îr_quô
("usage:Åest2 <IPaddress>");

17 
	`¥ötf
("gëho°by«me2(%s, AF_INET): ", 
¨gv
[1]);

18 
h±r
 = 
	`gëho°by«me2
(
¨gv
[1], 
AF_INET
);

19 
	`¥ötf
("%s\n", (
h±r
 =
NULL
) ? "failed" : "OK");

21 #ifdef 
IPv6


22 
	`¥ötf
("gëho°by«me2(%s, AF_INET6): ", 
¨gv
[1]);

23 
h±r
 = 
	`gëho°by«me2
(
¨gv
[1], 
AF_INET6
);

24 
	`¥ötf
("%s\n", (
h±r
 =
NULL
) ? "failed" : "OK");

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libgai/testga.c

1 
	~"u≈.h
"

8 
do_îπe°
();

9 
do_funcˇŒ
(const *, const *, , , , , );

10 
do_⁄ëe°
(*, *, 
addröfo
 *, );

11 c⁄° *
°r_Ám
();

12 c⁄° *
°r_sock
();

13 
ußge
(const *);

16 
	gvÊag
;

19 
	$maö
(
¨gc
, **
¨gv
)

21 
d€ºã°
 = 0;

22 
lo›cou¡
 = 1;

23 
c
, 
i
;

24 *
ho°
 = 
NULL
;

25 
ho°buf
[
NI_MAXHOST
];

26 *
£rv
 = 
NULL
;

27 
£rvbuf
[
NI_MAXSERV
];

28 
¥Ÿ€¡
 *
¥Ÿo
;

29 
addröfo
 
höts
;

31 i‡(
¨gc
 < 2)

32 
	`ußge
("");

34 
	`mem£t
(&
höts
, 0, (
addröfo
));

36 
›ãº
 = 0;

37  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "cef:h:l:pr:s:t:v")) != -1) {

38 
c
) {

40 
höts
.
ai_Êags
 |
AI_CANONNAME
;

44 
d€ºã°
 = 1;

48 #ifdef 
IPv4


49 i‡(
	`°rcmp
(
›èrg
, "inet") == 0) {

50 
höts
.
ai_Ámûy
 = 
AF_INET
;

54 #ifdef 
IPv6


55 i‡(
	`°rcmp
(
›èrg
, "inet6") == 0) {

56 
höts
.
ai_Ámûy
 = 
AF_INET6
;

60 #ifdef 
UNIXdomaö


61 i‡(
	`°rcmp
(
›èrg
, "unix") == 0) {

62 
höts
.
ai_Ámûy
 = 
AF_LOCAL
;

66 
	`ußge
("invalid -f option");

69 
	`°∫˝y
(
ho°buf
, 
›èrg
, 
NI_MAXHOST
-1);

70 
ho°
 = 
ho°buf
;

74 
lo›cou¡
 = 
	`©oi
(
›èrg
);

78 
höts
.
ai_Êags
 |
AI_PASSIVE
;

82 i‡((
¥Ÿo
 = 
	`gë¥Ÿoby«me
(
›èrg
)Ë=
NULL
) {

83 
höts
.
ai_¥Ÿocﬁ
 = 
	`©oi
(
›èrg
);

85 
höts
.
ai_¥Ÿocﬁ
 = 
¥Ÿo
->
p_¥Ÿo
;

90 
	`°∫˝y
(
£rvbuf
, 
›èrg
, 
NI_MAXSERV
-1);

91 
£rv
 = 
£rvbuf
;

95 i‡(
	`°rcmp
(
›èrg
, "stream") == 0) {

96 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

100 i‡(
	`°rcmp
(
›èrg
, "dgram") == 0) {

101 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

105 i‡(
	`°rcmp
(
›èrg
, "raw") == 0) {

106 
höts
.
ai_sockty≥
 = 
SOCK_RAW
;

110 #ifdef 
SOCK_RDM


111 i‡(
	`°rcmp
(
›èrg
, "rdm") == 0) {

112 
höts
.
ai_sockty≥
 = 
SOCK_RDM
;

117 #ifdef 
SOCK_SEQPACKET


118 i‡(
	`°rcmp
(
›èrg
, "seqpacket") == 0) {

119 
höts
.
ai_sockty≥
 = 
SOCK_SEQPACKET
;

123 
	`ußge
("invalid -t option");

126 
vÊag
 = 1;

130 
	`ußge
("unrecognized option");

133 i‡(
›töd
 < 
¨gc
) {

134 
	`ußge
("extraárgs");

137 i‡(
d€ºã°
) {

138 
	`do_îπe°
();

139 
	`exô
(0);

142 
i
 = 1; i <
lo›cou¡
; i++) {

143 i‡(
	`do_⁄ëe°
(
ho°
, 
£rv
, &
höts
, 
i
) > 0)

144 
	`exô
(1);

146 i‡(
i
 % 1000 == 0) {

147 
	`¥ötf
(" %d", 
i
);

148 
	`fÊush
(
°dout
);

152 
	`exô
(0);

153 
	}
}

161 
	$do_îπe°
()

164 
	`do_funcˇŒ
(
NULL
, "·p", 
AI_PASSIVE
, 0, 0, 0, 0);

169 
	`do_funcˇŒ
("loˇlho°", 
NULL
, 999999, 0, 0, 0, 
EAI_BADFLAGS
);

174 
	`do_funcˇŒ
("loˇlho°", 
NULL
, 0, 
AF_SNA
, 0, 0, 
EAI_FAMILY
);

183 #ifdef 
nŸdef


186 
	`do_funcˇŒ
("foo.b¨.foo.b¨.foo.b¨.com", 
NULL
, 0, 0, 0, 0, 
EAI_NODATA
);

190 
	`do_funcˇŒ
(
NULL
, NULL, 0, 0, 0, 0, 
EAI_NONAME
);

193 
	`do_funcˇŒ
("lkjjkhjhghgfgfd", 
NULL
, 0, 0, 0, 0, 
EAI_NONAME
);

196 
	`do_funcˇŒ
(
NULL
, "nosuch£rvi˚", 0, 0, 0, 0, 
EAI_NONAME
);

199 
	`do_funcˇŒ
("loˇlho°", "ã ë", 0, 0, 
SOCK_DGRAM
, 0, 
EAI_SERVICE
);

202 
	`do_funcˇŒ
("loˇlho°", "t·p", 0, 0, 
SOCK_STREAM
, 0, 
EAI_SERVICE
);

205 
	`do_funcˇŒ
("loˇlho°", 
NULL
, 0, 
AF_INET
, 
SOCK_SEQPACKET
, 0, 
EAI_SOCKTYPE
);

208 
	}
}

211 
	$do_funcˇŒ
(c⁄° *
ho°
, c⁄° *
£rv
,

212 
Êags
, 
Ámûy
, 
sockty≥
, 
¥Ÿocﬁ
, 
ex¥c
)

214 
rc
;

215 
addröfo
 
höts
, *
ªs
;

217 
	`mem£t
(&
höts
, 0, (
addröfo
));

218 
höts
.
ai_Êags
 = 
Êags
;

219 
höts
.
ai_Ámûy
 = 
Ámûy
;

220 
höts
.
ai_sockty≥
 = 
sockty≥
;

221 
höts
.
ai_¥Ÿocﬁ
 = 
¥Ÿocﬁ
;

223 
rc
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
);

224 i‡(
rc
 !
ex¥c
) {

225 
	`¥ötf
("expectedÑeturn = %d (%s),\nactualÑeturn = %d (%s)\n",

226 
ex¥c
, 
	`gai_°ªº‹
”x¥c), 
rc
, gai_strerror(rc));

227 i‡(
ho°
 !
NULL
)

228 
	`¥ötf
(" ho° = %s\n", 
ho°
);

229 i‡(
£rv
 !
NULL
)

230 
	`¥ötf
(" sîv = %s\n", 
£rv
);

231 
	`¥ötf
(" flags = %d, family = %s, socktype = %s,Örotocol = %d\n",

232 
Êags
, 
	`°r_Ám
(
Ámûy
), 
	`°r_sock
(
sockty≥
), 
¥Ÿocﬁ
);

233 
	`exô
(2);

235 
	}
}

238 
	$do_⁄ëe°
(*
ho°
, *
£rv
, 
addröfo
 *
höts
, 
ôî©i⁄
)

240 
rc
, 
fd
, 
vîbo£
;

241 
addröfo
 *
ªs
, *
ªsc›y
;

242 
rho°
[
NI_MAXHOST
], 
r£rv
[
NI_MAXSERV
];

244 
vîbo£
 = 
vÊag
 && (
ôî©i⁄
 == 1);

246 i‡(
ho°
 !
NULL
 && 
vîbo£
)

247 
	`¥ötf
("ho° = %s\n", 
ho°
);

248 i‡(
£rv
 !
NULL
 && 
vîbo£
)

249 
	`¥ötf
("£rv = %s\n", 
£rv
);

251 
rc
 = 
	`gëaddröfo
(
ho°
, 
£rv
, 
höts
, &
ªs
);

252 i‡(
rc
 != 0) {

253 
	`¥ötf
("gëaddröfÿªtu∫ codê%d (%s)\n", 
rc
, 
	`gai_°ªº‹
(rc));

257 
ªsc›y
 = 
ªs
;

259 i‡(
ôî©i⁄
 == 1) {

260 
	`¥ötf
("\nsockë(%s, %s, %d)", 
	`°r_Ám
(
ªs
->
ai_Ámûy
),

261 
	`°r_sock
(
ªs
->
ai_sockty≥
),Ñes->
ai_¥Ÿocﬁ
);

264 i‡(
höts
->
ai_Êags
 & 
AI_CANONNAME
) {

265 i‡(
ªs
->
ai_ˇn⁄«me
)

266 
	`¥ötf
(",ái_ˇn⁄«mê%s", 
ªs
->
ai_ˇn⁄«me
);

268 
	`¥ötf
("\n");

270 
	`¥ötf
("\taddress: %s\n",

271 
	`Sock_¡›
(
ªs
->
ai_addr
,Ñes->
ai_addæí
));

275 
fd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

276 i‡(
fd
 < 0)

277 
	`¥ötf
("callÅo socket() failed!\n");

279 
	`˛o£
(
fd
);

285 
rc
 = 
	`gë«meöfo
(
ªs
->
ai_addr
,Ñes->
ai_addæí
,

286 
rho°
, 
NI_MAXHOST
, 
r£rv
, 
NI_MAXSERV
,

287 (
ªs
->
ai_sockty≥
 =
SOCK_DGRAM
Ë? 
NI_DGRAM
: 0);

288 i‡(
rc
 == 0) {

289 i‡(
vîbo£
)

290 
	`¥ötf
("\tgetnameinfo: host = %s, serv = %s\n",

291 
rho°
, 
r£rv
);

293 
	`¥ötf
("gë«meöfÿªtu∫ed %d (%s)\n", 
rc
, 
	`gai_°ªº‹
(rc));

295 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

297 
	`‰ìaddröfo
(
ªsc›y
);

299 
	}
}

302 
	$ußge
(c⁄° *
msg
)

304 
	`¥ötf
(

319 i‡(
msg
[0] != 0)

320 
	`¥ötf
("%s\n", 
msg
);

321 
	`exô
(1);

322 
	}
}

325 
	$°r_Ám
(
Ámûy
)

327 #ifdef 
IPv4


328 i‡(
Ámûy
 =
AF_INET
)

331 #ifdef 
IPv6


332 i‡(
Ámûy
 =
AF_INET6
)

335 #ifdef 
UNIXdomaö


336 i‡(
Ámûy
 =
AF_LOCAL
)

340 
	}
}

343 
	$°r_sock
(
sockty≥
)

345 
sockty≥
) {

346 
SOCK_STREAM
:  "SOCK_STREAM";

347 
SOCK_DGRAM
:  "SOCK_DGRAM";

348 
SOCK_RAW
:  "SOCK_RAW";

349 #ifde‡
SOCK_RDM


350 
SOCK_RDM
:  "SOCK_RDM";

352 #ifde‡
SOCK_SEQPACKET


353 
SOCK_SEQPACKET
: "SOCK_SEQPACKET";

357 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/get_rtaddrs.c

1 
	~"u≈rouã.h
"

6 
	#ROUNDUP
(
a
, 
size
Ë((◊Ë& ((size)-1)Ë? (1 + (◊Ë| ((size)-1))Ë: (a))

	)

12 
	#NEXT_SA
(
≠
Ë≠ = (
SA
 *) \

13 ((
ˇddr_t
Ë
≠
 + (≠->
ß_Àn
 ? 
	`ROUNDUP
◊p->ß_Àn,  (
u_l⁄g
)) : \

14 (
u_l⁄g
)))

	)

17 
	$gë_πaddrs
(
addrs
, 
SA
 *
ß
, SA **
πi_öfo
)

19 
i
;

21 
i
 = 0; i < 
RTAX_MAX
; i++) {

22 i‡(
addrs
 & (1 << 
i
)) {

23 
πi_öfo
[
i
] = 
ß
;

24 
	`NEXT_SA
(
ß
);

26 
πi_öfo
[
i
] = 
NULL
;

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/if_indextoname.c

2 
	~"u≈ifi.h
"

3 
	~"u≈rouã.h
"

6 
	$if_ödext⁄ame
(
idx
, *
«me
)

8 *
buf
, *
√xt
, *
lim
;

9 
size_t
 
Àn
;

10 
if_msghdr
 *
ifm
;

11 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

12 
sockaddr_dl
 *
sdl
;

14 i‡–(
buf
 = 
	`√t_π_iÊi°
(0, 
idx
, &
Àn
)Ë=
NULL
)

15 (
NULL
);

17 
lim
 = 
buf
 + 
Àn
;

18 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
ifm
->
ifm_msgÀn
) {

19 
ifm
 = (
if_msghdr
 *Ë
√xt
;

20 i‡(
ifm
->
ifm_ty≥
 =
RTM_IFINFO
) {

21 
ß
 = (
sockaddr
 *Ë(
ifm
 + 1);

22 
	`gë_πaddrs
(
ifm
->
ifm_addrs
, 
ß
, 
πi_öfo
);

23 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFP
]Ë!
NULL
) {

24 i‡(
ß
->
ß_Ámûy
 =
AF_LINK
) {

25 
sdl
 = (
sockaddr_dl
 *Ë
ß
;

26 i‡(
sdl
->
sdl_ödex
 =
idx
) {

27 
¶í
 = 
	`mö
(
IFNAMSIZ
 - 1, 
sdl
->
sdl_∆í
);

28 
	`°∫˝y
(
«me
, 
sdl
->
sdl_d©a
, 
¶í
);

29 
«me
[
¶í
] = 0;

30 
	`‰ì
(
buf
);

31 (
«me
);

38 
	`‰ì
(
buf
);

39 (
NULL
);

40 
	}
}

44 
	$If_ödext⁄ame
(
idx
, *
«me
)

46 *
±r
;

48 i‡–(
±r
 = 
	`if_ödext⁄ame
(
idx
, 
«me
)Ë=
NULL
)

49 
	`îr_quô
("if_ödext⁄amêîr‹ f‹ %d", 
idx
);

50 (
±r
);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/if_nameindex.c

2 
	~"u≈ifi.h
"

3 
	~"u≈rouã.h
"

5 
if_«meödex
 *

6 
	$if_«meödex
()

8 *
buf
, *
√xt
, *
lim
;

9 
size_t
 
Àn
;

10 
if_msghdr
 *
ifm
;

11 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

12 
sockaddr_dl
 *
sdl
;

13 
if_«meödex
 *
ªsu…
, *
iÂå
;

14 *
«m±r
;

16 i‡–(
buf
 = 
	`√t_π_iÊi°
(0, 0, &
Àn
)Ë=
NULL
)

17 (
NULL
);

19 i‡–(
ªsu…
 = 
	`mÆloc
(
Àn
)Ë=
NULL
)

20 (
NULL
);

21 
iÂå
 = 
ªsu…
;

22 
«m±r
 = (*Ë
ªsu…
 + 
Àn
;

24 
lim
 = 
buf
 + 
Àn
;

25 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
ifm
->
ifm_msgÀn
) {

26 
ifm
 = (
if_msghdr
 *Ë
√xt
;

27 i‡(
ifm
->
ifm_ty≥
 =
RTM_IFINFO
) {

28 
ß
 = (
sockaddr
 *Ë(
ifm
 + 1);

29 
	`gë_πaddrs
(
ifm
->
ifm_addrs
, 
ß
, 
πi_öfo
);

30 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFP
]Ë!
NULL
) {

31 i‡(
ß
->
ß_Ámûy
 =
AF_LINK
) {

32 
sdl
 = (
sockaddr_dl
 *Ë
ß
;

33 
«m±r
 -
sdl
->
sdl_∆í
 + 1;

34 
	`°∫˝y
(
«m±r
, &
sdl
->
sdl_d©a
[0], sdl->
sdl_∆í
);

35 
«m±r
[
sdl
->
sdl_∆í
] = 0;

36 
iÂå
->
if_«me
 = 
«m±r
;

37 
iÂå
->
if_ödex
 = 
sdl
->
sdl_ödex
;

38 
iÂå
++;

44 
iÂå
->
if_«me
 = 
NULL
;

45 
iÂå
->
if_ödex
 = 0;

46 
	`‰ì
(
buf
);

47 (
ªsu…
);

48 
	}
}

53 
	$if_‰ì«meödex
(
if_«meödex
 *
±r
)

55 
	`‰ì
(
±r
);

56 
	}
}

59 
if_«meödex
 *

60 
	$If_«meödex
()

62 
if_«meödex
 *
iÂå
;

64 i‡–(
iÂå
 = 
	`if_«meödex
()Ë=
NULL
)

65 
	`îr_quô
("if_nameindexÉrror");

66 (
iÂå
);

67 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/if_nametoindex.c

2 
	~"u≈ifi.h
"

3 
	~"u≈rouã.h
"

6 
	$if_«mëoödex
(c⁄° *
«me
)

8 
idx
, 
«mñí
;

9 *
buf
, *
√xt
, *
lim
;

10 
size_t
 
Àn
;

11 
if_msghdr
 *
ifm
;

12 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

13 
sockaddr_dl
 *
sdl
;

15 i‡–(
buf
 = 
	`√t_π_iÊi°
(0, 0, &
Àn
)Ë=
NULL
)

18 
«mñí
 = 
	`°æí
(
«me
);

19 
lim
 = 
buf
 + 
Àn
;

20 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
ifm
->
ifm_msgÀn
) {

21 
ifm
 = (
if_msghdr
 *Ë
√xt
;

22 i‡(
ifm
->
ifm_ty≥
 =
RTM_IFINFO
) {

23 
ß
 = (
sockaddr
 *Ë(
ifm
 + 1);

24 
	`gë_πaddrs
(
ifm
->
ifm_addrs
, 
ß
, 
πi_öfo
);

25 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFP
]Ë!
NULL
) {

26 i‡(
ß
->
ß_Ámûy
 =
AF_LINK
) {

27 
sdl
 = (
sockaddr_dl
 *Ë
ß
;

28 i‡(
sdl
->
sdl_∆í
 =
«mñí
 && 
	`°∫cmp
(&sdl->
sdl_d©a
[0], 
«me
, sdl->sdl_nlen) == 0) {

29 
idx
 = 
sdl
->
sdl_ödex
;

30 
	`‰ì
(
buf
);

31 (
idx
);

38 
	`‰ì
(
buf
);

40 
	}
}

44 
	$If_«mëoödex
(c⁄° *
«me
)

46 
idx
;

48 i‡–(
idx
 = 
	`if_«mëoödex
(
«me
)) == 0)

49 
	`îr_quô
("if_«mëoödexÉº‹ f‹ %s", 
«me
);

50 (
idx
);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/net_rt_dump.c

2 
	~"u≈rouã.h
"

5 
	$√t_π_dump
(
Ámûy
, 
Êags
, 
size_t
 *
À≈
)

7 
mib
[6];

8 *
buf
;

10 
mib
[0] = 
CTL_NET
;

11 
mib
[1] = 
AF_ROUTE
;

12 
mib
[2] = 0;

13 
mib
[3] = 
Ámûy
;

14 
mib
[4] = 
NET_RT_DUMP
;

15 
mib
[5] = 
Êags
;

16 i‡(
	`sys˘l
(
mib
, 6, 
NULL
, 
À≈
, NULL, 0) < 0)

17 (
NULL
);

19 i‡–(
buf
 = 
	`mÆloc
(*
À≈
)Ë=
NULL
)

20 (
NULL
);

21 i‡(
	`sys˘l
(
mib
, 6, 
buf
, 
À≈
, 
NULL
, 0) < 0)

22 (
NULL
);

24 (
buf
);

25 
	}
}

29 
	$Në_π_dump
(
Ámûy
, 
Êags
, 
size_t
 *
À≈
)

31 *
±r
;

33 i‡–(
±r
 = 
	`√t_π_dump
(
Ámûy
, 
Êags
, 
À≈
)Ë=
NULL
)

34 
	`îr_sys
("net_rt_dumpÉrror");

35 (
±r
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/net_rt_iflist.c

2 
	~"u≈rouã.h
"

5 
	$√t_π_iÊi°
(
Ámûy
, 
Êags
, 
size_t
 *
À≈
)

7 
mib
[6];

8 *
buf
;

10 
mib
[0] = 
CTL_NET
;

11 
mib
[1] = 
AF_ROUTE
;

12 
mib
[2] = 0;

13 
mib
[3] = 
Ámûy
;

14 
mib
[4] = 
NET_RT_IFLIST
;

15 
mib
[5] = 
Êags
;

16 i‡(
	`sys˘l
(
mib
, 6, 
NULL
, 
À≈
, NULL, 0) < 0)

17 (
NULL
);

19 i‡–(
buf
 = 
	`mÆloc
(*
À≈
)Ë=
NULL
)

20 (
NULL
);

21 i‡(
	`sys˘l
(
mib
, 6, 
buf
, 
À≈
, 
NULL
, 0) < 0) {

22 
	`‰ì
(
buf
);

23 (
NULL
);

26 (
buf
);

27 
	}
}

31 
	$Në_π_iÊi°
(
Ámûy
, 
Êags
, 
size_t
 *
À≈
)

33 *
±r
;

35 i‡–(
±r
 = 
	`√t_π_iÊi°
(
Ámûy
, 
Êags
, 
À≈
)Ë=
NULL
)

36 
	`îr_sys
("net_rt_iflistÉrror");

37 (
±r
);

38 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/sock_masktop.c

1 
	~"u≈rouã.h
"

4 
	$sock_maskt›
(
SA
 *
ß
, 
sockÀn_t
 
ßÀn
)

6 
°r
[
INET6_ADDRSTRLEN
];

7 *
±r
 = &
ß
->
ß_d©a
[2];

9 i‡(
ß
->
ß_Àn
 == 0)

11 i‡(
ß
->
ß_Àn
 == 5)

12 
	`¢¥ötf
(
°r
, (°r), "%d.0.0.0", *
±r
);

13 i‡(
ß
->
ß_Àn
 == 6)

14 
	`¢¥ötf
(
°r
, (°r), "%d.%d.0.0", *
±r
, *(ptr+1));

15 i‡(
ß
->
ß_Àn
 == 7)

16 
	`¢¥ötf
(
°r
, (°r), "%d.%d.%d.0", *
±r
, *(ptr+1), *(ptr+2));

17 i‡(
ß
->
ß_Àn
 == 8)

18 
	`¢¥ötf
(
°r
, (str), "%d.%d.%d.%d",

19 *
±r
, *(ptr+1), *(ptr+2), *(ptr+3));

21 
	`¢¥ötf
(
°r
, (str), "(unknown mask,Üen = %d, family = %d)",

22 
ß
->
ß_Àn
, sa->
ß_Ámûy
);

23 (
°r
);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/libroute/unproute.h

1 
	~"u≈.h
"

2 
	~<√t/if.h
>

3 
	~<√t/if_dl.h
>

4 
	~<√t/rouã.h
>

5 
	~<sys/∑øm.h
>

7 #ifdef 
HAVE_SYS_SYSCTL_H


8 
	~<sys/sys˘l.h
>

12 
gë_πaddrs
(, 
sockaddr
 *, sockaddr **);

13 *
√t_π_iÊi°
(, , 
size_t
 *);

14 *
√t_π_dump
(, , 
size_t
 *);

15 c⁄° *
sock_maskt›
(
sockaddr
 *, 
sockÀn_t
);

18 *
Në_π_iÊi°
(, , 
size_t
 *);

19 *
Në_π_dump
(, , 
size_t
 *);

20 
	#Sock_maskt›
(
a
,
b
Ë
	`sock_maskt›
(◊), (b))

	)

	@/media/sf_ddrive/progs/network/unpv13e/mcast/dgclibcast1.c

1 
	~"u≈.h
"

3 
ªcv‰om_Æ¨m
();

6 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

8 
n
;

9 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

10 
sockÀn_t
 
Àn
;

11 
sockaddr
 *
¥ïly_addr
;

13 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

15 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

17 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

19 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

21 
	`Æ¨m
(5);

23 
Àn
 = 
£rvÀn
;

24 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

25 i‡(
n
 == -1) {

26 i‡(
î∫o
 =
EINTR
)

29 
	`îr_sys
("recvfromÉrror");

31 
ªcvlöe
[
n
] = 0;

32 
	`¥ötf
("from %s: %s",

33 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
£rvÀn
), 
ªcvlöe
);

37 
	}
}

40 
	$ªcv‰om_Æ¨m
(
signo
)

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/dgclimcast5.c

1 
	~"u≈.h
"

2 
	~<£tjmp.h
>

4 
ªcv‰om_Æ¨m
();

5 
sigjmp_buf
 
	gjmpbuf
;

8 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

10 
n
;

11 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

12 
sockÀn_t
 
Àn
;

13 
sockaddr
 *
¥ïly_addr
;

15 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

17 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

19 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

21 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

23 
	`Æ¨m
(5);

25 i‡(
	`sig£tjmp
(
jmpbuf
, 1) != 0)

27 
Àn
 = 
£rvÀn
;

28 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

29 
ªcvlöe
[
n
] = 0;

30 
	`¥ötf
("from %s: %s",

31 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
£rvÀn
), 
ªcvlöe
);

34 
	}
}

37 
	$ªcv‰om_Æ¨m
(
signo
)

39 
	`sigl⁄gjmp
(
jmpbuf
, 1);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/dgclimcast6.c

1 
	~"u≈.h
"

2 
	~<£tjmp.h
>

4 
ªcv‰om_Æ¨m
();

5 
sigjmp_buf
 
	gjmpbuf
;

8 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

10 
n
;

11 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

12 
sockÀn_t
 
Àn
;

13 
sockaddr
 *
¥ïly_addr
;

15 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

17 
	`Sig«l
(
SIGALRM
, 
ªcv‰om_Æ¨m
);

19 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

21 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

23 
	`Æ¨m
(5);

25 i‡(
	`sig£tjmp
(
jmpbuf
, 1) != 0)

27 
Àn
 = 
£rvÀn
;

28 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

29 
ªcvlöe
[
n
] = 0;

30 
	`¥ötf
("from %s: %s",

31 
	`Sock_¡›_ho°
(
¥ïly_addr
, 
£rvÀn
), 
ªcvlöe
);

34 
	}
}

37 
	$ªcv‰om_Æ¨m
(
signo
)

39 
	`sigl⁄gjmp
(
jmpbuf
, 1);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/main.c

1 
	~"u≈.h
"

3 
ªcv_Æl
(, 
sockÀn_t
);

4 
£nd_Æl
(, 
SA
 *, 
sockÀn_t
);

7 
	$maö
(
¨gc
, **
¨gv
)

9 
£ndfd
, 
ªcvfd
;

10 c⁄° 
⁄
 = 1;

11 
sockÀn_t
 
ßÀn
;

12 
sockaddr
 *
ß£nd
, *
ßªcv
;

14 i‡(
¨gc
 != 3)

15 
	`îr_quô
("usage: sendrecv <IP-multicast-address> <port#>");

17 
£ndfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß£nd
, &
ßÀn
);

19 
ªcvfd
 = 
	`Sockë
(
ß£nd
->
ß_Ámûy
, 
SOCK_DGRAM
, 0);

21 
	`Sësock›t
(
ªcvfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

23 
ßªcv
 = 
	`MÆloc
(
ßÀn
);

24 
	`mem˝y
(
ßªcv
, 
ß£nd
, 
ßÀn
);

25 
	`Böd
(
ªcvfd
, 
ßªcv
, 
ßÀn
);

27 
	`Mˇ°_joö
(
ªcvfd
, 
ß£nd
, 
ßÀn
, 
NULL
, 0);

28 
	`Mˇ°_£t_lo›
(
£ndfd
, 0);

30 i‡(
	`F‹k
() == 0)

31 
	`ªcv_Æl
(
ªcvfd
, 
ßÀn
);

33 
	`£nd_Æl
(
£ndfd
, 
ß£nd
, 
ßÀn
);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/recv.c

1 
	~"u≈.h
"

4 
	$ªcv_Æl
(
ªcvfd
, 
sockÀn_t
 
ßÀn
)

6 
n
;

7 
löe
[
MAXLINE
+1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr
 *
ß‰om
;

11 
ß‰om
 = 
	`MÆloc
(
ßÀn
);

14 
Àn
 = 
ßÀn
;

15 
n
 = 
	`Recv‰om
(
ªcvfd
, 
löe
, 
MAXLINE
, 0, 
ß‰om
, &
Àn
);

17 
löe
[
n
] = 0;

18 
	`¥ötf
("‰om %s: %s", 
	`Sock_¡›
(
ß‰om
, 
Àn
), 
löe
);

20 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/send.c

1 
	~"u≈.h
"

2 
	~<sys/ut¢ame.h
>

4 
	#SENDRATE
 5

	)

7 
	$£nd_Æl
(
£ndfd
, 
SA
 *
ßde°
, 
sockÀn_t
 
ßÀn
)

9 
löe
[
MAXLINE
];

10 
ut¢ame
 
my«me
;

12 i‡(
	`u«me
(&
my«me
) < 0)

13 
	`îr_sys
("unameÉrror");;

14 
	`¢¥ötf
(
löe
, ÷öe), "%s, %d\n", 
my«me
.
nodíame
, 
	`gëpid
());

17 
	`Sídto
(
£ndfd
, 
löe
, 
	`°æí
÷öe), 0, 
ßde°
, 
ßÀn
);

19 
	`¶ìp
(
SENDRATE
);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli01 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli05.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli05 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
ßÀn
;

8 
sockaddr
 *
˛i
, *
£rv
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage: udpcli06 <IPaddress>");

13 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1], "daytime", (**Ë&
£rv
, &
ßÀn
);

15 
˛i
 = 
	`MÆloc
(
ßÀn
);

16 
	`mem˝y
(
˛i
, 
£rv
, 
ßÀn
);

17 
	`sock_£t_p‹t
(
˛i
, 
ßÀn
, 0);

18 
	`Böd
(
sockfd
, 
˛i
, 
ßÀn
);

20 
	`dg_˛i
(
°dö
, 
sockfd
, 
£rv
, 
ßÀn
);

22 
	`exô
(0);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mcast/udpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
gΩaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`bzîo
(&
gΩaddr
, (
£rvaddr
));

19 
gΩaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
gΩaddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
("224.0.0.1");

22 
	`mˇ°_joö
(
sockfd
, &
gΩaddr
, (gΩaddr), 
NULL
, 0);

24 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mysdr/loop.c

1 
	~"mysdr.h
"

4 
	$lo›
(
sockfd
, 
sockÀn_t
 
ßÀn
)

6 
sockÀn_t
 
Àn
;

7 
ssize_t
 
n
;

8 *
p
;

9 
sockaddr
 *
ß
;

10 
	sßp_∑ckë
 {

11 
uöt32_t
 
ßp_hódî
;

12 
uöt32_t
 
ßp_§c
;

13 
ßp_d©a
[
BUFFSIZE
];

14 } 
buf
;

16 
ß
 = 
	`MÆloc
(
ßÀn
);

19 
Àn
 = 
ßÀn
;

20 
n
 = 
	`Recv‰om
(
sockfd
, &
buf
, (bufË- 1, 0, 
ß
, &
Àn
);

21 ((*)&
buf
)[
n
] = 0;

22 
buf
.
ßp_hódî
 = 
	`¡ohl
(buf.sap_header);

24 
	`¥ötf
("From %†hash 0x%04x\n", 
	`Sock_¡›
(
ß
, 
Àn
),

25 
buf
.
ßp_hódî
 & 
SAP_HASH_MASK
);

26 i‡(((
buf
.
ßp_hódî
 & 
SAP_VERSION_MASK
Ë>> 
SAP_VERSION_SHIFT
) > 1) {

27 
	`îr_msg
("... vîsi⁄ fõldÇŸ 1 (0x%08x)", 
buf
.
ßp_hódî
);

30 i‡(
buf
.
ßp_hódî
 & 
SAP_IPV6
) {

31 
	`îr_msg
("... IPv6");

34 i‡(
buf
.
ßp_hódî
 & (
SAP_DELETE
|
SAP_ENCRYPTED
|
SAP_COMPRESSED
)) {

35 
	`îr_msg
("... c™'à∑r£Åhi†∑ckëÅy≥ (0x%08x)", 
buf
.
ßp_hódî
);

38 
p
 = 
buf
.
ßp_d©a
 + ((buf.
ßp_hódî
 & 
SAP_AUTHLEN_MASK
)

39 >> 
SAP_AUTHLEN_SHIFT
);

40 i‡(
	`°rcmp
(
p
, "application/sdp") == 0)

41 
p
 += 16;

42 
	`¥ötf
("%s\n", 
p
);

44 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mysdr/main.c

1 
	~"u≈.h
"

3 
	#SAP_NAME
 "ßp.mˇ°.√t"

	)

4 
	#SAP_PORT
 "9875"

	)

6 
lo›
(, 
sockÀn_t
);

9 
	$maö
(
¨gc
, **
¨gv
)

11 
sockfd
;

12 c⁄° 
⁄
 = 1;

13 
sockÀn_t
 
ßÀn
;

14 
sockaddr
 *
ß
;

16 i‡(
¨gc
 == 1)

17 
sockfd
 = 
	`Udp_˛õ¡
(
SAP_NAME
, 
SAP_PORT
, (**Ë&
ß
, &
ßÀn
);

18 i‡(
¨gc
 == 4)

19 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

21 
	`îr_quô
("usage: mysdr <mcast-addr> <port#> <interface-name>");

23 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

24 
	`Böd
(
sockfd
, 
ß
, 
ßÀn
);

26 
	`Mˇ°_joö
(
sockfd
, 
ß
, 
ßÀn
, (
¨gc
 =4Ë? 
¨gv
[3] : 
NULL
, 0);

28 
	`lo›
(
sockfd
, 
ßÀn
);

30 
	`exô
(0);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/mysdr/mysdr.h

1 
	~"u≈.h
"

3 
	#SAP_VERSION
 1

	)

4 
	#SAP_VERSION_MASK
 0xe0000000

	)

5 
	#SAP_VERSION_SHIFT
 29

	)

6 
	#SAP_IPV6
 0x10000000

	)

7 
	#SAP_DELETE
 0x04000000

	)

8 
	#SAP_ENCRYPTED
 0x02000000

	)

9 
	#SAP_COMPRESSED
 0x01000000

	)

10 
	#SAP_AUTHLEN_MASK
 0x00ff0000

	)

11 
	#SAP_AUTHLEN_SHIFT
 16

	)

12 
	#SAP_HASH_MASK
 0x0000ffff

	)

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr_°‹age
 
ss
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage: daytimetcpcli <hostname/IPaddress> <service/port#>");

14 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

16 
Àn
 = (
ss
);

17 
	`Gë≥î«me
(
sockfd
, (
SA
 *)&
ss
, &
Àn
);

18 
	`¥ötf
("c⁄√˘edÅÿ%s\n", 
	`Sock_¡›_ho°
((
SA
 *)&
ss
, 
Àn
));

20  (
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

21 
ªcvlöe
[
n
] = 0;

22 
	`Fputs
(
ªcvlöe
, 
°dout
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli1.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

9 
ö_addr
 **
µå
;

10 
ö_addr
 *
öëaddΩ
[2];

11 
ö_addr
 
öëaddr
;

12 
ho°ít
 *
hp
;

13 
£rvít
 *
•
;

15 i‡(
¨gc
 != 3)

16 
	`îr_quô
("usage: daytimetcpcli1 <hostname> <service>");

18 i‡–(
hp
 = 
	`gëho°by«me
(
¨gv
[1])Ë=
NULL
) {

19 i‡(
	`öë_©⁄
(
¨gv
[1], &
öëaddr
) == 0) {

20 
	`îr_quô
("ho°«mêîr‹ f‹ %s: %s", 
¨gv
[1], 
	`h°ªº‹
(
h_î∫o
));

22 
öëaddΩ
[0] = &
öëaddr
;

23 
öëaddΩ
[1] = 
NULL
;

24 
µå
 = 
öëaddΩ
;

27 
µå
 = (
ö_addr
 **Ë
hp
->
h_addr_li°
;

30 i‡–(
•
 = 
	`gë£rvby«me
(
¨gv
[2], "t˝")Ë=
NULL
)

31 
	`îr_quô
("gë£rvby«mêîr‹ f‹ %s", 
¨gv
[2]);

33  ; *
µå
 !
NULL
;Öptr++) {

34 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

36 
	`bzîo
(&
£rvaddr
, (servaddr));

37 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

38 
£rvaddr
.
sö_p‹t
 = 
•
->
s_p‹t
;

39 
	`mem˝y
(&
£rvaddr
.
sö_addr
, *
µå
, (
ö_addr
));

40 
	`¥ötf
("trying %s\n",

41 
	`Sock_¡›
((
SA
 *Ë&
£rvaddr
, (servaddr)));

43 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) == 0)

45 
	`îr_ªt
("connectÉrror");

46 
	`˛o£
(
sockfd
);

48 i‡(*
µå
 =
NULL
)

49 
	`îr_quô
("unableÅo connect");

51  (
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

52 
ªcvlöe
[
n
] = 0;

53 
	`Fputs
(
ªcvlöe
, 
°dout
);

55 
	`exô
(0);

56 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

9 
ö_addr
 **
µå
, *
addrs
[2];

10 
ho°ít
 *
hp
;

11 
£rvít
 *
•
;

13 i‡(
¨gc
 != 3)

14 
	`îr_quô
("usage: daytimetcpcli2 <hostname> <service>");

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

19 i‡(
	`öë_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
) == 1) {

20 
addrs
[0] = &
£rvaddr
.
sö_addr
;

21 
addrs
[1] = 
NULL
;

22 
µå
 = &
addrs
[0];

23 } i‡–(
hp
 = 
	`gëho°by«me
(
¨gv
[1])Ë!
NULL
) {

24 
µå
 = (
ö_addr
 **Ë
hp
->
h_addr_li°
;

26 
	`îr_quô
("ho°«mêîr‹ f‹ %s: %s", 
¨gv
[1], 
	`h°ªº‹
(
h_î∫o
));

28 i‡–(
n
 = 
	`©oi
(
¨gv
[2])) > 0)

29 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
n
);

30 i‡–(
•
 = 
	`gë£rvby«me
(
¨gv
[2], "t˝")Ë!
NULL
)

31 
£rvaddr
.
sö_p‹t
 = 
•
->
s_p‹t
;

33 
	`îr_quô
("gë£rvby«mêîr‹ f‹ %s", 
¨gv
[2]);

35  ; *
µå
 !
NULL
;Öptr++) {

36 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

38 
	`memmove
(&
£rvaddr
.
sö_addr
, *
µå
, (
ö_addr
));

39 
	`¥ötf
("trying %s\n",

40 
	`Sock_¡›
((
SA
 *Ë&
£rvaddr
, (servaddr)));

42 i‡(
	`c⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr)) == 0)

44 
	`îr_ªt
("connectÉrror");

45 
	`˛o£
(
sockfd
);

47 i‡(*
µå
 =
NULL
)

48 
	`îr_quô
("unableÅo connect");

50  (
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

51 
ªcvlöe
[
n
] = 0;

52 
	`Fputs
(
ªcvlöe
, 
°dout
);

54 
	`exô
(0);

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli3.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
£rvaddr
;

9 
sockaddr_ö6
 
£rvaddr6
;

10 
sockaddr
 *
ß
;

11 
sockÀn_t
 
ßÀn
;

12 
ö_addr
 **
µå
;

13 
ho°ít
 *
hp
;

14 
£rvít
 *
•
;

16 i‡(
¨gc
 != 3)

17 
	`îr_quô
("usage: daytimetcpcli3 <hostname> <service>");

19 i‡–(
hp
 = 
	`gëho°by«me
(
¨gv
[1])Ë=
NULL
)

20 
	`îr_quô
("ho°«mêîr‹ f‹ %s: %s", 
¨gv
[1], 
	`h°ªº‹
(
h_î∫o
));

22 i‡–(
•
 = 
	`gë£rvby«me
(
¨gv
[2], "t˝")Ë=
NULL
)

23 
	`îr_quô
("gë£rvby«mêîr‹ f‹ %s", 
¨gv
[2]);

25 
µå
 = (
ö_addr
 **Ë
hp
->
h_addr_li°
;

26  ; *
µå
 !
NULL
;Öptr++) {

27 
sockfd
 = 
	`Sockë
(
hp
->
h_addπy≥
, 
SOCK_STREAM
, 0);

29 i‡(
hp
->
h_addπy≥
 =
AF_INET
) {

30 
ß
 = (
SA
 *Ë&
£rvaddr
;

31 
ßÀn
 = (
£rvaddr
);

32 } i‡(
hp
->
h_addπy≥
 =
AF_INET6
) {

33 
ß
 = (
SA
 *Ë&
£rvaddr6
;

34 
ßÀn
 = (
£rvaddr6
);

36 
	`îr_quô
("unknow¿addπy≥ %d", 
hp
->
h_addπy≥
);

38 
	`bzîo
(
ß
, 
ßÀn
);

39 
ß
->
ß_Ámûy
 = 
hp
->
h_addπy≥
;

40 
	`sock_£t_p‹t
(
ß
, 
ßÀn
, 
•
->
s_p‹t
);

41 
	`sock_£t_addr
(
ß
, 
ßÀn
, *
µå
);

43 
	`¥ötf
("åyög %s\n", 
	`Sock_¡›
(
ß
, 
ßÀn
));

45 i‡(
	`c⁄√˘
(
sockfd
, 
ß
, 
ßÀn
) == 0)

47 
	`îr_ªt
("connectÉrror");

48 
	`˛o£
(
sockfd
);

50 i‡(*
µå
 =
NULL
)

51 
	`îr_quô
("unableÅo connect");

53  (
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

54 
ªcvlöe
[
n
] = 0;

55 
	`Fputs
(
ªcvlöe
, 
°dout
);

57 
	`exô
(0);

58 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv1.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
Àn
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

11 
sockaddr_°‹age
 
˛üddr
;

13 i‡(
¨gc
 != 2)

14 
	`îr_quô
("usage: daytimetcpsrv1 <service orÖort#>");

16 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

19 
Àn
 = (
˛üddr
);

20 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛üddr
, &
Àn
);

21 
	`¥ötf
("c⁄√˘i⁄ from %s\n", 
	`Sock_¡›
((
SA
 *)&
˛üddr
, 
Àn
));

23 
ticks
 = 
	`time
(
NULL
);

24 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

25 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

27 
	`Clo£
(
c⁄nfd
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv2.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
Àn
, 
addæí
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

11 
sockaddr_°‹age
 
˛üddr
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage: daytimetcpsrv2 [ <host> ] <service orÖort>");

21 
Àn
 = (
˛üddr
);

22 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *)&
˛üddr
, &
Àn
);

23 
	`¥ötf
("c⁄√˘i⁄ from %s\n", 
	`Sock_¡›
((
SA
 *)&
˛üddr
, 
Àn
));

25 
ticks
 = 
	`time
(
NULL
);

26 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

27 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

29 
	`Clo£
(
c⁄nfd
);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv3.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
addæí
, 
Àn
;

9 
sockaddr
 *
˛üddr
;

10 
lögî
 
lög
;

11 
buff
[
MAXLINE
];

12 
time_t
 
ticks
;

14 i‡(
¨gc
 == 2)

15 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

16 i‡(
¨gc
 == 3)

17 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

19 
	`îr_quô
("usage: daytimetcpsrv3 [ <host> ] <service orÖort>");

21 
˛üddr
 = 
	`MÆloc
(
addæí
);

24 
Àn
 = 
addæí
;

25 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

26 
	`¥ötf
("c⁄√˘i⁄ from %s\n", 
	`Sock_¡›
(
˛üddr
, 
Àn
));

29 
lög
.
l_⁄off
 = 1;

30 
lög
.
l_lögî
 = 0;

31 
	`Sësock›t
(
c⁄nfd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lög
, (ling));

33 
ticks
 = 
	`time
(
NULL
);

34 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

35 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

37 
	`¶ìp
(2);

38 
	`Clo£
(
c⁄nfd
);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv4.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
addæí
, 
Àn
;

9 
sockaddr
 *
˛üddr
;

10 
buff
[
MAXLINE
], 
ho°
[
NI_MAXHOST
], 
£rv
[
NI_MAXSERV
];

11 
time_t
 
ticks
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage: daytimetcpsrv4 [ <host> ] <service orÖort>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
Àn
 = 
addæí
;

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

25 i‡(
	`gë«meöfo
(
˛üddr
, 
Àn
, 
ho°
, 
NI_MAXHOST
, 
£rv
, 
NI_MAXSERV
,

26 
NI_NUMERICHOST
 | 
NI_NUMERICSERV
) == 0)

27 
	`¥ötf
("c⁄√˘i⁄ from %s.%s\n", 
ho°
, 
£rv
);

29 
ticks
 = 
	`time
(
NULL
);

30 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

31 
	`Wrôe
(
c⁄nfd
, 
buff
, 
	`°æí
(buff));

33 
	`Clo£
(
c⁄nfd
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpcli1.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
ßÀn
;

9 
sockaddr
 *
ß
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage: daytimeudpcli1 <hostname/IPaddress> <service/port#>");

14 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

16 
	`¥ötf
("£ndögÅÿ%s\n", 
	`Sock_¡›_ho°
(
ß
, 
ßÀn
));

18 
	`Sídto
(
sockfd
, "", 1, 0, 
ß
, 
ßÀn
);

20 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

21 
ªcvlöe
[
n
] = '\0';

22 
	`Fputs
(
ªcvlöe
, 
°dout
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpcli2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

9 i‡(
¨gc
 != 3)

10 
	`îr_quô
("usage: daytimeudpcli2 <hostname/IPaddress> <service/port#>");

12 
sockfd
 = 
	`Udp_c⁄√˘
(
¨gv
[1],árgv[2]);

14 
	`Wrôe
(
sockfd
, "", 1);

16 
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
);

17 
ªcvlöe
[
n
] = '\0';

18 
	`Fputs
(
ªcvlöe
, 
°dout
);

20 
	`exô
(0);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpsrv2.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
ssize_t
 
n
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

11 
sockÀn_t
 
Àn
;

12 
sockaddr_°‹age
 
˛üddr
;

14 i‡(
¨gc
 == 2)

15 
sockfd
 = 
	`Udp_£rvî
(
NULL
, 
¨gv
[1], NULL);

16 i‡(
¨gc
 == 3)

17 
sockfd
 = 
	`Udp_£rvî
(
¨gv
[1],árgv[2], 
NULL
);

19 
	`îr_quô
("usage: daytimeudpsrv [ <host> ] <service orÖort>");

22 
Àn
 = (
˛üddr
);

23 
n
 = 
	`Recv‰om
(
sockfd
, 
buff
, 
MAXLINE
, 0, (
SA
 *)&
˛üddr
, &
Àn
);

24 
	`¥ötf
("d©agøm from %s\n", 
	`Sock_¡›
((
SA
 *)&
˛üddr
, 
Àn
));

26 
ticks
 = 
	`time
(
NULL
);

27 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

28 
	`Sídto
(
sockfd
, 
buff
, 
	`°æí
(buff), 0, (
SA
 *)&
˛üddr
, 
Àn
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpsrv3.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
ssize_t
 
n
;

9 
buff
[
MAXLINE
];

10 
time_t
 
ticks
;

11 
sockÀn_t
 
Àn
;

12 
sockaddr_°‹age
 
˛üddr
;

14 i‡(
¨gc
 == 2)

15 
sockfd
 = 
	`Udp_£rvî_ªu£addr
(
NULL
, 
¨gv
[1], NULL);

16 i‡(
¨gc
 == 3)

17 
sockfd
 = 
	`Udp_£rvî_ªu£addr
(
¨gv
[1],árgv[2], 
NULL
);

19 
	`îr_quô
("usage: daytimeudpsrv [ <host> ] <service orÖort>");

22 
Àn
 = (
˛üddr
);

23 
n
 = 
	`Recv‰om
(
sockfd
, 
buff
, 
MAXLINE
, 0, (
SA
 *)&
˛üddr
, &
Àn
);

24 
	`¥ötf
("d©agøm from %s\n", 
	`Sock_¡›
((
SA
 *)&
˛üddr
, 
Àn
));

26 
ticks
 = 
	`time
(
NULL
);

27 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

28 
	`Sídto
(
sockfd
, 
buff
, 
	`°æí
(buff), 0, (
SA
 *)&
˛üddr
, 
Àn
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/hostent.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 *
±r
, **
µå
;

7 
°r
[
INET_ADDRSTRLEN
];

8 
ho°ít
 *
h±r
;

10 --
¨gc
 > 0) {

11 
±r
 = *++
¨gv
;

12 i‡–(
h±r
 = 
	`gëho°by«me
(
±r
)Ë=
NULL
) {

13 
	`îr_msg
("gethostbynameÉrror for host: %s: %s",

14 
±r
, 
	`h°ªº‹
(
h_î∫o
));

17 
	`¥ötf
("officü»ho°«me: %s\n", 
h±r
->
h_«me
);

19 
µå
 = 
h±r
->
h_Æü£s
; *µå !
NULL
;Öptr++)

20 
	`¥ötf
("\èlüs: %s\n", *
µå
);

22 
h±r
->
h_addπy≥
) {

23 
AF_INET
:

24 
µå
 = 
h±r
->
h_addr_li°
;

25  ; *
µå
 !
NULL
;Öptr++)

26 
	`¥ötf
("\taddress: %s\n",

27 
	`I√t_¡›
(
h±r
->
h_addπy≥
, *
µå
, 
°r
, (str)));

31 
	`îr_ªt
("unknownáddressÅype");

35 
	`exô
(0);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/hostent2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 *
±r
, **
µå
;

7 
°r
[
INET6_ADDRSTRLEN
];

8 
ho°ít
 *
h±r
;

10 --
¨gc
 > 0) {

11 
±r
 = *++
¨gv
;

12 i‡–(
h±r
 = 
	`gëho°by«me
(
±r
)Ë=
NULL
) {

13 
	`îr_msg
("gethostbynameÉrror for host: %s: %s",

14 
±r
, 
	`h°ªº‹
(
h_î∫o
));

17 
	`¥ötf
("officü»ho°«me: %s\n", 
h±r
->
h_«me
);

19 
µå
 = 
h±r
->
h_Æü£s
; *µå !
NULL
;Öptr++)

20 
	`¥ötf
("álüs: %s\n", *
µå
);

22 
h±r
->
h_addπy≥
) {

23 
AF_INET
:

24 #ifdef 
AF_INET6


25 
AF_INET6
:

27 
µå
 = 
h±r
->
h_addr_li°
;

28  ; *
µå
 !
NULL
;Öptr++) {

29 
	`¥ötf
("\taddress: %s\n",

30 
	`I√t_¡›
(
h±r
->
h_addπy≥
, *
µå
, 
°r
, (str)));

32 i‡–(
h±r
 = 
	`gëho°byaddr
(*
µå
, h±r->
h_Àngth
,

33 
h±r
->
h_addπy≥
)Ë=
NULL
)

34 
	`¥ötf
("\t(gethostbyaddr failed)\n");

35 i‡(
h±r
->
h_«me
 !
NULL
)

36 
	`¥ötf
("\äamê%s\n", 
h±r
->
h_«me
);

38 
	`¥ötf
("\t(no hostnameÑeturned by gethostbyaddr)\n");

43 
	`îr_ªt
("unknownáddressÅype");

47 
	`exô
(0);

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/hostent3.c

1 
	~"u≈.h
"

3 
¥_ùv4
(**);

6 
	$maö
(
¨gc
, **
¨gv
)

8 *
±r
, **
µå
;

9 
ho°ít
 *
h±r
;

11 --
¨gc
 > 0) {

12 
±r
 = *++
¨gv
;

13 i‡–(
h±r
 = 
	`gëho°by«me
(
±r
)Ë=
NULL
) {

14 
	`îr_msg
("gethostbynameÉrror for host: %s: %s",

15 
±r
, 
	`h°ªº‹
(
h_î∫o
));

18 
	`¥ötf
("officü»ho°Çame: %s\n", 
h±r
->
h_«me
);

20 
µå
 = 
h±r
->
h_Æü£s
; *µå !
NULL
;Öptr++)

21 
	`¥ötf
("álüs: %s\n", *
µå
);

23 
h±r
->
h_addπy≥
) {

24 
AF_INET
:

25 
	`¥_ùv4
(
h±r
->
h_addr_li°
);

29 
	`îr_ªt
("unknownáddressÅype");

33 
	`exô
(0);

34 
	}
}

43 
	$¥_ùv4
(**
li°±r
)

45 
ö_addr
 
öaddr
;

46 
ho°ít
 *
h±r
, 
hít
;

47 
buf
[8192];

48 
h_î∫o
;

50  ; *
li°±r
 !
NULL
;Üistptr++) {

51 
öaddr
 = *((
ö_addr
 *Ë(*
li°±r
));

52 
	`¥ötf
(" IPv4áddªss: %s", 
	`I√t_¡ﬂ
(
öaddr
));

54 i‡–(
h±r
 = 
	`gëho°byaddr_r
((*Ë&
öaddr
, (
ö_addr
),

55 
AF_INET
, &
hít
,

56 
buf
, (buf), &
h_î∫o
)Ë=
NULL
)

57 
	`¥ötf
(" (gëho°byadd∏Áûed: %s)\n", 
	`h°ªº‹
(
h_î∫o
));

58 i‡(
h±r
->
h_«me
 !
NULL
)

59 
	`¥ötf
("Çamê%s\n", 
h±r
->
h_«me
);

61 
	`¥ötf
(" (no hostnameÑeturned by gethostbyaddr)\n");

63 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/myaddrs1.c

1 
	~"u≈.h
"

2 
	~<sys/∑øm.h
>

5 
	$my_addrs
(*
addπy≥
)

7 
ho°ít
 *
h±r
;

8 
my«me
[
MAXHOSTNAMELEN
];

10 i‡(
	`gëho°«me
(
my«me
, (myname)) < 0)

11 (
NULL
);

13 i‡–(
h±r
 = 
	`gëho°by«me
(
my«me
)Ë=
NULL
)

14 (
NULL
);

16 *
addπy≥
 = 
h±r
->
h_addπy≥
;

17 (
h±r
->
h_addr_li°
);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/netent.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 *
±r
, **
µå
;

7 
√ã¡
 *
≈å
;

9 --
¨gc
 > 0) {

10 
±r
 = *++
¨gv
;

11 i‡–(
≈å
 = 
	`gë√tby«me
(
±r
)Ë=
NULL
) {

12 
	`îr_msg
("getnetbynameÉrror forÇet: %s: %s",

13 
±r
, 
	`h°ªº‹
(
h_î∫o
));

16 
	`¥ötf
("officü»√äame: %s\n", 
≈å
->
n_«me
);

18 
µå
 = 
≈å
->
n_Æü£s
; *µå !
NULL
;Öptr++)

19 
	`¥ötf
("álüs: %s\n", *
µå
);

21 
≈å
->
n_addπy≥
) {

22 
AF_INET
:

23 #ifdef 
AF_INET6


24 
AF_INET6
:

29 
	`îr_ªt
("unknownáddressÅype");

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/prmyaddrs.c

1 
	~"u≈.h
"

3 **
my_addrs
(*);

6 
	$maö
(
¨gc
, **
¨gv
)

8 
addπy≥
;

9 **
µå
, 
buf
[
INET6_ADDRSTRLEN
];

11 i‡–(
µå
 = 
	`my_addrs
(&
addπy≥
)Ë=
NULL
)

12 
	`îr_quô
("my_addrsÉrror");

14  ; *
µå
 !
NULL
;Öptr++)

15 
	`¥ötf
("\taddress: %s\n",

16 
	`I√t_¡›
(
addπy≥
, *
µå
, 
buf
, (buf)));

18 
	`exô
(0);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/prmyaddrs1.c

1 
	~"u≈.h
"

3 **
my_addrs
(*);

6 
	$maö
(
¨gc
, **
¨gv
)

8 
addπy≥
;

9 **
µå
, 
buf
[
INET6_ADDRSTRLEN
];

11 i‡–(
µå
 = 
	`my_addrs
(&
addπy≥
)Ë=
NULL
)

12 
	`îr_quô
("my_addrsÉrror");

14  ; *
µå
 !
NULL
;Öptr++)

15 
	`¥ötf
("\taddress: %s\n",

16 
	`I√t_¡›
(
addπy≥
, *
µå
, 
buf
, (buf)));

18 
	`exô
(0);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/test1.c

1 
	~"u≈.h
"

3 
¥_ùv4
(**);

6 
	$maö
(
¨gc
, **
¨gv
)

8 *
±r
, **
µå
, **
li°±r
, 
buf
[
INET6_ADDRSTRLEN
];

9 *
li°
[100];

10 
i
, 
addπy≥
, 
addæí
;

11 
ho°ít
 *
h±r
;

13 --
¨gc
 > 0) {

14 
±r
 = *++
¨gv
;

15 i‡–(
h±r
 = 
	`gëho°by«me
(
±r
)Ë=
NULL
) {

16 
	`îr_msg
("gethostbynameÉrror for host: %s: %s",

17 
±r
, 
	`h°ªº‹
(
h_î∫o
));

20 
	`¥ötf
("officü»ho°Çame: %s\n", 
h±r
->
h_«me
);

22 
µå
 = 
h±r
->
h_Æü£s
; *µå !
NULL
;Öptr++)

23 
	`¥ötf
("álüs: %s\n", *
µå
);

24 
addπy≥
 = 
h±r
->
h_addπy≥
;

25 
addæí
 = 
h±r
->
h_Àngth
;

28 
i
 = 0, 
li°±r
 = 
h±r
->
h_addr_li°
; *li°±∏!
NULL
;Üistptr++) {

29 
li°
[
i
++] = *
li°±r
;

31 
li°
[
i
] = 
NULL
;

33 
li°±r
 = 
li°
; *li°±∏!
NULL
;Üistptr++) {

34 
	`¥ötf
("\taddress: %s\n",

35 
	`I√t_¡›
(
addπy≥
, *
li°±r
, 
buf
, (buf)));

37 i‡–(
h±r
 = 
	`gëho°byaddr
(*
li°±r
, 
addæí
, 
addπy≥
)Ë=
NULL
)

38 
	`¥ötf
("\t\t(gethostbyaddr failed)\n");

39 i‡(
h±r
->
h_«me
 !
NULL
)

40 
	`¥ötf
("\t\äamê%s\n", 
h±r
->
h_«me
);

42 
	`¥ötf
("\t\t(no hostnameÑeturned by gethostbyaddr)\n");

44 
	`¥ötf
("\t\tofficü»ho°Çame: %s\n", 
h±r
->
h_«me
);

46 
µå
 = 
h±r
->
h_Æü£s
; *µå !
NULL
;Öptr++)

47 
	`¥ötf
("\t\èlüs: %s\n", *
µå
);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/test2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
ßÀn
;

9 
sockaddr
 *
ß
, *
ßböd
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:Åest2 <hostname/IPaddress> <service/port#>");

14 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

17 
ßböd
 = 
	`MÆloc
(
ßÀn
);

18 
	`bzîo
(
ßböd
, 
ßÀn
);

19 
ßböd
->
ß_Ámûy
 = 
ß
->sa_family;

20 
	`Böd
(
sockfd
, 
ßböd
, 
ßÀn
);

21 
	`¥ötf
("bound %s\n", 
	`Sock_¡›
(
ßböd
, 
ßÀn
));

23 
	`¥ötf
("£ndögÅÿ%s\n", 
	`Sock_¡›_ho°
(
ß
, 
ßÀn
));

25 
	`Sídto
(
sockfd
, "", 1, 0, 
ß
, 
ßÀn
);

27 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

28 
ªcvlöe
[
n
] = 0;

29 
	`Fputs
(
ªcvlöe
, 
°dout
);

31 
	`exô
(0);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/names/udp_server_reuseaddr.c

2 
	~"u≈.h
"

5 
	$udp_£rvî_ªu£addr
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

7 
sockfd
, 
n
;

8 c⁄° 
⁄
 = 1;

9 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

11 
	`bzîo
(&
höts
, (
addröfo
));

12 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

13 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

14 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

16 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

17 
	`îr_quô
("udp_serverÉrror for %s, %s: %s",

18 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

19 
ªsßve
 = 
ªs
;

22 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

23 i‡(
sockfd
 < 0)

26 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

27 i‡(
	`böd
(
sockfd
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
) == 0)

30 
	`Clo£
(
sockfd
);

31 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

33 i‡(
ªs
 =
NULL
)

34 
	`îr_sys
("udp_£rvîÉº‹ f‹ %s, %s", 
ho°
, 
£rv
);

36 i‡(
addæíp
)

37 *
addæíp
 = 
ªs
->
ai_addæí
;

39 
	`‰ìaddröfo
(
ªsßve
);

41 (
sockfd
);

42 
	}
}

46 
	$Udp_£rvî_ªu£addr
(c⁄° *
ho°
, c⁄° *
£rv
, 
sockÀn_t
 *
addæíp
)

48 (
	`udp_£rvî_ªu£addr
(
ho°
, 
£rv
, 
addæíp
));

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/daytimetcpcli.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
sockaddr_ö
 
£rvaddr
;

8 
ªcvlöe
[
MAXLINE
 + 1];

10 i‡–(
sockfd
 = 
	`sockë
(
PF_INET
, 
SOCK_STREAM
, 0)) < 0)

11 
	`îr_sys
("socketÉrror");

13 
	`bzîo
(&
£rvaddr
, (servaddr));

14 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

15 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`öë_addr
(
¨gv
[1]);

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

18 i‡(
	`c⁄√˘_n⁄b
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr), 0) < 0)

19 
	`îr_sys
("connectÉrror");

22 i‡–(
n
 = 
	`ªad
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) <= 0) {

23 i‡(
n
 == 0)

26 
	`îr_sys
("readÉrror");

28 
ªcvlöe
[
n
] = 0;

29 
	`Fputs
(
ªcvlöe
, 
°dout
);

31 
	`exô
(0);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/home_page.c

1 
	~"web.h
"

4 
	$home_∑ge
(c⁄° *
ho°
, c⁄° *
‚ame
)

6 
fd
, 
n
;

7 
löe
[
MAXLINE
];

9 
fd
 = 
	`T˝_c⁄√˘
(
ho°
, 
SERV
);

11 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
‚ame
);

12 
	`Wrôí
(
fd
, 
löe
, 
n
);

15 i‡–(
n
 = 
	`Ród
(
fd
, 
löe
, 
MAXLINE
)) == 0)

18 
	`¥ötf
("ªad %d byã†o‡homê∑ge\n", 
n
);

21 
	`¥ötf
("end-of-file on homeÖage\n");

22 
	`Clo£
(
fd
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/start_connect.c

1 
	~"web.h
"

4 
	$°¨t_c⁄√˘
(
fûe
 *
Âå
)

6 
fd
, 
Êags
, 
n
;

7 
addröfo
 *
ai
;

9 
ai
 = 
	`Ho°_£rv
(
Âå
->
f_ho°
, 
SERV
, 0, 
SOCK_STREAM
);

11 
fd
 = 
	`Sockë
(
ai
->
ai_Ámûy
,ái->
ai_sockty≥
,ái->
ai_¥Ÿocﬁ
);

12 
Âå
->
f_fd
 = 
fd
;

13 
	`¥ötf
("°¨t_c⁄√˘ f‹ %s, fd %d\n", 
Âå
->
f_«me
, 
fd
);

16 
Êags
 = 
	`F˙é
(
fd
, 
F_GETFL
, 0);

17 
	`F˙é
(
fd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
);

20 i‡–(
n
 = 
	`c⁄√˘
(
fd
, 
ai
->
ai_addr
,ái->
ai_addæí
)) < 0) {

21 i‡(
î∫o
 !
EINPROGRESS
)

22 
	`îr_sys
("nonblocking connectÉrror");

23 
Âå
->
f_Êags
 = 
F_CONNECTING
;

24 
	`FD_SET
(
fd
, &
r£t
);

25 
	`FD_SET
(
fd
, &
w£t
);

26 i‡(
fd
 > 
maxfd
)

27 
maxfd
 = 
fd
;

29 } i‡(
n
 >= 0)

30 
	`wrôe_gë_cmd
(
Âå
);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/strclifork.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
pid_t
 
pid
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

9 i‡–(
pid
 = 
	`F‹k
()) == 0) {

10 
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) > 0)

11 
	`Fputs
(
ªcvlöe
, 
°dout
);

13 
	`kûl
(
	`gëµid
(), 
SIGTERM
);

14 
	`exô
(0);

18 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
)

19 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

21 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

22 
	`∑u£
();

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/strclinonb.c

2 
	~"u≈.h
"

5 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

7 
maxfdp1
, 
vÆ
, 
°döeof
;

8 
ssize_t
 
n
, 
nwrôãn
;

9 
fd_£t
 
r£t
, 
w£t
;

10 
to
[
MAXLINE
], 
‰
[MAXLINE];

11 *
toùå
, *
to›å
, *
‰ùå
, *
‰›å
;

13 
vÆ
 = 
	`F˙é
(
sockfd
, 
F_GETFL
, 0);

14 
	`F˙é
(
sockfd
, 
F_SETFL
, 
vÆ
 | 
O_NONBLOCK
);

16 
vÆ
 = 
	`F˙é
(
STDIN_FILENO
, 
F_GETFL
, 0);

17 
	`F˙é
(
STDIN_FILENO
, 
F_SETFL
, 
vÆ
 | 
O_NONBLOCK
);

19 
vÆ
 = 
	`F˙é
(
STDOUT_FILENO
, 
F_GETFL
, 0);

20 
	`F˙é
(
STDOUT_FILENO
, 
F_SETFL
, 
vÆ
 | 
O_NONBLOCK
);

22 
toùå
 = 
to›å
 = 
to
;

23 
‰ùå
 = 
‰›å
 = 
‰
;

24 
°döeof
 = 0;

26 
maxfdp1
 = 
	`max
(max(
STDIN_FILENO
, 
STDOUT_FILENO
), 
sockfd
) + 1;

28 
	`FD_ZERO
(&
r£t
);

29 
	`FD_ZERO
(&
w£t
);

30 i‡(
°döeof
 =0 && 
toùå
 < &
to
[
MAXLINE
])

31 
	`FD_SET
(
STDIN_FILENO
, &
r£t
);

32 i‡(
‰ùå
 < &
‰
[
MAXLINE
])

33 
	`FD_SET
(
sockfd
, &
r£t
);

34 i‡(
to›å
 !
toùå
)

35 
	`FD_SET
(
sockfd
, &
w£t
);

36 i‡(
‰›å
 !
‰ùå
)

37 
	`FD_SET
(
STDOUT_FILENO
, &
w£t
);

39 
	`Sñe˘
(
maxfdp1
, &
r£t
, &
w£t
, 
NULL
, NULL);

42 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
r£t
)) {

43 i‡–(
n
 = 
	`ªad
(
STDIN_FILENO
, 
toùå
, &
to
[
MAXLINE
] -Åoiptr)) < 0) {

44 i‡(
î∫o
 !
EWOULDBLOCK
)

45 
	`îr_sys
("readÉrror on stdin");

47 } i‡(
n
 == 0) {

48 #ifdef 
VOL2


49 
	`Ârötf
(
°dîr
, "%s: EOF o¿°dö\n", 
	`gf_time
());

51 
°döeof
 = 1;

52 i‡(
to›å
 =
toùå
)

53 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

56 #ifdef 
VOL2


57 
	`Ârötf
(
°dîr
, "%s:Ñód %d byã†‰om stdö\n", 
	`gf_time
(), 
n
);

59 
toùå
 +
n
;

60 
	`FD_SET
(
sockfd
, &
w£t
);

64 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

65 i‡–(
n
 = 
	`ªad
(
sockfd
, 
‰ùå
, &
‰
[
MAXLINE
] - friptr)) < 0) {

66 i‡(
î∫o
 !
EWOULDBLOCK
)

67 
	`îr_sys
("readÉrror on socket");

69 } i‡(
n
 == 0) {

70 #ifdef 
VOL2


71 
	`Ârötf
(
°dîr
, "%s: EOF o¿sockë\n", 
	`gf_time
());

73 i‡(
°döeof
)

76 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

79 #ifdef 
VOL2


80 
	`Ârötf
(
°dîr
, "%s:Ñead %d bytes from socket\n",

81 
	`gf_time
(), 
n
);

83 
‰ùå
 +
n
;

84 
	`FD_SET
(
STDOUT_FILENO
, &
w£t
);

89 i‡(
	`FD_ISSET
(
STDOUT_FILENO
, &
w£t
Ë&& ( (
n
 = 
‰ùå
 - 
‰›å
) > 0)) {

90 i‡–(
nwrôãn
 = 
	`wrôe
(
STDOUT_FILENO
, 
‰›å
, 
n
)) < 0) {

91 i‡(
î∫o
 !
EWOULDBLOCK
)

92 
	`îr_sys
("writeÉrrorÅo stdout");

95 #ifdef 
VOL2


96 
	`Ârötf
(
°dîr
, "%s: wrote %d bytesÅo stdout\n",

97 
	`gf_time
(), 
nwrôãn
);

99 
‰›å
 +
nwrôãn
;

100 i‡(
‰›å
 =
‰ùå
)

101 
‰›å
 = 
‰ùå
 = 
‰
;

105 i‡(
	`FD_ISSET
(
sockfd
, &
w£t
Ë&& ( (
n
 = 
toùå
 - 
to›å
) > 0)) {

106 i‡–(
nwrôãn
 = 
	`wrôe
(
sockfd
, 
to›å
, 
n
)) < 0) {

107 i‡(
î∫o
 !
EWOULDBLOCK
)

108 
	`îr_sys
("writeÉrrorÅo socket");

111 #ifdef 
VOL2


112 
	`Ârötf
(
°dîr
, "%s: wrote %d bytesÅo socket\n",

113 
	`gf_time
(), 
nwrôãn
);

115 
to›å
 +
nwrôãn
;

116 i‡(
to›å
 =
toùå
) {

117 
toùå
 = 
to›å
 = 
to
;

118 i‡(
°döeof
)

119 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

124 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
lögî
 
lög
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
lög
.
l_⁄off
 = 1;

23 
lög
.
l_lögî
 = 0;

24 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lög
, (ling));

25 
	`Clo£
(
sockfd
);

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
lögî
 
lög
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
lög
.
l_⁄off
 = 1;

23 
lög
.
l_lögî
 = 0;

24 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lög
, (ling));

26 
	`°r_˛i
(
°dö
, 
sockfd
);

28 
	`exô
(0);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpservselect03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
i
, 
maxi
, 
maxfd
, 
li°ífd
, 
c⁄nfd
, 
sockfd
;

7 
ƒódy
, 
˛õ¡
[
FD_SETSIZE
];

8 
ssize_t
 
n
;

9 
fd_£t
 
r£t
, 
Æl£t
;

10 
löe
[
MAXLINE
];

11 
sockÀn_t
 
˛ûí
;

12 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

14 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

19 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

21 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

23 
	`Li°í
(
li°ífd
, 
LISTENQ
);

25 
maxfd
 = 
li°ífd
;

26 
maxi
 = -1;

27 
i
 = 0; i < 
FD_SETSIZE
; i++)

28 
˛õ¡
[
i
] = -1;

29 
	`FD_ZERO
(&
Æl£t
);

30 
	`FD_SET
(
li°ífd
, &
Æl£t
);

33 
r£t
 = 
Æl£t
;

34 
ƒódy
 = 
	`Sñe˘
(
maxfd
+1, &
r£t
, 
NULL
, NULL, NULL);

36 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

37 
	`¥ötf
("listening socketÑeadable\n");

38 
	`¶ìp
(5);

39 
˛ûí
 = (
˛üddr
);

40 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

41 #ifdef 
NOTDEF


42 
	`¥ötf
("new client: %s,Öort %d\n",

43 
	`I√t_¡›
(
AF_INET
, &
˛üddr
.
sö_addr
, 4, 
NULL
),

44 
	`¡ohs
(
˛üddr
.
sö_p‹t
));

47 
i
 = 0; i < 
FD_SETSIZE
; i++)

48 i‡(
˛õ¡
[
i
] < 0) {

49 
˛õ¡
[
i
] = 
c⁄nfd
;

52 i‡(
i
 =
FD_SETSIZE
)

53 
	`îr_quô
("too many clients");

55 
	`FD_SET
(
c⁄nfd
, &
Æl£t
);

56 i‡(
c⁄nfd
 > 
maxfd
)

57 
maxfd
 = 
c⁄nfd
;

58 i‡(
i
 > 
maxi
)

59 
maxi
 = 
i
;

61 i‡(--
ƒódy
 <= 0)

65 
i
 = 0; i <
maxi
; i++) {

66 i‡–(
sockfd
 = 
˛õ¡
[
i
]) < 0)

68 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

69 i‡–(
n
 = 
	`Ródlöe
(
sockfd
, 
löe
, 
MAXLINE
)) == 0) {

71 
	`Clo£
(
sockfd
);

72 
	`FD_CLR
(
sockfd
, &
Æl£t
);

73 
˛õ¡
[
i
] = -1;

75 
	`Wrôí
(
sockfd
, 
löe
, 
n
);

77 i‡(--
ƒódy
 <= 0)

82 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/web.c

2 
	~"web.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
, 
fd
, 
n
, 
maxnc⁄n
, 
Êags
, 
îr‹
;

8 
buf
[
MAXLINE
];

9 
fd_£t
 
rs
, 
ws
;

11 i‡(
¨gc
 < 5)

12 
	`îr_quô
("usage: web <#conns> <hostname> <homepage> <file1> ...");

13 
maxnc⁄n
 = 
	`©oi
(
¨gv
[1]);

15 
nfûes
 = 
	`mö
(
¨gc
 - 4, 
MAXFILES
);

16 
i
 = 0; i < 
nfûes
; i++) {

17 
fûe
[
i
].
f_«me
 = 
¨gv
[i + 4];

18 
fûe
[
i
].
f_ho°
 = 
¨gv
[2];

19 
fûe
[
i
].
f_Êags
 = 0;

21 
	`¥ötf
("nfûe†%d\n", 
nfûes
);

23 
	`home_∑ge
(
¨gv
[2],árgv[3]);

25 
	`FD_ZERO
(&
r£t
);

26 
	`FD_ZERO
(&
w£t
);

27 
maxfd
 = -1;

28 
∆e·t‹ód
 = 
∆e·toc⁄n
 = 
nfûes
;

29 
nc⁄n
 = 0;

32 
∆e·t‹ód
 > 0) {

33 
nc⁄n
 < 
maxnc⁄n
 && 
∆e·toc⁄n
 > 0) {

35 
i
 = 0 ; i < 
nfûes
; i++)

36 i‡(
fûe
[
i
].
f_Êags
 == 0)

38 i‡(
i
 =
nfûes
)

39 
	`îr_quô
("∆e·toc⁄¿%d buànŸhög found", 
∆e·toc⁄n
);

40 
	`°¨t_c⁄√˘
(&
fûe
[
i
]);

41 
nc⁄n
++;

42 
∆e·toc⁄n
--;

45 
rs
 = 
r£t
;

46 
ws
 = 
w£t
;

47 
n
 = 
	`Sñe˘
(
maxfd
+1, &
rs
, &
ws
, 
NULL
, NULL);

49 
i
 = 0; i < 
nfûes
; i++) {

50 
Êags
 = 
fûe
[
i
].
f_Êags
;

51 i‡(
Êags
 =0 || fœg†& 
F_DONE
)

53 
fd
 = 
fûe
[
i
].
f_fd
;

54 i‡(
Êags
 & 
F_CONNECTING
 &&

55 (
	`FD_ISSET
(
fd
, &
rs
Ë|| FD_ISSET(fd, &
ws
))) {

56 
n
 = (
îr‹
);

57 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ERROR
, &
îr‹
, &
n
) < 0 ||

58 
îr‹
 != 0) {

59 
	`îr_ªt
("nonblocking connect failed for %s",

60 
fûe
[
i
].
f_«me
);

63 
	`¥ötf
("c⁄√˘i⁄É°ablished f‹ %s\n", 
fûe
[
i
].
f_«me
);

64 
	`FD_CLR
(
fd
, &
w£t
);

65 
	`wrôe_gë_cmd
(&
fûe
[
i
]);

67 } i‡(
Êags
 & 
F_READING
 && 
	`FD_ISSET
(
fd
, &
rs
)) {

68 i‡–(
n
 = 
	`Ród
(
fd
, 
buf
, (buf))) == 0) {

69 
	`¥ötf
("íd-of-fûê⁄ %s\n", 
fûe
[
i
].
f_«me
);

70 
	`Clo£
(
fd
);

71 
fûe
[
i
].
f_Êags
 = 
F_DONE
;

72 
	`FD_CLR
(
fd
, &
r£t
);

73 
nc⁄n
--;

74 
∆e·t‹ód
--;

76 
	`¥ötf
("ªad %d byã†‰om %s\n", 
n
, 
fûe
[
i
].
f_«me
);

81 
	`exô
(0);

82 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/web.h

1 
	~"u≈.h
"

3 
	#MAXFILES
 20

	)

4 
	#SERV
 "80"

	)

6 
	sfûe
 {

7 *
	mf_«me
;

8 *
	mf_ho°
;

9 
	mf_fd
;

10 
	mf_Êags
;

11 } 
	gfûe
[
MAXFILES
];

13 
	#F_CONNECTING
 1

	)

14 
	#F_READING
 2

	)

15 
	#F_DONE
 4

	)

17 
	#GET_CMD
 "GET %†HTTP/1.0\r\n\r\n"

	)

20 
	gnc⁄n
, 
	gnfûes
, 
	g∆e·toc⁄n
, 
	g∆e·t‹ód
, 
	gmaxfd
;

21 
fd_£t
 
	gr£t
, 
	gw£t
;

24 
home_∑ge
(const *, const *);

25 
°¨t_c⁄√˘
(
fûe
 *);

26 
wrôe_gë_cmd
(
fûe
 *);

	@/media/sf_ddrive/progs/network/unpv13e/nonblock/write_get_cmd.c

1 
	~"web.h
"

4 
	$wrôe_gë_cmd
(
fûe
 *
Âå
)

6 
n
;

7 
löe
[
MAXLINE
];

9 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
Âå
->
f_«me
);

10 
	`Wrôí
(
Âå
->
f_fd
, 
löe
, 
n
);

11 
	`¥ötf
("wrŸê%d byã†f‹ %s\n", 
n
, 
Âå
->
f_«me
);

13 
Âå
->
f_Êags
 = 
F_READING
;

15 
	`FD_SET
(
Âå
->
f_fd
, &
r£t
);

16 i‡(
Âå
->
f_fd
 > 
maxfd
)

17 
maxfd
 = 
Âå
->
f_fd
;

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/heartbeatcli.c

1 
	~"u≈.h
"

3 
	g£rvfd
;

4 
	gn£c
;

5 
	gmax≈robes
;

6 
	g≈robes
;

7 
sig_urg
(), 
sig_Ærm
();

10 
	$hóπbót_˛i
(
£rvfd_¨g
, 
n£c_¨g
, 
max≈robes_¨g
)

12 
£rvfd
 = 
£rvfd_¨g
;

13 i‡–(
n£c
 = 
n£c_¨g
) < 1)

14 
n£c
 = 1;

15 i‡–(
max≈robes
 = 
max≈robes_¨g
Ë< 
n£c
)

16 
max≈robes
 = 
n£c
;

17 
≈robes
 = 0;

19 
	`Sig«l
(
SIGURG
, 
sig_urg
);

20 
	`F˙é
(
£rvfd
, 
F_SETOWN
, 
	`gëpid
());

22 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

23 
	`Æ¨m
(
n£c
);

24 
	}
}

27 
	$sig_urg
(
signo
)

29 
n
;

30 
c
;

32 i‡–(
n
 = 
	`ªcv
(
£rvfd
, &
c
, 1, 
MSG_OOB
)) < 0) {

33 i‡(
î∫o
 !
EWOULDBLOCK
)

34 
	`îr_sys
("recvÉrror");

36 
≈robes
 = 0;

38 
	}
}

41 
	$sig_Ærm
(
signo
)

43 i‡(++
≈robes
 > 
max≈robes
) {

44 
	`Ârötf
(
°dîr
, "server is unreachable\n");

45 
	`exô
(0);

47 
	`Síd
(
£rvfd
, "1", 1, 
MSG_OOB
);

48 
	`Æ¨m
(
n£c
);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/heartbeatserv.c

1 
	~"u≈.h
"

3 
	g£rvfd
;

4 
	gn£c
;

5 
	gmax«œrms
;

6 
	g≈robes
;

7 
sig_urg
(), 
sig_Ærm
();

10 
	$hóπbót_£rv
(
£rvfd_¨g
, 
n£c_¨g
, 
max«œrms_¨g
)

12 
£rvfd
 = 
£rvfd_¨g
;

13 i‡–(
n£c
 = 
n£c_¨g
) < 1)

14 
n£c
 = 1;

15 i‡–(
max«œrms
 = 
max«œrms_¨g
Ë< 
n£c
)

16 
max«œrms
 = 
n£c
;

18 
	`Sig«l
(
SIGURG
, 
sig_urg
);

19 
	`F˙é
(
£rvfd
, 
F_SETOWN
, 
	`gëpid
());

21 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

22 
	`Æ¨m
(
n£c
);

23 
	}
}

26 
	$sig_urg
(
signo
)

28 
n
;

29 
c
;

31 i‡–(
n
 = 
	`ªcv
(
£rvfd
, &
c
, 1, 
MSG_OOB
)) < 0) {

32 i‡(
î∫o
 !
EWOULDBLOCK
)

33 
	`îr_sys
("recvÉrror");

35 
	`Síd
(
£rvfd
, &
c
, 1, 
MSG_OOB
);

37 
≈robes
 = 0;

39 
	}
}

42 
	$sig_Ærm
(
signo
)

44 i‡(++
≈robes
 > 
max«œrms
) {

45 
	`¥ötf
("noÖrobes from client\n");

46 
	`exô
(0);

48 
	`Æ¨m
(
n£c
);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/sigchldwaitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0) {

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/strcliselect02.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
maxfdp1
, 
°döeof
 = 0;

7 
fd_£t
 
r£t
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

10 
	`hóπbót_˛i
(
sockfd
, 1, 5);

12 
	`FD_ZERO
(&
r£t
);

14 i‡(
°döeof
 == 0)

15 
	`FD_SET
(
	`fûío
(
Â
), &
r£t
);

16 
	`FD_SET
(
sockfd
, &
r£t
);

17 
maxfdp1
 = 
	`max
(
	`fûío
(
Â
), 
sockfd
) + 1;

18 i‡(
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL) < 0) {

19 i‡(
î∫o
 =
EINTR
)

22 
	`îr_sys
("selectÉrror");

25 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

26 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0) {

27 i‡(
°döeof
 == 1)

30 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

33 
	`Wrôí
(
STDOUT_FILENO
, 
ªcvlöe
, 
	`°æí
(recvline));

36 i‡(
	`FD_ISSET
(
	`fûío
(
Â
), &
r£t
)) {

37 i‡(
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë=
NULL
) {

38 
°döeof
 = 1;

39 
	`Æ¨m
(0);

40 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

41 
	`FD_CLR
(
	`fûío
(
Â
), &
r£t
);

45 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/strecho02.c

1 
	~"u≈.h
"

4 
	$°r_echo
(
sockfd
)

6 
ssize_t
 
n
;

7 
löe
[
MAXLINE
];

9 
	`hóπbót_£rv
(
sockfd
, 1, 5);

12 i‡–(
n
 = 
	`Ródlöe
(
sockfd
, 
löe
, 
MAXLINE
)) == 0)

15 
	`Wrôí
(
sockfd
, 
löe
, 
n
);

17 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv01.c

1 
	~"u≈.h
"

3 
	gli°ífd
, 
	gc⁄nfd
;

5 
sig_urg
();

8 
	$maö
(
¨gc
, **
¨gv
)

10 
n
;

11 
buff
[100];

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

18 
	`îr_quô
("usage:Åcprecv01 [ <host> ] <port#>");

20 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

22 
	`Sig«l
(
SIGURG
, 
sig_urg
);

23 
	`F˙é
(
c⁄nfd
, 
F_SETOWN
, 
	`gëpid
());

26 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

27 
	`¥ötf
("received EOF\n");

28 
	`exô
(0);

30 
buff
[
n
] = 0;

31 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

33 
	}
}

36 
	$sig_urg
(
signo
)

38 
n
;

39 
buff
[100];

41 
	`¥ötf
("SIGURGÑeceived\n");

42 
n
 = 
	`Recv
(
c⁄nfd
, 
buff
, (buff)-1, 
MSG_OOB
);

43 
buff
[
n
] = 0;

44 
	`¥ötf
("ªad %d OOB byã: %s\n", 
n
, 
buff
);

45 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
;

7 
buff
[100];

8 
fd_£t
 
r£t
, 
x£t
;

10 i‡(
¨gc
 == 2)

11 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

12 i‡(
¨gc
 == 3)

13 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

15 
	`îr_quô
("usage:Åcprecv02 [ <host> ] <port#>");

17 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

19 
	`FD_ZERO
(&
r£t
);

20 
	`FD_ZERO
(&
x£t
);

22 
	`FD_SET
(
c⁄nfd
, &
r£t
);

23 
	`FD_SET
(
c⁄nfd
, &
x£t
);

25 
	`Sñe˘
(
c⁄nfd
 + 1, &
r£t
, 
NULL
, &
x£t
, NULL);

27 i‡(
	`FD_ISSET
(
c⁄nfd
, &
x£t
)) {

28 
n
 = 
	`Recv
(
c⁄nfd
, 
buff
, (buff)-1, 
MSG_OOB
);

29 
buff
[
n
] = 0;

30 
	`¥ötf
("ªad %d OOB byã: %s\n", 
n
, 
buff
);

33 i‡(
	`FD_ISSET
(
c⁄nfd
, &
r£t
)) {

34 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

35 
	`¥ötf
("received EOF\n");

36 
	`exô
(0);

38 
buff
[
n
] = 0;

39 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
, 
ju°ªadoob
 = 0;

7 
buff
[100];

8 
fd_£t
 
r£t
, 
x£t
;

10 i‡(
¨gc
 == 2)

11 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

12 i‡(
¨gc
 == 3)

13 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

15 
	`îr_quô
("usage:Åcprecv03 [ <host> ] <port#>");

17 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

19 
	`FD_ZERO
(&
r£t
);

20 
	`FD_ZERO
(&
x£t
);

22 
	`FD_SET
(
c⁄nfd
, &
r£t
);

23 i‡(
ju°ªadoob
 == 0)

24 
	`FD_SET
(
c⁄nfd
, &
x£t
);

26 
	`Sñe˘
(
c⁄nfd
 + 1, &
r£t
, 
NULL
, &
x£t
, NULL);

28 i‡(
	`FD_ISSET
(
c⁄nfd
, &
x£t
)) {

29 
n
 = 
	`Recv
(
c⁄nfd
, 
buff
, (buff)-1, 
MSG_OOB
);

30 
buff
[
n
] = 0;

31 
	`¥ötf
("ªad %d OOB byã: %s\n", 
n
, 
buff
);

32 
ju°ªadoob
 = 1;

33 
	`FD_CLR
(
c⁄nfd
, &
x£t
);

36 i‡(
	`FD_ISSET
(
c⁄nfd
, &
r£t
)) {

37 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

38 
	`¥ötf
("received EOF\n");

39 
	`exô
(0);

41 
buff
[
n
] = 0;

42 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

43 
ju°ªadoob
 = 0;

46 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv03p.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
, 
ju°ªadoob
 = 0;

7 
buff
[100];

8 
pﬁlfd
Öollfd[1];

10 i‡(
¨gc
 == 2)

11 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

12 i‡(
¨gc
 == 3)

13 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

15 
	`îr_quô
("usage:Åcprecv03p [ <host> ] <port#>");

17 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

19 
pﬁlfd
[0].
fd
 = 
c⁄nfd
;

20 
pﬁlfd
[0].
evíts
 = 
POLLRDNORM
;

22 i‡(
ju°ªadoob
 == 0)

23 
pﬁlfd
[0].
evíts
 |
POLLRDBAND
;

25 
	`Pﬁl
(
pﬁlfd
, 1, 
INFTIM
);

27 i‡(
pﬁlfd
[0].
ªvíts
 & 
POLLRDBAND
) {

28 
n
 = 
	`Recv
(
c⁄nfd
, 
buff
, (buff)-1, 
MSG_OOB
);

29 
buff
[
n
] = 0;

30 
	`¥ötf
("ªad %d OOB byã: %s\n", 
n
, 
buff
);

31 
ju°ªadoob
 = 1;

32 
pﬁlfd
[0].
evíts
 &~
POLLRDBAND
;

35 i‡(
pﬁlfd
[0].
ªvíts
 & 
POLLRDNORM
) {

36 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

37 
	`¥ötf
("received EOF\n");

38 
	`exô
(0);

40 
buff
[
n
] = 0;

41 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

42 
ju°ªadoob
 = 0;

45 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
, 
⁄
=1;

7 
buff
[100];

9 i‡(
¨gc
 == 2)

10 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

11 i‡(
¨gc
 == 3)

12 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

14 
	`îr_quô
("usage:Åcprecv04 [ <host> ] <port#>");

16 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_OOBINLINE
, &
⁄
, (on));

18 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

19 
	`¶ìp
(5);

22 i‡(
	`Sock©m¨k
(
c⁄nfd
))

23 
	`¥ötf
("at OOB mark\n");

25 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

26 
	`¥ötf
("received EOF\n");

27 
	`exô
(0);

29 
buff
[
n
] = 0;

30 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv05.c

1 
	~"u≈.h
"

3 
	gli°ífd
, 
	gc⁄nfd
;

5 
sig_urg
();

8 
	$maö
(
¨gc
, **
¨gv
)

10 
size
;

12 i‡(
¨gc
 == 2)

13 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

14 i‡(
¨gc
 == 3)

15 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

17 
	`îr_quô
("usage:Åcprecv05 [ <host> ] <port#>");

19 
size
 = 4096;

20 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, (size));

22 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

24 
	`Sig«l
(
SIGURG
, 
sig_urg
);

25 
	`F˙é
(
c⁄nfd
, 
F_SETOWN
, 
	`gëpid
());

28 
	`∑u£
();

29 
	}
}

32 
	$sig_urg
(
signo
)

34 
n
;

35 
buff
[2048];

37 
	`¥ötf
("SIGURGÑeceived\n");

38 
n
 = 
	`Recv
(
c⁄nfd
, 
buff
, (buff)-1, 
MSG_OOB
);

39 
buff
[
n
] = 0;

40 
	`¥ötf
("ªad %d OOB byã\n", 
n
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
, 
n
, 
⁄
=1;

7 
buff
[100];

9 i‡(
¨gc
 == 2)

10 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], NULL);

11 i‡(
¨gc
 == 3)

12 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], 
NULL
);

14 
	`îr_quô
("usage:Åcprecv06 [ <host> ] <port#>");

16 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_OOBINLINE
, &
⁄
, (on));

18 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
NULL
, NULL);

19 
	`¶ìp
(5);

22 i‡(
	`Sock©m¨k
(
c⁄nfd
))

23 
	`¥ötf
("at OOB mark\n");

25 i‡–(
n
 = 
	`Ród
(
c⁄nfd
, 
buff
, (buff)-1)) == 0) {

26 
	`¥ötf
("received EOF\n");

27 
	`exô
(0);

29 
buff
[
n
] = 0;

30 
	`¥ötf
("ªad %d byãs: %s\n", 
n
, 
buff
);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpsend01 <host> <port#>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`Wrôe
(
sockfd
, "123", 3);

14 
	`¥ötf
("wrote 3 bytes ofÇormal data\n");

15 
	`¶ìp
(1);

17 
	`Síd
(
sockfd
, "4", 1, 
MSG_OOB
);

18 
	`¥ötf
("wrote 1 byte of OOB data\n");

19 
	`¶ìp
(1);

21 
	`Wrôe
(
sockfd
, "56", 2);

22 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

23 
	`¶ìp
(1);

25 
	`Síd
(
sockfd
, "7", 1, 
MSG_OOB
);

26 
	`¥ötf
("wrote 1 byte of OOB data\n");

27 
	`¶ìp
(1);

29 
	`Wrôe
(
sockfd
, "89", 2);

30 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

31 
	`¶ìp
(1);

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpsend02 <host> <port#>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`Wrôe
(
sockfd
, "123", 3);

14 
	`¥ötf
("wrote 3 bytes ofÇormal data\n");

15 
	`¶ìp
(1);

17 
	`Síd
(
sockfd
, "4", 1, 
MSG_OOB
);

18 
	`¥ötf
("wrote 1 byte of OOB data\n");

19 
	`¶ìp
(1);

21 
	`Wrôe
(
sockfd
, "56", 2);

22 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

23 
	`¶ìp
(1);

25 
	`Síd
(
sockfd
, "7", 1, 
MSG_OOB
);

26 
	`¥ötf
("wrote 1 byte of OOB data\n");

27 
	`¶ìp
(1);

29 
	`Wrôe
(
sockfd
, "89", 2);

30 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

31 
	`¶ìp
(1);

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpsend03 <host> <port#>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`Wrôe
(
sockfd
, "123", 3);

14 
	`¥ötf
("wrote 3 bytes ofÇormal data\n");

15 
	`¶ìp
(1);

17 
	`Síd
(
sockfd
, "4", 1, 
MSG_OOB
);

18 
	`¥ötf
("wrote 1 byte of OOB data\n");

19 
	`¶ìp
(1);

21 
	`Wrôe
(
sockfd
, "56", 2);

22 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

23 
	`¶ìp
(1);

25 
	`Síd
(
sockfd
, "7", 1, 
MSG_OOB
);

26 
	`¥ötf
("wrote 1 byte of OOB data\n");

27 
	`¶ìp
(1);

29 
	`Wrôe
(
sockfd
, "89", 2);

30 
	`¥ötf
("wrote 2 bytes ofÇormal data\n");

31 
	`¶ìp
(1);

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpsend04 <host> <port#>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`Wrôe
(
sockfd
, "123", 3);

14 
	`¥ötf
("wrote 3 bytes ofÇormal data\n");

16 
	`Síd
(
sockfd
, "4", 1, 
MSG_OOB
);

17 
	`¥ötf
("wrote 1 byte of OOB data\n");

19 
	`Wrôe
(
sockfd
, "5", 1);

20 
	`¥ötf
("wrote 1 byte ofÇormal data\n");

22 
	`exô
(0);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend05.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
size
;

7 
buff
[16384];

9 i‡(
¨gc
 != 3)

10 
	`îr_quô
("usage:Åcpsend05 <host> <port#>");

12 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

14 
size
 = 32768;

15 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, (size));

17 
	`Wrôe
(
sockfd
, 
buff
, 16384);

18 
	`¥ötf
("wrote 16384 bytes ofÇormal data\n");

19 
	`¶ìp
(5);

21 
	`Síd
(
sockfd
, "a", 1, 
MSG_OOB
);

22 
	`¥ötf
("wrote 1 byte of OOB data\n");

24 
	`Wrôe
(
sockfd
, 
buff
, 1024);

25 
	`¥ötf
("wrote 1024 bytes ofÇormal data\n");

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpsend06 <host> <port#>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`Wrôe
(
sockfd
, "123", 3);

14 
	`¥ötf
("wrote 3 bytes ofÇormal data\n");

16 
	`Síd
(
sockfd
, "4", 1, 
MSG_OOB
);

17 
	`¥ötf
("wrote 1 byte of OOB data\n");

19 
	`Wrôe
(
sockfd
, "5", 1);

20 
	`¥ötf
("wrote 1 byte ofÇormal data\n");

22 
	`Síd
(
sockfd
, "6", 1, 
MSG_OOB
);

23 
	`¥ötf
("wrote 1 byte of OOB data\n");

25 
	`Wrôe
(
sockfd
, "7", 1);

26 
	`¥ötf
("wrote 1 byte ofÇormal data\n");

28 
	`exô
(0);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/oob/tcpserv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/bsdping.c

39 #i‚de‡
löt


40 
	gc›yright
[] =

45 #i‚de‡
löt


46 
	gsccsid
[] = "@(#)ping.c 8.1 (Berkeley) 6/5/93";

65 
	~<sys/∑øm.h
>

66 
	~<sys/sockë.h
>

67 
	~<sys/time.h
>

69 
	~<√töë/ö_sy°m.h
>

70 
	~<√töë/ö.h
>

71 
	~<√töë/ù.h
>

72 
	~<√töë/ù_icmp.h
>

73 
	~<√töë/ù_v¨.h
>

74 
	~<¨∑/öë.h
>

75 
	~<√tdb.h
>

77 
	~<˘y≥.h
>

78 
	~<îr.h
>

79 
	~<î∫o.h
>

80 
	~<f˙é.h
>

81 
	~<sig«l.h
>

82 
	~<°dio.h
>

83 
	~<°dlib.h
>

84 
	~<°rög.h
>

85 
	~<uni°d.h
>

87 
	#DEFDATALEN
 (64 - 8Ë

	)

88 
	#MAXIPLEN
 60

	)

89 
	#MAXICMPLEN
 76

	)

90 
	#MAXPACKET
 (65536 - 60 - 8)

	)

91 
	#NROUTES
 9

	)

93 
	#A
(
bô
Ë
rcvd_tbl
[(bô)>>3]

	)

94 
	#B
(
bô
Ë(1 << ((bôË& 0x07)Ë

	)

95 
	#SET
(
bô
Ë(
	`A
(bôË|
	`B
(bô))

	)

96 
	#CLR
(
bô
Ë(
	`A
(bôË&(~
	`B
(bô)))

	)

97 
	#TST
(
bô
Ë(
	`A
(bôË& 
	`B
(bô))

	)

99 
	#F_FLOOD
 0x0001

	)

100 
	#F_INTERVAL
 0x0002

	)

101 
	#F_NUMERIC
 0x0004

	)

102 
	#F_PINGFILLED
 0x0008

	)

103 
	#F_QUIET
 0x0010

	)

104 
	#F_RROUTE
 0x0020

	)

105 
	#F_SO_DEBUG
 0x0040

	)

106 
	#F_SO_DONTROUTE
 0x0080

	)

107 
	#F_VERBOSE
 0x0100

	)

108 
u_öt
 
	g›ti⁄s
;

115 
	#MAX_DUP_CHK
 (8 * 8192)

	)

116 
	gmx_dup_ck
 = 
MAX_DUP_CHK
;

117 
	grcvd_tbl
[
MAX_DUP_CHK
 / 8];

119 
sockaddr
 
	gwhîëo
;

120 
	gd©Æí
 = 
DEFDATALEN
;

121 
	gs
;

122 
u_ch¨
 
	gouçack
[
MAXPACKET
];

123 
	gBSPACE
 = '\b';

124 
	gDOT
 = '.';

125 *
	gho°«me
;

126 
	gidít
;

129 
	g≈ackës
;

130 
	gƒe˚ived
;

131 
	gƒïóts
;

132 
	g¡ønsmôãd
;

133 
	göãrvÆ
 = 1;

136 
	gtimög
;

137 
	gtmö
 = 999999999.0;

138 
	gtmax
 = 0.0;

139 
	gtsum
 = 0.0;

141 
fûl
 
__P
((*, *));

142 
u_sh‹t
 
ö_cksum
 
__P
((u_short *, ));

143 
⁄Ærm
 
__P
(());

144 
⁄öfo
 
__P
(());

145 
⁄öt
 
__P
(());

146 
pögî
 
__P
(());

147 *
¥_addr
 
__P
((
u_l⁄g
));

148 
¥_icmph
 
__P
((
icmp
 *));

149 
¥_ùh
 
__P
((
ù
 *));

150 
¥_∑ck
 
__P
((*, , 
sockaddr_ö
 *));

151 
¥_ªtù
 
__P
((
ù
 *));

152 
summ¨y
 
__P
(());

153 
tvsub
 
__P
((
timevÆ
 *, timeval *));

154 
ußge
 
__P
(());

157 
	$maö
(
¨gc
, 
¨gv
)

158 
¨gc
;

159 *
¨gv
[];

161 
î∫o
, 
›töd
;

162 *
›èrg
;

163 
ho°ít
 *
hp
;

164 
ôimîvÆ
 
ôimî
;

165 
¥Ÿ€¡
 *
¥Ÿo
;

166 
sockaddr_ö
 *
to
, 
‰om
;

167 
timevÆ
 
timeout
;

168 
fd_£t
 
fd£t
;

169 
cc
, 
i
;

170 
ch
, 
‰omÀn
, 
hﬁd
, 
∑ckÀn
, 
¥ñﬂd
;

171 
u_ch¨
 *
d©≠
, *
∑ckë
;

172 *
e
, *
èrgë
, 
h«mebuf
[
MAXHOSTNAMELEN
];

173 #ifde‡
IP_OPTIONS


174 
r•a˚
[3 + 4 * 
NROUTES
 + 1];

177 
¥ñﬂd
 = 0;

178 
d©≠
 = &
ouçack
[8 + (
timevÆ
)];

179 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "c:dfi:l:np:qRrs:v")) != -1)

180 
ch
) {

182 
≈ackës
 = 
	`°πﬁ
(
›èrg
, &
e
, 10);

183 i‡(
≈ackës
 <0 || *
›èrg
 ='\0' || *
e
 != '\0')

184 
	`îrx
(1,

185 "ûÀgÆÇumbî o‡∑ckë†-- %s", 
›èrg
);

188 
›ti⁄s
 |
F_SO_DEBUG
;

191 i‡(
	`gëuid
()) {

192 
î∫o
 = 
EPERM
;

193 
	`îr
(1, 
NULL
);

195 
›ti⁄s
 |
F_FLOOD
;

196 
	`£tbuf
(
°dout
, (*)
NULL
);

199 
öãrvÆ
 = 
	`°πﬁ
(
›èrg
, &
e
, 10);

200 i‡(
öãrvÆ
 <0 || *
›èrg
 ='\0' || *
e
 != '\0')

201 
	`îrx
(1,

202 "ûÀgÆÅimög i¡îvÆ -- %s", 
›èrg
);

203 
›ti⁄s
 |
F_INTERVAL
;

206 
¥ñﬂd
 = 
	`°πﬁ
(
›èrg
, &
e
, 10);

207 i‡(
¥ñﬂd
 < 0 || *
›èrg
 ='\0' || *
e
 != '\0')

208 
	`îrx
(1, "ûÀgÆÖªlﬂd vÆuê-- %s", 
›èrg
);

211 
›ti⁄s
 |
F_NUMERIC
;

214 
›ti⁄s
 |
F_PINGFILLED
;

215 
	`fûl
((*)
d©≠
, 
›èrg
);

218 
›ti⁄s
 |
F_QUIET
;

221 
›ti⁄s
 |
F_RROUTE
;

224 
›ti⁄s
 |
F_SO_DONTROUTE
;

227 
d©Æí
 = 
	`°πﬁ
(
›èrg
, &
e
, 10);

228 i‡(
d©Æí
 <0 || *
›èrg
 ='\0' || *
e
 != '\0')

229 
	`îrx
(1, "ûÀgÆ d©Æí vÆuê-- %s", 
›èrg
);

230 i‡(
d©Æí
 > 
MAXPACKET
)

231 
	`îrx
(1,

233 
MAXPACKET
);

236 
›ti⁄s
 |
F_VERBOSE
;

239 
	`ußge
();

241 
¨gc
 -
›töd
;

242 
¨gv
 +
›töd
;

244 i‡(
¨gc
 != 1)

245 
	`ußge
();

246 
èrgë
 = *
¨gv
;

248 
	`mem£t
(&
whîëo
, 0, (
sockaddr
));

249 
to
 = (
sockaddr_ö
 *)&
whîëo
;

250 
to
->
sö_Ámûy
 = 
AF_INET
;

251 
to
->
sö_addr
.
s_addr
 = 
	`öë_addr
(
èrgë
);

252 i‡(
to
->
sö_addr
.
s_addr
 !(
u_öt
)-1)

253 
ho°«me
 = 
èrgë
;

255 
hp
 = 
	`gëho°by«me
(
èrgë
);

256 i‡(!
hp
)

257 
	`îrx
(1, "unknow¿ho° %s", 
èrgë
);

258 
to
->
sö_Ámûy
 = 
hp
->
h_addπy≥
;

259 
	`memmove
(&
to
->
sö_addr
, 
hp
->
h_addr
, hp->
h_Àngth
);

260 ()
	`°∫˝y
(
h«mebuf
, 
hp
->
h_«me
, (hnamebuf) - 1);

261 
ho°«me
 = 
h«mebuf
;

264 i‡(
›ti⁄s
 & 
F_FLOOD
 && o±i⁄†& 
F_INTERVAL
)

265 
	`îrx
(1, "-fánd -i incompatible options");

267 i‡(
d©Æí
 >(
timevÆ
))

268 
timög
 = 1;

269 
∑ckÀn
 = 
d©Æí
 + 
MAXIPLEN
 + 
MAXICMPLEN
;

270 i‡(!(
∑ckë
 = (
u_ch¨
 *)
	`mÆloc
((
u_öt
)
∑ckÀn
)))

271 
	`îr
(1, 
NULL
);

272 i‡(!(
›ti⁄s
 & 
F_PINGFILLED
))

273 
i
 = 8; i < 
d©Æí
; ++i)

274 *
d©≠
++ = 
i
;

276 
idít
 = 
	`gëpid
() & 0xFFFF;

278 i‡(!(
¥Ÿo
 = 
	`gë¥Ÿoby«me
("icmp")))

279 
	`îrx
(1, "unknownÖrotocol icmp");

280 i‡((
s
 = 
	`sockë
(
AF_INET
, 
SOCK_RAW
, 
¥Ÿo
->
p_¥Ÿo
)) < 0)

281 
	`îr
(1, "socket");

282 
hﬁd
 = 1;

283 i‡(
›ti⁄s
 & 
F_SO_DEBUG
)

284 ()
	`£tsock›t
(
s
, 
SOL_SOCKET
, 
SO_DEBUG
, (*)&
hﬁd
,

285 (
hﬁd
));

286 i‡(
›ti⁄s
 & 
F_SO_DONTROUTE
)

287 ()
	`£tsock›t
(
s
, 
SOL_SOCKET
, 
SO_DONTROUTE
, (*)&
hﬁd
,

288 (
hﬁd
));

291 i‡(
›ti⁄s
 & 
F_RROUTE
) {

292 #ifde‡
IP_OPTIONS


293 
r•a˚
[
IPOPT_OPTVAL
] = 
IPOPT_RR
;

294 
r•a˚
[
IPOPT_OLEN
] = (rspace)-1;

295 
r•a˚
[
IPOPT_OFFSET
] = 
IPOPT_MINOFF
;

296 i‡(
	`£tsock›t
(
s
, 
IPPROTO_IP
, 
IP_OPTIONS
, 
r•a˚
,

297 (
r•a˚
)) < 0)

298 
	`îr
(1, "recordÑoute");

300 
	`îrx
(1, "recordÑouteÇotávailable inÅhis implementation");

310 
hﬁd
 = 48 * 1024;

311 ()
	`£tsock›t
(
s
,

312 
SOL_SOCKET
, 
SO_RCVBUF
, (*)&
hﬁd
, (hold));

314 i‡(
to
->
sö_Ámûy
 =
AF_INET
)

315 ()
	`¥ötf
("PING %†(%s): %d d©®byãs\n", 
ho°«me
,

316 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
to
->
sö_addr
.
s_addr
),

317 
d©Æí
);

319 ()
	`¥ötf
("PING %s: %d d©®byãs\n", 
ho°«me
, 
d©Æí
);

321 
¥ñﬂd
--)

322 
	`pögî
();

324 ()
	`sig«l
(
SIGINT
, 
⁄öt
);

325 ()
	`sig«l
(
SIGINFO
, 
⁄öfo
);

327 i‡((
›ti⁄s
 & 
F_FLOOD
) == 0) {

328 ()
	`sig«l
(
SIGALRM
, 
⁄Ærm
);

329 
ôimî
.
ô_öãrvÆ
.
tv_£c
 = 
öãrvÆ
;

330 
ôimî
.
ô_öãrvÆ
.
tv_u£c
 = 0;

331 
ôimî
.
ô_vÆue
.
tv_£c
 = 0;

332 
ôimî
.
ô_vÆue
.
tv_u£c
 = 1;

333 ()
	`£tôimî
(
ITIMER_REAL
, &
ôimî
, 
NULL
);

336 
	`FD_ZERO
(&
fd£t
);

337 
timeout
.
tv_£c
 = 0;

338 
timeout
.
tv_u£c
 = 10000;

340 i‡(
›ti⁄s
 & 
F_FLOOD
) {

341 
	`pögî
();

342 
	`FD_SET
(
s
, &
fd£t
);

343 i‡(
	`£À˘
(
s
 + 1, &
fd£t
, 
NULL
, NULL, &
timeout
) < 1)

346 
‰omÀn
 = (
‰om
);

347 i‡((
cc
 = 
	`ªcv‰om
(
s
, (*)
∑ckë
, 
∑ckÀn
, 0,

348 (
sockaddr
 *)&
‰om
, &
‰omÀn
)) < 0) {

349 i‡(
î∫o
 =
EINTR
)

351 
	`w¨n
("recvfrom");

354 
	`¥_∑ck
((*)
∑ckë
, 
cc
, &
‰om
);

355 i‡(
≈ackës
 && 
ƒe˚ived
 >=Çpackets)

358 
	`summ¨y
();

359 
	`exô
(
ƒe˚ived
 == 0);

360 
	}
}

367 
	$⁄Ærm
(
signo
)

368 
signo
;

370 
ôimîvÆ
 
ôimî
;

372 i‡(!
≈ackës
 || 
¡ønsmôãd
 <Çpackets) {

373 
	`pögî
();

382 
	#MAXWAIT
 10

	)

383 i‡(
ƒe˚ived
) {

384 
ôimî
.
ô_vÆue
.
tv_£c
 = 2 * 
tmax
 / 1000;

385 i‡(
ôimî
.
ô_vÆue
.
tv_£c
 == 0)

386 
ôimî
.
ô_vÆue
.
tv_£c
 = 1;

388 
ôimî
.
ô_vÆue
.
tv_£c
 = 
MAXWAIT
;

389 
ôimî
.
ô_öãrvÆ
.
tv_£c
 = 0;

390 
ôimî
.
ô_öãrvÆ
.
tv_u£c
 = 0;

391 
ôimî
.
ô_vÆue
.
tv_u£c
 = 0;

393 ()
	`sig«l
(
SIGALRM
, 
⁄öt
);

394 ()
	`£tôimî
(
ITIMER_REAL
, &
ôimî
, 
NULL
);

395 
	}
}

406 
	$pögî
()

408 
icmp
 *
i˝
;

409 
cc
;

410 
i
;

412 
i˝
 = (
icmp
 *)
ouçack
;

413 
i˝
->
icmp_ty≥
 = 
ICMP_ECHO
;

414 
i˝
->
icmp_code
 = 0;

415 
i˝
->
icmp_cksum
 = 0;

416 
i˝
->
icmp_£q
 = 
¡ønsmôãd
++;

417 
i˝
->
icmp_id
 = 
idít
;

419 
	`CLR
(
i˝
->
icmp_£q
 % 
mx_dup_ck
);

421 i‡(
timög
)

422 ()
	`gëtimeofday
((
timevÆ
 *)&
ouçack
[8], 
NULL
);

424 
cc
 = 
d©Æí
 + 8;

427 
i˝
->
icmp_cksum
 = 
	`ö_cksum
((
u_sh‹t
 *)i˝, 
cc
);

429 
i
 = 
	`£ndto
(
s
, (*)
ouçack
, 
cc
, 0, &
whîëo
,

430 (
sockaddr
));

432 i‡(
i
 < 0 || i !
cc
) {

433 i‡(
i
 < 0)

434 
	`w¨n
("sendto");

435 ()
	`¥ötf
("ping: wrote %s %d chars,Ñet=%d\n",

436 
ho°«me
, 
cc
, 
i
);

438 i‡(!(
›ti⁄s
 & 
F_QUIET
Ë&& o±i⁄†& 
F_FLOOD
)

439 ()
	`wrôe
(
STDOUT_FILENO
, &
DOT
, 1);

440 
	}
}

450 
	$¥_∑ck
(
buf
, 
cc
, 
‰om
)

451 *
buf
;

452 
cc
;

453 
sockaddr_ö
 *
‰om
;

455 
icmp
 *
i˝
;

456 
u_l⁄g
 
l
;

457 
i
, 
j
;

458 
u_ch¨
 *
˝
,*
dp
;

459 
ﬁd_ºÀn
;

460 
ﬁd_º
[
MAX_IPOPTLEN
];

461 
ù
 *ip;

462 
timevÆ
 
tv
, *
ç
;

463 
åùtime
;

464 
hÀn
, 
dupÊag
;

466 ()
	`gëtimeofday
(&
tv
, 
NULL
);

469 
ù
 = (ù *)
buf
;

470 
hÀn
 = 
ù
->
ù_hl
 << 2;

471 i‡(
cc
 < 
hÀn
 + 
ICMP_MINLEN
) {

472 i‡(
›ti⁄s
 & 
F_VERBOSE
)

473 
	`w¨nx
("∑ckëÅoÿsh‹à(%d byãsË‰om %s\n", 
cc
,

474 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
‰om
->
sö_addr
.
s_addr
));

479 
cc
 -
hÀn
;

480 
i˝
 = (
icmp
 *)(
buf
 + 
hÀn
);

481 i‡(
i˝
->
icmp_ty≥
 =
ICMP_ECHOREPLY
) {

482 i‡(
i˝
->
icmp_id
 !
idít
)

484 ++
ƒe˚ived
;

485 i‡(
timög
) {

486 #i‚de‡
icmp_d©a


487 
ç
 = (
timevÆ
 *)&
i˝
->
icmp_ù
;

489 
ç
 = (
timevÆ
 *)
i˝
->
icmp_d©a
;

491 
	`tvsub
(&
tv
, 
ç
);

492 
åùtime
 = (()
tv
.
tv_£c
) * 1000.0 +

493 (()
tv
.
tv_u£c
) / 1000.0;

494 
tsum
 +
åùtime
;

495 i‡(
åùtime
 < 
tmö
)

496 
tmö
 = 
åùtime
;

497 i‡(
åùtime
 > 
tmax
)

498 
tmax
 = 
åùtime
;

501 i‡(
	`TST
(
i˝
->
icmp_£q
 % 
mx_dup_ck
)) {

502 ++
ƒïóts
;

503 --
ƒe˚ived
;

504 
dupÊag
 = 1;

506 
	`SET
(
i˝
->
icmp_£q
 % 
mx_dup_ck
);

507 
dupÊag
 = 0;

510 i‡(
›ti⁄s
 & 
F_QUIET
)

513 i‡(
›ti⁄s
 & 
F_FLOOD
)

514 ()
	`wrôe
(
STDOUT_FILENO
, &
BSPACE
, 1);

516 ()
	`¥ötf
("%d byã†‰om %s: icmp_£q=%u", 
cc
,

517 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
‰om
->
sö_addr
.
s_addr
),

518 
i˝
->
icmp_£q
);

519 ()
	`¥ötf
("Åé=%d", 
ù
->
ù_âl
);

520 i‡(
timög
)

521 ()
	`¥ötf
("Åime=%g ms", 
åùtime
);

522 i‡(
dupÊag
)

523 ()
	`¥ötf
(" (DUP!)");

525 
˝
 = (
u_ch¨
*)&
i˝
->
icmp_d©a
[8];

526 
dp
 = &
ouçack
[8 + (
timevÆ
)];

527 
i
 = 8; i < 
d©Æí
; ++i, ++
˝
, ++
dp
) {

528 i‡(*
˝
 !*
dp
) {

529 ()
	`¥ötf
("\nwrong data byte #%d should be 0x%x but was 0x%x",

530 
i
, *
dp
, *
˝
);

531 
˝
 = (
u_ch¨
*)&
i˝
->
icmp_d©a
[0];

532 
i
 = 8; i < 
d©Æí
; ++i, ++
˝
) {

533 i‡((
i
 % 32) == 8)

534 ()
	`¥ötf
("\n\t");

535 ()
	`¥ötf
("%x ", *
˝
);

543 i‡(!(
›ti⁄s
 & 
F_VERBOSE
))

545 ()
	`¥ötf
("%d byã†‰om %s: ", 
cc
,

546 
	`¥_addr
(
‰om
->
sö_addr
.
s_addr
));

547 
	`¥_icmph
(
i˝
);

551 
˝
 = (
u_ch¨
 *)
buf
 + (
ù
);

553 ; 
hÀn
 > ()(
ù
); --hÀn, ++
˝
)

554 *
˝
) {

555 
IPOPT_EOL
:

556 
hÀn
 = 0;

558 
IPOPT_LSRR
:

559 ()
	`¥ötf
("\nLSRR: ");

560 
hÀn
 -= 2;

561 
j
 = *++
˝
;

562 ++
˝
;

563 i‡(
j
 > 
IPOPT_MINOFF
)

565 
l
 = *++
˝
;

566 
l
 = (l<<8Ë+ *++
˝
;

567 
l
 = (l<<8Ë+ *++
˝
;

568 
l
 = (l<<8Ë+ *++
˝
;

569 i‡(
l
 == 0)

570 ()
	`¥ötf
("\t0.0.0.0");

572 ()
	`¥ötf
("\t%s", 
	`¥_addr
(
	`¡ohl
(
l
)));

573 
hÀn
 -= 4;

574 
j
 -= 4;

575 i‡(
j
 <
IPOPT_MINOFF
)

577 ()
	`putch¨
('\n');

580 
IPOPT_RR
:

581 
j
 = *++
˝
;

582 
i
 = *++
˝
;

583 
hÀn
 -= 2;

584 i‡(
i
 > 
j
)

585 
i
 = 
j
;

586 
i
 -
IPOPT_MINOFF
;

587 i‡(
i
 <= 0)

589 i‡(
i
 =
ﬁd_ºÀn


590 && 
˝
 =(
u_ch¨
 *)
buf
 + (
ù
) + 2

591 && !
	`memcmp
((*)
˝
, 
ﬁd_º
, 
i
)

592 && !(
›ti⁄s
 & 
F_FLOOD
)) {

593 ()
	`¥ötf
("\t(sameÑoute)");

594 
i
 = ((i + 3) / 4) * 4;

595 
hÀn
 -
i
;

596 
˝
 +
i
;

599 
ﬁd_ºÀn
 = 
i
;

600 
	`memmove
(
ﬁd_º
, 
˝
, 
i
);

601 ()
	`¥ötf
("\nRR: ");

603 
l
 = *++
˝
;

604 
l
 = (l<<8Ë+ *++
˝
;

605 
l
 = (l<<8Ë+ *++
˝
;

606 
l
 = (l<<8Ë+ *++
˝
;

607 i‡(
l
 == 0)

608 ()
	`¥ötf
("\t0.0.0.0");

610 ()
	`¥ötf
("\t%s", 
	`¥_addr
(
	`¡ohl
(
l
)));

611 
hÀn
 -= 4;

612 
i
 -= 4;

613 i‡(
i
 <= 0)

615 ()
	`putch¨
('\n');

618 
IPOPT_NOP
:

619 ()
	`¥ötf
("\nNOP");

622 ()
	`¥ötf
("\nunknow¿›ti⁄ %x", *
˝
);

625 i‡(!(
›ti⁄s
 & 
F_FLOOD
)) {

626 ()
	`putch¨
('\n');

627 ()
	`fÊush
(
°dout
);

629 
	}
}

635 
u_sh‹t


636 
	$ö_cksum
(
addr
, 
Àn
)

637 
u_sh‹t
 *
addr
;

638 
Àn
;

640 
∆e·
 = 
Àn
;

641 
u_sh‹t
 *
w
 = 
addr
;

642 
sum
 = 0;

643 
u_sh‹t
 
™swî
 = 0;

650 
∆e·
 > 1) {

651 
sum
 +*
w
++;

652 
∆e·
 -= 2;

656 i‡(
∆e·
 == 1) {

657 *(
u_ch¨
 *)(&
™swî
Ë*(u_ch¨ *)
w
 ;

658 
sum
 +
™swî
;

662 
sum
 = (sum >> 16) + (sum & 0xffff);

663 
sum
 += (sum >> 16);

664 
™swî
 = ~
sum
;

665  (
™swî
);

666 
	}
}

674 
	$tvsub
(
out
, 
ö
)

675 
timevÆ
 *
out
, *
ö
;

677 i‡((
out
->
tv_u£c
 -
ö
->tv_usec) < 0) {

678 --
out
->
tv_£c
;

679 
out
->
tv_u£c
 += 1000000;

681 
out
->
tv_£c
 -
ö
->tv_sec;

682 
	}
}

689 
	$⁄öfo
(
nŸu£d
)

690 
nŸu£d
;

692 
	`summ¨y
();

693 
	}
}

700 
	$⁄öt
(
nŸu£d
)

701 
nŸu£d
;

703 
	`summ¨y
();

705 ()
	`sig«l
(
SIGINT
, 
SIG_DFL
);

706 ()
	`kûl
(
	`gëpid
(), 
SIGINT
);

709 
	`exô
(1);

710 
	}
}

717 
	$summ¨y
()

719 
i
;

721 ()
	`¥ötf
("\n--- %†pög sèti°ic†---\n", 
ho°«me
);

722 ()
	`¥ötf
("%ldÖackë†å™smôãd, ", 
¡ønsmôãd
);

723 ()
	`¥ötf
("%ldÖackë†ª˚ived, ", 
ƒe˚ived
);

724 i‡(
ƒïóts
)

725 ()
	`¥ötf
("+%ld du∂iˇãs, ", 
ƒïóts
);

726 i‡(
¡ønsmôãd
)

727 i‡(
ƒe˚ived
 > 
¡ønsmôãd
)

728 ()
	`¥ötf
("-- somebody'sÖrinting upÖackets!");

730 ()
	`¥ötf
("%d%%ÖacketÜoss",

731 (Ë(((
¡ønsmôãd
 - 
ƒe˚ived
) * 100) /

732 
¡ønsmôãd
));

733 ()
	`putch¨
('\n');

734 i‡(
ƒe˚ived
 && 
timög
) {

736 
i
 = 1000.0 * 
tsum
 / (
ƒe˚ived
 + 
ƒïóts
);

737 ()
	`¥ötf
("round-trip min/avg/max = %g/%g/%g ms\n",

738 
tmö
, (()
i
Ë/ 1000.0, 
tmax
);

740 
	}
}

742 #ifde‡
nŸdef


743 *
	gâab
[] = {

763 
	$¥_icmph
(
i˝
)

764 
icmp
 *
i˝
;

766 
i˝
->
icmp_ty≥
) {

767 
ICMP_ECHOREPLY
:

768 ()
	`¥ötf
("Echo Reply\n");

771 
ICMP_UNREACH
:

772 
i˝
->
icmp_code
) {

773 
ICMP_UNREACH_NET
:

774 ()
	`¥ötf
("Destination Net Unreachable\n");

776 
ICMP_UNREACH_HOST
:

777 ()
	`¥ötf
("Destination Host Unreachable\n");

779 
ICMP_UNREACH_PROTOCOL
:

780 ()
	`¥ötf
("Destination Protocol Unreachable\n");

782 
ICMP_UNREACH_PORT
:

783 ()
	`¥ötf
("Destination Port Unreachable\n");

785 
ICMP_UNREACH_NEEDFRAG
:

786 ()
	`¥ötf
("fragÇeededánd DF set\n");

788 
ICMP_UNREACH_SRCFAIL
:

789 ()
	`¥ötf
("Source Route Failed\n");

792 ()
	`¥ötf
("Dest Unreachable, Bad Code: %d\n",

793 
i˝
->
icmp_code
);

797 #i‚de‡
icmp_d©a


798 
	`¥_ªtù
(&
i˝
->
icmp_ù
);

800 
	`¥_ªtù
((
ù
 *)
i˝
->
icmp_d©a
);

803 
ICMP_SOURCEQUENCH
:

804 ()
	`¥ötf
("Source Quench\n");

805 #i‚de‡
icmp_d©a


806 
	`¥_ªtù
(&
i˝
->
icmp_ù
);

808 
	`¥_ªtù
((
ù
 *)
i˝
->
icmp_d©a
);

811 
ICMP_REDIRECT
:

812 
i˝
->
icmp_code
) {

813 
ICMP_REDIRECT_NET
:

814 ()
	`¥ötf
("Redirect Network");

816 
ICMP_REDIRECT_HOST
:

817 ()
	`¥ötf
("Redirect Host");

819 
ICMP_REDIRECT_TOSNET
:

820 ()
	`¥ötf
("Redirect Type of Serviceánd Network");

822 
ICMP_REDIRECT_TOSHOST
:

823 ()
	`¥ötf
("Redirect Type of Serviceánd Host");

826 ()
	`¥ötf
("Redúe˘, Bad Code: %d", 
i˝
->
icmp_code
);

829 ()
	`¥ötf
("(Newáddr: 0x%08lx)\n", 
i˝
->
icmp_gwaddr
.
s_addr
);

830 #i‚de‡
icmp_d©a


831 
	`¥_ªtù
(&
i˝
->
icmp_ù
);

833 
	`¥_ªtù
((
ù
 *)
i˝
->
icmp_d©a
);

836 
ICMP_ECHO
:

837 ()
	`¥ötf
("Echo Request\n");

840 
ICMP_TIMXCEED
:

841 
i˝
->
icmp_code
) {

842 
ICMP_TIMXCEED_INTRANS
:

843 ()
	`¥ötf
("TimeÅoÜiveÉxceeded\n");

845 
ICMP_TIMXCEED_REASS
:

846 ()
	`¥ötf
("FragÑeassemblyÅimeÉxceeded\n");

849 ()
	`¥ötf
("TimeÉxceeded, Bad Code: %d\n",

850 
i˝
->
icmp_code
);

853 #i‚de‡
icmp_d©a


854 
	`¥_ªtù
(&
i˝
->
icmp_ù
);

856 
	`¥_ªtù
((
ù
 *)
i˝
->
icmp_d©a
);

859 
ICMP_PARAMPROB
:

860 ()
	`¥ötf
("ParameterÖroblem:Öointer = 0x%02x\n",

861 
i˝
->
icmp_hun
.
ih_µå
);

862 #i‚de‡
icmp_d©a


863 
	`¥_ªtù
(&
i˝
->
icmp_ù
);

865 
	`¥_ªtù
((
ù
 *)
i˝
->
icmp_d©a
);

868 
ICMP_TSTAMP
:

869 ()
	`¥ötf
("Timestamp\n");

872 
ICMP_TSTAMPREPLY
:

873 ()
	`¥ötf
("Timestamp Reply\n");

876 
ICMP_IREQ
:

877 ()
	`¥ötf
("Information Request\n");

880 
ICMP_IREQREPLY
:

881 ()
	`¥ötf
("Information Reply\n");

884 #ifde‡
ICMP_MASKREQ


885 
ICMP_MASKREQ
:

886 ()
	`¥ötf
("Address Mask Request\n");

889 #ifde‡
ICMP_MASKREPLY


890 
ICMP_MASKREPLY
:

891 ()
	`¥ötf
("Address Mask Reply\n");

895 ()
	`¥ötf
("Bad ICMPÅy≥: %d\n", 
i˝
->
icmp_ty≥
);

897 
	}
}

904 
	$¥_ùh
(
ù
)

905 
ù
 *ip;

907 
hÀn
;

908 
u_ch¨
 *
˝
;

910 
hÀn
 = 
ù
->
ù_hl
 << 2;

911 
˝
 = (
u_ch¨
 *)
ù
 + 20;

913 ()
	`¥ötf
("Vr HL TOS Len ID Flg off TTL Pro cks Src Dst Data\n");

914 ()
	`¥ötf
(" %1x %1x %02x %04x %04x",

915 
ù
->
ù_v
, ip->
ù_hl
, ip->
ù_tos
, ip->
ù_Àn
, ip->
ù_id
);

916 ()
	`¥ötf
(" %1x %04x", ((
ù
->
ù_off
) & 0xe000) >> 13,

917 (
ù
->
ù_off
) & 0x1fff);

918 ()
	`¥ötf
(" %02x %02x %04x", 
ù
->
ù_âl
, ip->
ù_p
, ip->
ù_sum
);

919 ()
	`¥ötf
(" %†", 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
ù
->
ù_§c
.
s_addr
));

920 ()
	`¥ötf
(" %†", 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
ù
->
ù_d°
.
s_addr
));

922 
hÀn
-- > 20)

923 ()
	`¥ötf
("%02x", *
˝
++);

924 ()
	`putch¨
('\n');

925 
	}
}

933 
	$¥_addr
(
l
)

934 
u_l⁄g
 
l
;

936 
ho°ít
 *
hp
;

937 
buf
[80];

939 i‡((
›ti⁄s
 & 
F_NUMERIC
) ||

940 !(
hp
 = 
	`gëho°byaddr
((*)&
l
, 4, 
AF_INET
)))

941 ()
	`•rötf
(
buf
, "%s", 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
l
));

943 ()
	`¢¥ötf
(
buf
, (buf),

944 "%†(%s)", 
hp
->
h_«me
, 
	`öë_¡ﬂ
(*(
ö_addr
 *)&
l
));

945  (
buf
);

946 
	}
}

953 
	$¥_ªtù
(
ù
)

954 
ù
 *ip;

956 
hÀn
;

957 
u_ch¨
 *
˝
;

959 
	`¥_ùh
(
ù
);

960 
hÀn
 = 
ù
->
ù_hl
 << 2;

961 
˝
 = (
u_ch¨
 *)
ù
 + 
hÀn
;

963 i‡(
ù
->
ù_p
 == 6)

964 ()
	`¥ötf
("TCP: fromÖort %u,ÅoÖort %u (decimal)\n",

965 (*
˝
 * 256 + *(cp + 1)), (*(cp + 2) * 256 + *(cp + 3)));

966 i‡(
ù
->
ù_p
 == 17)

967 ()
	`¥ötf
("UDP: fromÖort %u,ÅoÖort %u (decimal)\n",

968 (*
˝
 * 256 + *(cp + 1)), (*(cp + 2) * 256 + *(cp + 3)));

969 
	}
}

972 
	$fûl
(
bp
, 
∑ç
)

973 *
bp
, *
∑ç
;

975 
ii
, 
jj
, 
kk
;

976 
∑t
[16];

977 *
˝
;

979 
˝
 = 
∑ç
; *cp; cp++)

980 i‡(!
	`isxdigô
(*
˝
))

981 
	`îrx
(1, "patterns must be specifiedás hex digits");

982 
ii
 = 
	`ssˇnf
(
∑ç
,

984 &
∑t
[0], &pat[1], &pat[2], &pat[3], &pat[4], &pat[5], &pat[6],

985 &
∑t
[7], &pat[8], &pat[9], &pat[10], &pat[11], &pat[12],

986 &
∑t
[13], &pat[14], &pat[15]);

988 i‡(
ii
 > 0)

989 
kk
 = 0;

990 
kk
 <
MAXPACKET
 - (8 + (
timevÆ
Ë+ 
ii
);

991 
kk
 +
ii
)

992 
jj
 = 0; jj < 
ii
; ++jj)

993 
bp
[
jj
 + 
kk
] = 
∑t
[jj];

994 i‡(!(
›ti⁄s
 & 
F_QUIET
)) {

995 ()
	`¥ötf
("PATTERN: 0x");

996 
jj
 = 0; jj < 
ii
; ++jj)

997 ()
	`¥ötf
("%02x", 
bp
[
jj
] & 0xFF);

998 ()
	`¥ötf
("\n");

1000 
	}
}

1003 
	$ußge
()

1005 ()
	`Ârötf
(
°dîr
,

1008 
	`exô
(1);

1009 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/init_v6.c

1 
	~"pög.h
"

4 
	$öô_v6
()

6 #ifde‡
IPV6


7 
⁄
 = 1;

9 i‡(
vîbo£
 == 0) {

11 
icmp6_fûãr
 
myfût
;

12 
	`ICMP6_FILTER_SETBLOCKALL
(&
myfût
);

13 
	`ICMP6_FILTER_SETPASS
(
ICMP6_ECHO_REPLY
, &
myfût
);

14 
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
ICMP6_FILTER
, &
myfût
, (myfilt));

19 #ifde‡
IPV6_RECVHOPLIMIT


21 
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_RECVHOPLIMIT
, &
⁄
, (on));

24 
	`£tsock›t
(
sockfd
, 
IPPROTO_IPV6
, 
IPV6_HOPLIMIT
, &
⁄
, (on));

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/main.c

1 
	~"pög.h
"

3 
¥Ÿo
 
	g¥Ÿo_v4
 = { 
¥oc_v4
, 
£nd_v4
, 
NULL
, NULL, NULL, 0, 
IPPROTO_ICMP
 };

5 #ifdef 
IPV6


6 
¥Ÿo
 
	g¥Ÿo_v6
 = { 
¥oc_v6
, 
£nd_v6
, 
öô_v6
, 
NULL
, NULL, 0, 
IPPROTO_ICMPV6
 };

9 
	gd©Æí
 = 56;

12 
	$maö
(
¨gc
, **
¨gv
)

14 
c
;

15 
addröfo
 *
ai
;

16 *
h
;

18 
›ãº
 = 0;

19  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "v")) != -1) {

20 
c
) {

22 
vîbo£
++;

26 
	`îr_quô
("uƒecognized o±i⁄: %c", 
c
);

30 i‡(
›töd
 !
¨gc
-1)

31 
	`îr_quô
("usage:Öing [ -v ] <hostname>");

32 
ho°
 = 
¨gv
[
›töd
];

34 
pid
 = 
	`gëpid
() & 0xffff;

35 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

37 
ai
 = 
	`Ho°_£rv
(
ho°
, 
NULL
, 0, 0);

39 
h
 = 
	`Sock_¡›_ho°
(
ai
->
ai_addr
,ái->
ai_addæí
);

40 
	`¥ötf
("PING %s (%s): %d data bytes\n",

41 
ai
->
ai_ˇn⁄«me
 ?ái->ai_ˇn⁄«mê: 
h
,

42 
h
, 
d©Æí
);

45 i‡(
ai
->
ai_Ámûy
 =
AF_INET
) {

46 
¥
 = &
¥Ÿo_v4
;

47 #ifdef 
IPV6


48 } i‡(
ai
->
ai_Ámûy
 =
AF_INET6
) {

49 
¥
 = &
¥Ÿo_v6
;

50 i‡(
	`IN6_IS_ADDR_V4MAPPED
(&(((
sockaddr_ö6
 *)

51 
ai
->
ai_addr
)->
sö6_addr
)))

52 
	`îr_quô
("cannotÖing IPv4-mapped IPv6áddress");

55 
	`îr_quô
("unknow¿addªs†Ámûy %d", 
ai
->
ai_Ámûy
);

57 
¥
->
ß£nd
 = 
ai
->
ai_addr
;

58 
¥
->
ßªcv
 = 
	`CÆloc
(1, 
ai
->
ai_addæí
);

59 
¥
->
ßÀn
 = 
ai
->
ai_addæí
;

61 
	`ªadlo›
();

63 
	`exô
(0);

64 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/old/icmp6.h

1 
	sicmp6hdr
 {

2 
u_öt8_t
 
	micmp6_ty≥
;

3 
u_öt8_t
 
	micmp6_code
;

4 
u_öt16_t
 
	micmp6_cksum
;

6 
u_öt32_t
 
	mun_d©a32
[1];

7 
u_öt16_t
 
	mun_d©a16
[2];

8 
u_öt8_t
 
	mun_d©a8
[4];

9 } 
	micmp6_d©aun
;

12 
	#icmp6_d©a32
 
icmp6_d©aun
.
un_d©a32


	)

13 
	#icmp6_d©a16
 
icmp6_d©aun
.
un_d©a16


	)

14 
	#icmp6_d©a8
 
icmp6_d©aun
.
un_d©a8


	)

15 
	#icmp6_µå
 
icmp6_d©a32
[0]

	)

16 
	#icmp6_mtu
 
icmp6_d©a32
[0]

	)

17 
	#icmp6_id
 
icmp6_d©a16
[0]

	)

18 
	#icmp6_£q
 
icmp6_d©a16
[1]

	)

19 
	#icmp6_maxdñay
 
icmp6_d©a16
[0]

	)

21 
	#ICMPV6_DEST_UNREACH
 1

	)

22 
	#ICMPV6_PKT_TOOBIG
 2

	)

23 
	#ICMPV6_TIME_EXCEED
 3

	)

24 
	#ICMPV6_PARAMPROB
 4

	)

26 
	#ICMPV6_INFOMSG_MASK
 0x80

	)

28 
	#ICMPV6_ECHORQST
 128

	)

29 
	#ICMPV6_ECHORPLY
 129

	)

30 
	#ICMPV6_MGM_QUERY
 130

	)

31 
	#ICMPV6_MGM_REPORT
 131

	)

32 
	#ICMPV6_MGM_REDUCTION
 132

	)

34 
	#ICMPV6_DEST_UNREACH_NOROUTE
 0

	)

35 
	#ICMPV6_DEST_UNREACH_ADMIN
 1

	)

37 
	#ICMPV6_DEST_UNREACH_NOTNEIGHBOR
 2

	)

38 
	#ICMPV6_DEST_UNREACH_ADDR
 3

	)

39 
	#ICMPV6_DEST_UNREACH_NOPORT
 4

	)

41 
	#ICMPV6_TIME_EXCEED_HOPS
 0

	)

42 
	#ICMPV6_TIME_EXCEED_REASSEMBLY
 1

	)

44 
	#ICMPV6_PARAMPROB_HDR
 0

	)

45 
	#ICMPV6_PARAMPROB_NXT_HDR
 1

	)

46 
	#ICMPV6_PARAMPROB_OPTS
 2

	)

	@/media/sf_ddrive/progs/network/unpv13e/ping/old/ip6.h

1 
	sù6hdr
 {

3 
	sù6hdr˘l
 {

4 
u_öt32_t
 
	m˘l6_Êow
;

5 
u_öt16_t
 
	m˘l6_∂í
;

6 
u_öt8_t
 
	m˘l6_nxt
;

7 
u_öt8_t
 
	m˘l6_hlim
;

8 } 
	mun_˘l6
;

9 
u_öt8_t
 
	mun_vfc
;

10 } 
	mù6_˘lun
;

11 
ö6_addr
 
	mù6_§c
;

12 
ö6_addr
 
	mù6_d°
;

15 
	#ù6_vfc
 
ù6_˘lun
.
un_vfc


	)

16 
	#ù6_Êow
 
ù6_˘lun
.
un_˘l6
.
˘l6_Êow


	)

17 
	#ù6_∂í
 
ù6_˘lun
.
un_˘l6
.
˘l6_∂í


	)

18 
	#ù6_nxt
 
ù6_˘lun
.
un_˘l6
.
˘l6_nxt


	)

19 
	#ù6_hlim
 
ù6_˘lun
.
un_˘l6
.
˘l6_hlim


	)

20 
	#ù6_h›s
 
ù6_˘lun
.
un_˘l6
.
˘l6_hlim


	)

	@/media/sf_ddrive/progs/network/unpv13e/ping/ping.h

1 
	~"u≈.h
"

2 
	~<√töë/ö_sy°m.h
>

3 
	~<√töë/ù.h
>

4 
	~<√töë/ù_icmp.h
>

6 
	#BUFSIZE
 1500

	)

9 
	g£ndbuf
[
BUFSIZE
];

11 
	gd©Æí
;

12 *
	gho°
;

13 
	gn£¡
;

14 
pid_t
 
	gpid
;

15 
	gsockfd
;

16 
	gvîbo£
;

19 
öô_v6
();

20 
¥oc_v4
(*, 
ssize_t
, 
msghdr
 *, 
timevÆ
 *);

21 
¥oc_v6
(*, 
ssize_t
, 
msghdr
 *, 
timevÆ
 *);

22 
£nd_v4
();

23 
£nd_v6
();

24 
ªadlo›
();

25 
sig_Ærm
();

26 
tv_sub
(
timevÆ
 *, timeval *);

28 
	s¥Ÿo
 {

29 (*
	mÂroc
)(*, 
	mssize_t
, 
	mmsghdr
 *, 
	mtimevÆ
 *);

30 (*
	mf£nd
)();

31 (*
	mföô
)();

32 
sockaddr
 *
	mß£nd
;

33 
sockaddr
 *
	mßªcv
;

34 
sockÀn_t
 
	mßÀn
;

35 
	micmµrŸo
;

36 } *
	g¥
;

38 #ifdef 
IPV6


40 
	~<√töë/ù6.h
>

41 
	~<√töë/icmp6.h
>

	@/media/sf_ddrive/progs/network/unpv13e/ping/ping_v4.c

1 
	~"pög.h
"

4 
	$pög_v4
(
ho°ít
 *
h±r
)

6 
size
;

7 
ªcvbuf
[
BUFSIZE
];

8 
sockÀn_t
 
Àn
;

9 
ssize_t
 
n
;

10 
timevÆ
 
tvÆ
;

12 
	`£tuid
(
	`gëuid
());

14 
size
 = 60 * 1024;

15 
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, (size));

18 
	`sig_Ærm
(
SIGALRM
);

21 
Àn
 = 
ßÀn
;

22 
n
 = 
	`ªcv‰om
(
sockfd
, 
ªcvbuf
, ‘ecvbuf), 0, 
ßªcv
, &
Àn
);

23 i‡(
n
 < 0) {

24 i‡(
î∫o
 =
EINTR
)

27 
	`îr_sys
("recvfromÉrror");

30 
	`Gëtimeofday
(&
tvÆ
, 
NULL
);

31 (*
Âås
.
¥oc_f
)(
ªcvbuf
, 
n
, &
tvÆ
);

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/proc_v4.c

1 
	~"pög.h
"

4 
	$¥oc_v4
(*
±r
, 
ssize_t
 
Àn
, 
msghdr
 *
msg
, 
timevÆ
 *
tvªcv
)

6 
hÀn1
, 
icm∂í
;

7 
πt
;

8 
ù
 *ip;

9 
icmp
 *icmp;

10 
timevÆ
 *
tv£nd
;

12 
ù
 = (ù *Ë
±r
;

13 
hÀn1
 = 
ù
->
ù_hl
 << 2;

14 i‡(
ù
->
ù_p
 !
IPPROTO_ICMP
)

17 
icmp
 = (icm∞*Ë(
±r
 + 
hÀn1
);

18 i‡–(
icm∂í
 = 
Àn
 - 
hÀn1
) < 8)

21 i‡(
icmp
->
icmp_ty≥
 =
ICMP_ECHOREPLY
) {

22 i‡(
icmp
->
icmp_id
 !
pid
)

24 i‡(
icm∂í
 < 16)

27 
tv£nd
 = (
timevÆ
 *Ë
icmp
->
icmp_d©a
;

28 
	`tv_sub
(
tvªcv
, 
tv£nd
);

29 
πt
 = 
tvªcv
->
tv_£c
 * 1000.0 +Åvªcv->
tv_u£c
 / 1000.0;

31 
	`¥ötf
("%d bytes from %s: seq=%u,Åtl=%d,Ñtt=%.3f ms\n",

32 
icm∂í
, 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

33 
icmp
->
icmp_£q
, 
ù
->
ù_âl
, 
πt
);

35 } i‡(
vîbo£
) {

36 
	`¥ötf
(" %d bytes from %s:Åype = %d, code = %d\n",

37 
icm∂í
, 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

38 
icmp
->
icmp_ty≥
, icmp->
icmp_code
);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/proc_v6.c

1 
	~"pög.h
"

4 
	$¥oc_v6
(*
±r
, 
ssize_t
 
Àn
, 
msghdr
 *
msg
, 
timevÆ
* 
tvªcv
)

6 #ifdef 
IPV6


7 
πt
;

8 
icmp6_hdr
 *
icmp6
;

9 
timevÆ
 *
tv£nd
;

10 
cmsghdr
 *
cmsg
;

11 
hlim
;

13 
icmp6
 = (
icmp6_hdr
 *Ë
±r
;

14 i‡(
Àn
 < 8)

17 i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_ECHO_REPLY
) {

18 i‡(
icmp6
->
icmp6_id
 !
pid
)

20 i‡(
Àn
 < 16)

23 
tv£nd
 = (
timevÆ
 *Ë(
icmp6
 + 1);

24 
	`tv_sub
(
tvªcv
, 
tv£nd
);

25 
πt
 = 
tvªcv
->
tv_£c
 * 1000.0 +Åvªcv->
tv_u£c
 / 1000.0;

27 
hlim
 = -1;

28 
cmsg
 = 
	`CMSG_FIRSTHDR
(
msg
); cmsg !
NULL
; cmsg = 
	`CMSG_NXTHDR
(msg, cmsg)) {

29 i‡(
cmsg
->
cmsg_Àvñ
 =
IPPROTO_IPV6
 &&

30 
cmsg
->
cmsg_ty≥
 =
IPV6_HOPLIMIT
) {

31 
hlim
 = *(
u_öt32_t
 *)
	`CMSG_DATA
(
cmsg
);

35 
	`¥ötf
("%d bytes from %s: seq=%u, hlim=",

36 
Àn
, 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

37 
icmp6
->
icmp6_£q
);

38 i‡(
hlim
 == -1)

39 
	`¥ötf
("???");

41 
	`¥ötf
("%d", 
hlim
);

42 
	`¥ötf
(",Ñâ=%.3‡ms\n", 
πt
);

43 } i‡(
vîbo£
) {

44 
	`¥ötf
(" %d bytes from %s:Åype = %d, code = %d\n",

45 
Àn
, 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

46 
icmp6
->
icmp6_ty≥
, icmp6->
icmp6_code
);

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/readloop.c

1 
	~"pög.h
"

4 
	$ªadlo›
()

6 
size
;

7 
ªcvbuf
[
BUFSIZE
];

8 
c⁄åﬁbuf
[
BUFSIZE
];

9 
msghdr
 
msg
;

10 
iovec
 
iov
;

11 
ssize_t
 
n
;

12 
timevÆ
 
tvÆ
;

14 
sockfd
 = 
	`Sockë
(
¥
->
ß£nd
->
ß_Ámûy
, 
SOCK_RAW
,Ör->
icmµrŸo
);

15 
	`£tuid
(
	`gëuid
());

16 i‡(
¥
->
föô
)

17 (*
¥
->
föô
)();

19 
size
 = 60 * 1024;

20 
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, (size));

22 
	`sig_Ærm
(
SIGALRM
);

24 
iov
.
iov_ba£
 = 
ªcvbuf
;

25 
iov
.
iov_Àn
 = (
ªcvbuf
);

26 
msg
.
msg_«me
 = 
¥
->
ßªcv
;

27 
msg
.
msg_iov
 = &
iov
;

28 
msg
.
msg_iovÀn
 = 1;

29 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁbuf
;

31 
msg
.
msg_«mñí
 = 
¥
->
ßÀn
;

32 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁbuf
);

33 
n
 = 
	`ªcvmsg
(
sockfd
, &
msg
, 0);

34 i‡(
n
 < 0) {

35 i‡(
î∫o
 =
EINTR
)

38 
	`îr_sys
("recvmsgÉrror");

41 
	`Gëtimeofday
(&
tvÆ
, 
NULL
);

42 (*
¥
->
Âroc
)(
ªcvbuf
, 
n
, &
msg
, &
tvÆ
);

44 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/send_v4.c

1 
	~"pög.h
"

4 
	$£nd_v4
()

6 
Àn
;

7 
icmp
 *icmp;

9 
icmp
 = (icm∞*Ë
£ndbuf
;

10 
icmp
->
icmp_ty≥
 = 
ICMP_ECHO
;

11 
icmp
->
icmp_code
 = 0;

12 
icmp
->
icmp_id
 = 
pid
;

13 
icmp
->
icmp_£q
 = 
n£¡
++;

14 
	`mem£t
(
icmp
->
icmp_d©a
, 0xa5, 
d©Æí
);

15 
	`Gëtimeofday
((
timevÆ
 *Ë
icmp
->
icmp_d©a
, 
NULL
);

17 
Àn
 = 8 + 
d©Æí
;

18 
icmp
->
icmp_cksum
 = 0;

19 
icmp
->
icmp_cksum
 = 
	`ö_cksum
((
u_sh‹t
 *Ëicmp, 
Àn
);

21 
	`Sídto
(
sockfd
, 
£ndbuf
, 
Àn
, 0, 
¥
->
ß£nd
,Ör->
ßÀn
);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/send_v6.c

1 
	~"pög.h
"

4 
	$£nd_v6
()

6 #ifdef 
IPV6


7 
Àn
;

8 
icmp6_hdr
 *
icmp6
;

10 
icmp6
 = (
icmp6_hdr
 *Ë
£ndbuf
;

11 
icmp6
->
icmp6_ty≥
 = 
ICMP6_ECHO_REQUEST
;

12 
icmp6
->
icmp6_code
 = 0;

13 
icmp6
->
icmp6_id
 = 
pid
;

14 
icmp6
->
icmp6_£q
 = 
n£¡
++;

15 
	`mem£t
((
icmp6
 + 1), 0xa5, 
d©Æí
);

16 
	`Gëtimeofday
((
timevÆ
 *Ë(
icmp6
 + 1), 
NULL
);

18 
Àn
 = 8 + 
d©Æí
;

20 
	`Sídto
(
sockfd
, 
£ndbuf
, 
Àn
, 0, 
¥
->
ß£nd
,Ör->
ßÀn
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/sig_alrm.c

1 
	~"pög.h
"

4 
	$sig_Ærm
(
signo
)

6 (*
¥
->
f£nd
)();

8 
	`Æ¨m
(1);

10 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ping/tv_sub.c

1 
	~"u≈.h
"

4 
	$tv_sub
(
timevÆ
 *
out
, timevÆ *
ö
)

6 i‡–(
out
->
tv_u£c
 -
ö
->tv_usec) < 0) {

7 --
out
->
tv_£c
;

8 
out
->
tv_u£c
 += 1000000;

10 
out
->
tv_£c
 -
ö
->tv_sec;

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/checkudpsum.c

1 
	~"u≈rouã.h
"

2 
	~<√töë/udp.h
>

3 
	~<√töë/ù_v¨.h
>

4 
	~<√töë/udp_v¨.h
>

7 
	$maö
(
¨gc
, **
¨gv
)

9 
mib
[4], 
vÆ
;

10 
size_t
 
Àn
;

12 
mib
[0] = 
CTL_NET
;

13 
mib
[1] = 
AF_INET
;

14 
mib
[2] = 
IPPROTO_UDP
;

15 
mib
[3] = 
UDPCTL_CHECKSUM
;

17 
Àn
 = (
vÆ
);

18 
	`Sys˘l
(
mib
, 4, &
vÆ
, &
Àn
, 
NULL
, 0);

19 
	`¥ötf
("ud∞checksum fœg: %d\n", 
vÆ
);

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/get_ifi_info.c

1 
	~"u≈ifi.h
"

2 
	~"u≈rouã.h
"

5 
ifi_öfo
 *

6 
	$gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)

8 
Êags
;

9 *
buf
, *
√xt
, *
lim
;

10 
size_t
 
Àn
;

11 
if_msghdr
 *
ifm
;

12 
iÁ_msghdr
 *
iÁm
;

13 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

14 
sockaddr_dl
 *
sdl
;

15 
ifi_öfo
 *
ifi
, *
ifißve
, *
ifihód
, **
ifù√xt
;

17 
buf
 = 
	`Në_π_iÊi°
(
Ámûy
, 0, &
Àn
);

19 
ifihód
 = 
NULL
;

20 
ifù√xt
 = &
ifihód
;

22 
lim
 = 
buf
 + 
Àn
;

23 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
ifm
->
ifm_msgÀn
) {

24 
ifm
 = (
if_msghdr
 *Ë
√xt
;

25 i‡(
ifm
->
ifm_ty≥
 =
RTM_IFINFO
) {

26 i‡–((
Êags
 = 
ifm
->
ifm_Êags
Ë& 
IFF_UP
) == 0)

29 
ß
 = (
sockaddr
 *Ë(
ifm
 + 1);

30 
	`gë_πaddrs
(
ifm
->
ifm_addrs
, 
ß
, 
πi_öfo
);

31 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFP
]Ë!
NULL
) {

32 
ifi
 = 
	`CÆloc
(1, (
ifi_öfo
));

33 *
ifù√xt
 = 
ifi
;

34 
ifù√xt
 = &
ifi
->
ifi_√xt
;

36 
ifi
->
ifi_Êags
 = 
Êags
;

37 i‡(
ß
->
ß_Ámûy
 =
AF_LINK
) {

38 
sdl
 = (
sockaddr_dl
 *Ë
ß
;

39 
ifi
->
ifi_ödex
 = 
sdl
->
sdl_ödex
;

40 i‡(
sdl
->
sdl_∆í
 > 0)

41 
	`¢¥ötf
(
ifi
->
ifi_«me
, 
IFI_NAME
, "%*s",

42 
sdl
->
sdl_∆í
, &sdl->
sdl_d©a
[0]);

44 
	`¢¥ötf
(
ifi
->
ifi_«me
, 
IFI_NAME
, "index %d",

45 
sdl
->
sdl_ödex
);

47 i‡–(
ifi
->
ifi_hÀn
 = 
sdl
->
sdl_Æí
) > 0)

48 
	`mem˝y
(
ifi
->
ifi_haddr
, 
	`LLADDR
(
sdl
),

49 
	`mö
(
IFI_HADDR
, 
sdl
->
sdl_Æí
));

55 } i‡(
ifm
->
ifm_ty≥
 =
RTM_NEWADDR
) {

56 i‡(
ifi
->
ifi_addr
) {

57 i‡(
dﬂlü£s
 == 0)

61 
ifißve
 = 
ifi
;

62 
ifi
 = 
	`CÆloc
(1, (
ifi_öfo
));

63 *
ifù√xt
 = 
ifi
;

64 
ifù√xt
 = &
ifi
->
ifi_√xt
;

65 
ifi
->
ifi_Êags
 = 
ifißve
->ifi_flags;

66 
ifi
->
ifi_ödex
 = 
ifißve
->ifi_index;

67 
ifi
->
ifi_hÀn
 = 
ifißve
->ifi_hlen;

68 
	`mem˝y
(
ifi
->
ifi_«me
, 
ifißve
->ifi_«me, 
IFI_NAME
);

69 
	`mem˝y
(
ifi
->
ifi_haddr
, 
ifißve
->ifi_haddr, 
IFI_HADDR
);

72 
iÁm
 = (
iÁ_msghdr
 *Ë
√xt
;

73 
ß
 = (
sockaddr
 *Ë(
iÁm
 + 1);

74 
	`gë_πaddrs
(
iÁm
->
iÁm_addrs
, 
ß
, 
πi_öfo
);

76 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFA
]Ë!
NULL
) {

77 
ifi
->
ifi_addr
 = 
	`CÆloc
(1, 
ß
->
ß_Àn
);

78 
	`mem˝y
(
ifi
->
ifi_addr
, 
ß
, sa->
ß_Àn
);

81 i‡((
Êags
 & 
IFF_BROADCAST
) &&

82 (
ß
 = 
πi_öfo
[
RTAX_BRD
]Ë!
NULL
) {

83 
ifi
->
ifi_brdaddr
 = 
	`CÆloc
(1, 
ß
->
ß_Àn
);

84 
	`mem˝y
(
ifi
->
ifi_brdaddr
, 
ß
, sa->
ß_Àn
);

87 i‡((
Êags
 & 
IFF_POINTOPOINT
) &&

88 (
ß
 = 
πi_öfo
[
RTAX_BRD
]Ë!
NULL
) {

89 
ifi
->
ifi_d°addr
 = 
	`CÆloc
(1, 
ß
->
ß_Àn
);

90 
	`mem˝y
(
ifi
->
ifi_d°addr
, 
ß
, sa->
ß_Àn
);

94 
	`îr_quô
("u√x≥˘ed mesßgêty≥ %d", 
ifm
->
ifm_ty≥
);

97 (
ifihód
);

98 
	}
}

102 
	$‰ì_ifi_öfo
(
ifi_öfo
 *
ifihód
)

104 
ifi_öfo
 *
ifi
, *
iföext
;

106 
ifi
 = 
ifihód
; ifò!
NULL
; ifò
iföext
) {

107 i‡(
ifi
->
ifi_addr
 !
NULL
)

108 
	`‰ì
(
ifi
->
ifi_addr
);

109 i‡(
ifi
->
ifi_brdaddr
 !
NULL
)

110 
	`‰ì
(
ifi
->
ifi_brdaddr
);

111 i‡(
ifi
->
ifi_d°addr
 !
NULL
)

112 
	`‰ì
(
ifi
->
ifi_d°addr
);

113 
iföext
 = 
ifi
->
ifi_√xt
;

114 
	`‰ì
(
ifi
);

116 
	}
}

118 
ifi_öfo
 *

119 
	$Gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)

121 
ifi_öfo
 *
ifi
;

123 i‡–(
ifi
 = 
	`gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
)Ë=
NULL
)

124 
	`îr_quô
("get_ifi_infoÉrror");

125 (
ifi
);

126 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/getrt.c

2 
	~"u≈rouã.h
"

4 
	#BUFLEN
 ((
π_msghdr
Ë+ 512)

	)

6 
	#SEQ
 9999

	)

9 
	$maö
(
¨gc
, **
¨gv
)

11 
sockfd
;

12 *
buf
;

13 
pid_t
 
pid
;

14 
ssize_t
 
n
;

15 
π_msghdr
 *
πm
;

16 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

17 
sockaddr_ö
 *
sö
;

19 i‡(
¨gc
 != 2)

20 
	`îr_quô
("usage: getrt <IPaddress>");

22 
sockfd
 = 
	`Sockë
(
AF_ROUTE
, 
SOCK_RAW
, 0);

24 
buf
 = 
	`CÆloc
(1, 
BUFLEN
);

26 
πm
 = (
π_msghdr
 *Ë
buf
;

27 
πm
->
πm_msgÀn
 = (
π_msghdr
Ë+ (
sockaddr_ö
);

28 
πm
->
πm_vîsi⁄
 = 
RTM_VERSION
;

29 
πm
->
πm_ty≥
 = 
RTM_GET
;

30 
πm
->
πm_addrs
 = 
RTA_DST
;

31 
πm
->
πm_pid
 = 
pid
 = 
	`gëpid
();

32 
πm
->
πm_£q
 = 
SEQ
;

34 
sö
 = (
sockaddr_ö
 *Ë(
πm
 + 1);

35 
sö
->
sö_Àn
 = (
sockaddr_ö
);

36 
sö
->
sö_Ámûy
 = 
AF_INET
;

37 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
sö
->
sö_addr
);

39 
	`Wrôe
(
sockfd
, 
πm
,Ñtm->
πm_msgÀn
);

42 
n
 = 
	`Ród
(
sockfd
, 
πm
, 
BUFLEN
);

43 } 
πm
->
πm_ty≥
 !
RTM_GET
 ||Ñtm->
πm_£q
 !
SEQ
 ||

44 
πm
->
πm_pid
 !
pid
);

48 
πm
 = (
π_msghdr
 *Ë
buf
;

49 
ß
 = (
sockaddr
 *Ë(
πm
 + 1);

50 
	`gë_πaddrs
(
πm
->
πm_addrs
, 
ß
, 
πi_öfo
);

51 i‡–(
ß
 = 
πi_öfo
[
RTAX_DST
]Ë!
NULL
)

52 
	`¥ötf
("de°: %s\n", 
	`Sock_¡›_ho°
(
ß
, sa->
ß_Àn
));

54 i‡–(
ß
 = 
πi_öfo
[
RTAX_GATEWAY
]Ë!
NULL
)

55 
	`¥ötf
("g©eway: %s\n", 
	`Sock_¡›_ho°
(
ß
, sa->
ß_Àn
));

57 i‡–(
ß
 = 
πi_öfo
[
RTAX_NETMASK
]Ë!
NULL
)

58 
	`¥ötf
("√tmask: %s\n", 
	`Sock_maskt›
(
ß
, sa->
ß_Àn
));

60 i‡–(
ß
 = 
πi_öfo
[
RTAX_GENMASK
]Ë!
NULL
)

61 
	`¥ötf
("gímask: %s\n", 
	`Sock_maskt›
(
ß
, sa->
ß_Àn
));

63 
	`exô
(0);

64 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/mynetstat.c

1 
	~"u≈rouã.h
"

3 
¥_πabÀ
();

4 
¥_iÊi°
();

7 
	$maö
(
¨gc
, **
¨gv
)

9 
Ámûy
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage: mynetstat <inet4|inet6|all>");

13 i‡(
	`°rcmp
(
¨gv
[1], "inet4") == 0)

14 
Ámûy
 = 
AF_INET
;

15 #ifdef 
AF_INET6


16 i‡(
	`°rcmp
(
¨gv
[1], "inet6") == 0)

17 
Ámûy
 = 
AF_INET6
;

19 i‡(
	`°rcmp
(
¨gv
[1], "all") == 0)

20 
Ámûy
 = 0;

22 
	`îr_quô
("invalid <address-family>");

24 
	`¥_πabÀ
(
Ámûy
);

26 
	`¥_iÊi°
(
Ámûy
);

28 
	`exô
(0);

29 
	}
}

32 
	$¥_πabÀ
(
Ámûy
)

34 *
buf
, *
√xt
, *
lim
;

35 
size_t
 
Àn
;

36 
π_msghdr
 *
πm
;

37 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

39 
buf
 = 
	`Në_π_dump
(
Ámûy
, 0, &
Àn
);

41 
lim
 = 
buf
 + 
Àn
;

42 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
πm
->
πm_msgÀn
) {

43 
πm
 = (
π_msghdr
 *Ë
√xt
;

44 
ß
 = (
sockaddr
 *)(
πm
 + 1);

45 
	`gë_πaddrs
(
πm
->
πm_addrs
, 
ß
, 
πi_öfo
);

46 i‡–(
ß
 = 
πi_öfo
[
RTAX_DST
]Ë!
NULL
)

47 
	`¥ötf
("de°: %s", 
	`sock_¡›
(
ß
, sa->
ß_Àn
));

49 i‡–(
ß
 = 
πi_öfo
[
RTAX_GATEWAY
]Ë!
NULL
)

50 
	`¥ötf
(", g©eway: %s", 
	`sock_¡›
(
ß
, sa->
ß_Àn
));

52 
	`¥ötf
("\n");

54 
	}
}

57 
	$¥_iÊi°
(
Ámûy
)

59 
Êags
;

60 *
buf
, *
√xt
, *
lim
;

61 
u_ch¨
 *
±r
;

62 
size_t
 
Àn
;

63 
if_msghdr
 *
ifm
;

64 
iÁ_msghdr
 *
iÁm
;

65 
sockaddr
 *
ß
, *
πi_öfo
[
RTAX_MAX
];

66 
sockaddr_dl
 *
sdl
;

68 
buf
 = 
	`Në_π_iÊi°
(
Ámûy
, 0, &
Àn
);

70 
lim
 = 
buf
 + 
Àn
;

71 
√xt
 = 
buf
;Çexà< 
lim
;Çexà+
ifm
->
ifm_msgÀn
) {

72 
ifm
 = (
if_msghdr
 *Ë
√xt
;

73 i‡(
ifm
->
ifm_ty≥
 =
RTM_IFINFO
) {

74 
ß
 = (
sockaddr
 *)(
ifm
 + 1);

75 
	`gë_πaddrs
(
ifm
->
ifm_addrs
, 
ß
, 
πi_öfo
);

76 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFP
]Ë!
NULL
) {

77 i‡(((
Êags
 = 
ifm
->
ifm_Êags
Ë& 
IFF_UP
) == 0)

79 
	`¥ötf
("öãrÁ˚: %s: <", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

80 i‡(
Êags
 & 
IFF_UP
Ë
	`¥ötf
("UP ");

81 i‡(
Êags
 & 
IFF_BROADCAST
Ë
	`¥ötf
("BCAST ");

82 i‡(
Êags
 & 
IFF_MULTICAST
Ë
	`¥ötf
("MCAST ");

83 i‡(
Êags
 & 
IFF_LOOPBACK
Ë
	`¥ötf
("LOOP ");

84 i‡(
Êags
 & 
IFF_POINTOPOINT
Ë
	`¥ötf
("P2P ");

85 
	`¥ötf
(">\n");

87 i‡(
ß
->
ß_Ámûy
 =
AF_LINK
 &&

88 (
sdl
 = (
sockaddr_dl
 *Ë
ß
) &&

89 (
sdl
->
sdl_Æí
 > 0)) {

90 
±r
 = (
u_ch¨
 *Ë&
sdl
->
sdl_d©a
[sdl->
sdl_∆í
];

91 
	`¥ötf
(" %x:%x:%x:%x:%x:%x\n", *
±r
, *(ptr+1),

92 *(
±r
+2), *(ptr+3), *(ptr+4), *(ptr+5));

96 } i‡(
ifm
->
ifm_ty≥
 =
RTM_NEWADDR
) {

97 
iÁm
 = (
iÁ_msghdr
 *Ë
√xt
;

98 
ß
 = (
sockaddr
 *)(
iÁm
 + 1);

99 
	`gë_πaddrs
(
iÁm
->
iÁm_addrs
, 
ß
, 
πi_öfo
);

100 i‡–(
ß
 = 
πi_öfo
[
RTAX_IFA
]Ë!
NULL
)

101 
	`¥ötf
(" IPáddr: %s\n", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

102 i‡((
Êags
 & 
IFF_BROADCAST
Ë&& (
ß
 = 
πi_öfo
[
RTAX_BRD
]))

103 
	`¥ötf
(" bˇ°áddr: %s\n", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

106 
	`îr_quô
("u√x≥˘ed mesßgêty≥ %d", 
ifm
->
ifm_ty≥
);

108 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/prifindex.c

1 
	~"u≈ifi.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 i‡(
¨gc
 != 2)

7 
	`îr_quô
("usage:Örifname <interface-name>");

9 
	`¥ötf
("öãrÁ˚ index = %d\n", 
	`If_«mëoödex
(
¨gv
[1]));

10 
	`exô
(0);

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/prifinfo.c

1 
	~"u≈ifi.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
ifi_öfo
 *
ifi
, *
ifihód
;

7 
sockaddr
 *
ß
;

8 
u_ch¨
 *
±r
;

9 
i
, 
Ámûy
, 
dﬂlü£s
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage:Örifinfo <inet4|inet6> <doaliases>");

13 i‡(
	`°rcmp
(
¨gv
[1], "inet4") == 0)

14 
Ámûy
 = 
AF_INET
;

15 #ifdef 
AF_INET6


16 i‡(
	`°rcmp
(
¨gv
[1], "inet6") == 0)

17 
Ámûy
 = 
AF_INET6
;

20 
	`îr_quô
("invalid <address-family>");

21 
dﬂlü£s
 = 
	`©oi
(
¨gv
[2]);

23 
ifihód
 = 
ifi
 = 
	`Gë_ifi_öfo
(
Ámûy
, 
dﬂlü£s
);

24 
ifi
 !
NULL
; ifòifi->
ifi_√xt
) {

25 
	`¥ötf
("%s: <", 
ifi
->
ifi_«me
);

26 i‡(
ifi
->
ifi_Êags
 & 
IFF_UP
Ë
	`¥ötf
("UP ");

27 i‡(
ifi
->
ifi_Êags
 & 
IFF_BROADCAST
Ë
	`¥ötf
("BCAST ");

28 i‡(
ifi
->
ifi_Êags
 & 
IFF_MULTICAST
Ë
	`¥ötf
("MCAST ");

29 i‡(
ifi
->
ifi_Êags
 & 
IFF_LOOPBACK
Ë
	`¥ötf
("LOOP ");

30 i‡(
ifi
->
ifi_Êags
 & 
IFF_POINTOPOINT
Ë
	`¥ötf
("P2P ");

31 
	`¥ötf
(">\n");

33 i‡–(
i
 = 
ifi
->
ifi_hÀn
) > 0) {

34 
±r
 = 
ifi
->
ifi_haddr
;

36 
	`¥ötf
("%s%x", (
i
 =
ifi
->
ifi_hÀn
Ë? " " : ":", *
±r
++);

37 } --
i
 > 0);

38 
	`¥ötf
("\n");

41 i‡–(
ß
 = 
ifi
->
ifi_addr
Ë!
NULL
)

42 
	`¥ötf
(" IPáddr: %s\n", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

43 i‡–(
ß
 = 
ifi
->
ifi_brdaddr
Ë!
NULL
)

44 
	`¥ötf
(" brﬂdˇ°áddr: %s\n", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

45 i‡–(
ß
 = 
ifi
->
ifi_d°addr
Ë!
NULL
)

46 
	`¥ötf
(" de°ö©i⁄áddr: %s\n", 
	`Sock_¡›
(
ß
, sa->
ß_Àn
));

48 
	`‰ì_ifi_öfo
(
ifihód
);

49 
	`exô
(0);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/prifname.c

1 
	~"u≈ifi.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
«me
[16];

8 i‡(
¨gc
 != 2)

9 
	`îr_quô
("usage:Örifname <interface-index>");

11 
	`¥ötf
("öãrÁ˚Çamê%s\n", 
	`If_ödext⁄ame
(
	`©oi
(
¨gv
[1]), 
«me
));

12 
	`exô
(0);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/prifnameindex.c

1 
	~"u≈ifi.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
n
;

7 
i‚ame
[
IFNAMSIZ
];

8 
if_«meödex
 *
iÂå
, *
ßve
;

10 i‡(
¨gc
 != 1)

11 
	`îr_quô
("usage:Örifnameindex");

14 
ßve
 = 
iÂå
 = 
	`If_«meödex
(); iÂå->
if_ödex
 > 0; ifptr++) {

15 
	`¥ötf
("«mê%s, index = %d\n", 
iÂå
->
if_«me
, iÂå->
if_ödex
);;

17 i‡–(
n
 = 
	`If_«mëoödex
(
iÂå
->
if_«me
)Ë!iÂå->
if_ödex
)

18 
	`îr_quô
("if_nametoindexÑeturned %d,Éxpected %d, for %s",

19 
n
, 
iÂå
->
if_ödex
, iÂå->
if_«me
);

21 
	`If_ödext⁄ame
(
iÂå
->
if_ödex
, 
i‚ame
);

22 i‡(
	`°rcmp
(
i‚ame
, 
iÂå
->
if_«me
) != 0)

23 
	`îr_quô
("if_indextonameÑeturned %s,Éxpected %s, for %d",

24 
i‚ame
, 
iÂå
->
if_«me
, iÂå->
if_ödex
);

27 
n
 = 
	`if_«mëoödex
("fkjhkjhgjhgjhgdjhguyetiuyiuyhkjhkjdh");

28 i‡(
n
 != 0)

29 
	`îr_quô
("if_«mëoödexÑëu∫ed %d f‹ fkjh...", 
n
);

30 
n
 = 
	`if_«mëoödex
("");

31 i‡(
n
 != 0)

32 
	`îr_quô
("if_«mëoödexÑëu∫ed %d f‹ (nuŒ)", 
n
);

34 i‡(
	`if_ödext⁄ame
(0, 
i‚ame
Ë!
NULL
)

35 
	`îr_quô
("if_indextonameÉrror for 0");

36 i‡(
	`if_ödext⁄ame
(888888, 
i‚ame
Ë!
NULL
)

37 
	`îr_quô
("if_indextonameÉrror for 888888");

39 
	`if_‰ì«meödex
(
ßve
);

40 
	`exô
(0);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/route/unproute.h

1 
	~"u≈.h
"

2 
	~<√t/if.h
>

3 
	~<√t/if_dl.h
>

4 
	~<√t/rouã.h
>

5 
	~<sys/∑øm.h
>

7 #ifdef 
HAVE_SYS_SYSCTL_H


8 
	~<sys/sys˘l.h
>

12 
gë_πaddrs
(, 
sockaddr
 *, sockaddr **);

13 *
√t_π_iÊi°
(, , 
size_t
 *);

14 *
√t_π_dump
(, , 
size_t
 *);

15 *
sock_maskt›
(
sockaddr
 *, 
sockÀn_t
);

18 *
Në_π_iÊi°
(, , 
size_t
 *);

19 *
Në_π_dump
(, , 
size_t
 *);

20 
	#Sock_maskt›
(
a
,
b
Ë
	`sock_maskt›
(◊), (b))

	)

	@/media/sf_ddrive/progs/network/unpv13e/rtt/dg_cli.c

1 
	~"u≈.h
"

3 
ssize_t
 
Dg_£nd_ªcv
(, c⁄° *, 
size_t
, *, size_t,

4 c⁄° 
SA
 *, 
sockÀn_t
);

7 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

9 
ssize_t
 
n
;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

12 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

14 
n
 = 
	`Dg_£nd_ªcv
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline),

15 
ªcvlöe
, 
MAXLINE
, 
p£rvaddr
, 
£rvÀn
);

17 
ªcvlöe
[
n
] = 0;

18 
	`Fputs
(
ªcvlöe
, 
°dout
);

20 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/rtt/dg_echo.c

1 
	~"u≈.h
"

4 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

6 
n
;

7 
sockÀn_t
 
Àn
;

8 
mesg
[
MAXLINE
];

11 
Àn
 = 
˛ûí
;

12 
n
 = 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
p˛üddr
, &
Àn
);

14 
	`Sídto
(
sockfd
, 
mesg
, 
n
, 0, 
p˛üddr
, 
˛ûí
);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/rtt/dg_send_recv.c

2 
	~"u≈πt.h
"

3 
	~<£tjmp.h
>

5 
	#RTT_DEBUG


	)

7 
πt_öfo
 
	gπtöfo
;

8 
	gπtöô
 = 0;

9 
msghdr
 
	gmsg£nd
, 
	gmsgªcv
;

10 
	shdr
 {

11 
uöt32_t
 
	m£q
;

12 
uöt32_t
 
	mts
;

13 } 
	g£ndhdr
, 
	gªcvhdr
;

15 
sig_Ærm
(
signo
);

16 
sigjmp_buf
 
	gjmpbuf
;

18 
ssize_t


19 
	$dg_£nd_ªcv
(
fd
, c⁄° *
outbuff
, 
size_t
 
outbyãs
,

20 *
öbuff
, 
size_t
 
öbyãs
,

21 c⁄° 
SA
 *
de°addr
, 
sockÀn_t
 
de°Àn
)

23 
ssize_t
 
n
;

24 
iovec
 
iov£nd
[2], 
iovªcv
[2];

26 i‡(
πtöô
 == 0) {

27 
	`πt_öô
(&
πtöfo
);

28 
πtöô
 = 1;

29 
πt_d_Êag
 = 1;

32 
£ndhdr
.
£q
++;

33 
msg£nd
.
msg_«me
 = 
de°addr
;

34 
msg£nd
.
msg_«mñí
 = 
de°Àn
;

35 
msg£nd
.
msg_iov
 = 
iov£nd
;

36 
msg£nd
.
msg_iovÀn
 = 2;

37 
iov£nd
[0].
iov_ba£
 = &
£ndhdr
;

38 
iov£nd
[0].
iov_Àn
 = (
hdr
);

39 
iov£nd
[1].
iov_ba£
 = 
outbuff
;

40 
iov£nd
[1].
iov_Àn
 = 
outbyãs
;

42 
msgªcv
.
msg_«me
 = 
NULL
;

43 
msgªcv
.
msg_«mñí
 = 0;

44 
msgªcv
.
msg_iov
 = 
iovªcv
;

45 
msgªcv
.
msg_iovÀn
 = 2;

46 
iovªcv
[0].
iov_ba£
 = &
ªcvhdr
;

47 
iovªcv
[0].
iov_Àn
 = (
hdr
);

48 
iovªcv
[1].
iov_ba£
 = 
öbuff
;

49 
iovªcv
[1].
iov_Àn
 = 
öbyãs
;

53 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

54 
	`πt_√w∑ck
(&
πtöfo
);

56 
£ndagaö
:

57 #ifdef 
RTT_DEBUG


58 
	`Ârötf
(
°dîr
, "£nd %4d: ", 
£ndhdr
.
£q
);

60 
£ndhdr
.
ts
 = 
	`πt_ts
(&
πtöfo
);

61 
	`Sídmsg
(
fd
, &
msg£nd
, 0);

63 
	`Æ¨m
(
	`πt_°¨t
(&
πtöfo
));

64 #ifdef 
RTT_DEBUG


65 
	`πt_debug
(&
πtöfo
);

68 i‡(
	`sig£tjmp
(
jmpbuf
, 1) != 0) {

69 i‡(
	`πt_timeout
(&
πtöfo
) < 0) {

70 
	`îr_msg
("dg_send_recv:ÇoÑesponse from server, giving up");

71 
πtöô
 = 0;

72 
î∫o
 = 
ETIMEDOUT
;

75 #ifdef 
RTT_DEBUG


76 
	`îr_msg
("dg_send_recv:Åimeout,Ñetransmitting");

78 
£ndagaö
;

82 
n
 = 
	`Recvmsg
(
fd
, &
msgªcv
, 0);

83 #ifdef 
RTT_DEBUG


84 
	`Ârötf
(
°dîr
, "ªcv %4d\n", 
ªcvhdr
.
£q
);

86 } 
n
 < (
hdr
Ë|| 
ªcvhdr
.
£q
 !
£ndhdr
.seq);

88 
	`Æ¨m
(0);

90 
	`πt_°›
(&
πtöfo
, 
	`πt_ts
(&πtöfoË- 
ªcvhdr
.
ts
);

92 (
n
 - (
hdr
));

93 
	}
}

96 
	$sig_Ærm
(
signo
)

98 
	`sigl⁄gjmp
(
jmpbuf
, 1);

99 
	}
}

102 
ssize_t


103 
	$Dg_£nd_ªcv
(
fd
, c⁄° *
outbuff
, 
size_t
 
outbyãs
,

104 *
öbuff
, 
size_t
 
öbyãs
,

105 c⁄° 
SA
 *
de°addr
, 
sockÀn_t
 
de°Àn
)

107 
ssize_t
 
n
;

109 
n
 = 
	`dg_£nd_ªcv
(
fd
, 
outbuff
, 
outbyãs
, 
öbuff
, 
öbyãs
,

110 
de°addr
, 
de°Àn
);

111 i‡(
n
 < 0)

112 
	`îr_quô
("dg_send_recvÉrror");

114 (
n
);

115 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/rtt/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/rtt/unprtt.h

1 #i‚def 
__u≈_πt_h


2 
	#__u≈_πt_h


	)

4 
	~"u≈.h
"

6 
	sπt_öfo
 {

7 
	mπt_πt
;

8 
	mπt_§â
;

9 
	mπt_πtv¨
;

10 
	mπt_πo
;

11 
	mπt_ƒexmt
;

12 
uöt32_t
 
	mπt_ba£
;

15 
	#RTT_RXTMIN
 2

	)

16 
	#RTT_RXTMAX
 60

	)

17 
	#RTT_MAXNREXMT
 3

	)

20 
πt_debug
(
πt_öfo
 *);

21 
πt_öô
(
πt_öfo
 *);

22 
πt_√w∑ck
(
πt_öfo
 *);

23 
πt_°¨t
(
πt_öfo
 *);

24 
πt_°›
(
πt_öfo
 *, 
uöt32_t
);

25 
πt_timeout
(
πt_öfo
 *);

26 
uöt32_t
 
πt_ts
(
πt_öfo
 *);

28 
πt_d_Êag
;

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_addr_to_associd.c

1 
	~"u≈.h
"

3 
s˘p_assoc_t


4 
	$s˘p_addªss_to_associd
(
sock_fd
, 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
)

6 
s˘p_∑ddΩ¨ams
 
•
;

7 
siz
;

9 
siz
 = (
s˘p_∑ddΩ¨ams
);

10 
	`bzîo
(&
•
,
siz
);

11 
	`mem˝y
(&
•
.
•p_addªss
,
ß
,
ßÀn
);

12 
	`s˘p_›t_öfo
(
sock_fd
,0,

13 
SCTP_PEER_ADDR_PARAMS
, &
•
, &
siz
);

14 (
•
.
•p_assoc_id
);

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_bindargs.c

1 
	~"u≈.h
"

4 
	$s˘p_böd_¨g_li°
(
sock_fd
, **
¨gv
, 
¨gc
)

6 
addröfo
 *
addr
;

7 *
bödbuf
, *
p
, 
p‹tbuf
[10];

8 
addr˙t
=0;

9 
i
;

11 
bödbuf
 = (*)
	`CÆloc
(
¨gc
, (
sockaddr_°‹age
));

12 
p
 = 
bödbuf
;

13 
	`•rötf
(
p‹tbuf
, "%d", 
SERV_PORT
);

14  
i
=0; i<
¨gc
; i++ ) {

15 
addr
 = 
	`Ho°_£rv
(
¨gv
[
i
], 
p‹tbuf
, 
AF_UNSPEC
, 
SOCK_SEQPACKET
);

16 
	`mem˝y
(
p
, 
addr
->
ai_addr
,áddr->
ai_addæí
);

17 
	`‰ìaddröfo
(
addr
);

18 
addr˙t
++;

19 
p
 +
addr
->
ai_addæí
;

21 
	`S˘p_bödx
(
sock_fd
,(
SA
 *)
bödbuf
,
addr˙t
,
SCTP_BINDX_ADD_ADDR
);

22 
	`‰ì
(
bödbuf
);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_check_notify.c

1 
	~"u≈.h
"

4 
	$check_nŸifiˇti⁄
(
sock_fd
,*
ªcvlöe
,
rd_Àn
)

6 
s˘p_nŸifiˇti⁄
 *
¢p
;

7 
s˘p_assoc_ch™ge
 *
ßc
;

8 
sockaddr_°‹age
 *
ßl
,*
ßr
;

9 
num_ªm
, 
num_loc
;

11 
¢p
 = (
s˘p_nŸifiˇti⁄
 *)
ªcvlöe
;

12 if(
¢p
->
¢_hódî
.
¢_ty≥
 =
SCTP_ASSOC_CHANGE
) {

13 
ßc
 = &
¢p
->
¢_assoc_ch™ge
;

14 if((
ßc
->
ßc_°©e
 =
SCTP_COMM_UP
) ||

15 (
ßc
->
ßc_°©e
 =
SCTP_RESTART
)) {

16 
num_ªm
 = 
	`s˘p_gë∑ddrs
(
sock_fd
,
ßc
->
ßc_assoc_id
,&
ßr
);

17 
	`¥ötf
("Thereáre %dÑemoteáddressesándÅheyáre:\n",

18 
num_ªm
);

19 
	`s˘p_¥öt_addªs£s
(
ßr
,
num_ªm
);

20 
	`s˘p_‰ì∑ddrs
(
ßr
);

22 
num_loc
 = 
	`s˘p_gëœddrs
(
sock_fd
,
ßc
->
ßc_assoc_id
,&
ßl
);

23 
	`¥ötf
("Thereáre %dÜocaláddressesándÅheyáre:\n",

24 
num_loc
);

25 
	`s˘p_¥öt_addªs£s
(
ßl
,
num_loc
);

26 
	`s˘p_‰ìœddrs
(
ßl
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_displayevents.c

1 
	~"u≈.h
"

4 
	$¥öt_nŸifiˇti⁄
(*
nŸify_buf
)

6 
s˘p_nŸifiˇti⁄
 *
¢p
;

7 
s˘p_assoc_ch™ge
 *
ßc
;

8 
s˘p_∑ddr_ch™ge
 *
•c
;

9 
s˘p_ªmŸe_îr‹
 *
§e
;

10 
s˘p_£nd_Áûed
 *
ssf
;

11 
s˘p_shutdown_evít
 *
s£
;

12 
s˘p_ad≠ti⁄_evít
 *
´
;

13 
s˘p_pd≠i_evít
 *
pd≠i
;

14 c⁄° *
°r
;

16 
¢p
 = (
s˘p_nŸifiˇti⁄
 *)
nŸify_buf
;

17 
¢p
->
¢_hódî
.
¢_ty≥
) {

18 
SCTP_ASSOC_CHANGE
:

19 
ßc
 = &
¢p
->
¢_assoc_ch™ge
;

20 
ßc
->
ßc_°©e
) {

21 
SCTP_COMM_UP
:

22 
°r
 = "COMMUNICATION UP";

24 
SCTP_COMM_LOST
:

25 
°r
 = "COMMUNICATION LOST";

27 
SCTP_RESTART
:

28 
°r
 = "RESTART";

30 
SCTP_SHUTDOWN_COMP
:

31 
°r
 = "SHUTDOWN COMPLETE";

33 
SCTP_CANT_STR_ASSOC
:

34 
°r
 = "CAN'T START ASSOC";

37 
°r
 = "UNKNOWN";

40 
	`¥ötf
("SCTP_ASSOC_CHANGE: %s,ássoc=0x%x\n", 
°r
,

41 (
uöt32_t
)
ßc
->
ßc_assoc_id
);

43 
SCTP_PEER_ADDR_CHANGE
:

44 
•c
 = &
¢p
->
¢_∑ddr_ch™ge
;

45 
•c
->
•c_°©e
) {

46 
SCTP_ADDR_AVAILABLE
:

47 
°r
 = "ADDRESS AVAILABLE";

49 
SCTP_ADDR_UNREACHABLE
:

50 
°r
 = "ADDRESS UNREACHABLE";

52 
SCTP_ADDR_REMOVED
:

53 
°r
 = "ADDRESS REMOVED";

55 
SCTP_ADDR_ADDED
:

56 
°r
 = "ADDRESS ADDED";

58 
SCTP_ADDR_MADE_PRIM
:

59 
°r
 = "ADDRESS MADE PRIMARY";

62 
°r
 = "UNKNOWN";

65 
	`¥ötf
("SCTP_PEER_ADDR_CHANGE: %s,áddr=%s,ássoc=0x%x\n", 
°r
,

66 
	`Sock_¡›
((
SA
 *)&
•c
->
•c_Øddr
, (spc->spc_aaddr)),

67 (
uöt32_t
)
•c
->
•c_assoc_id
);

69 
SCTP_REMOTE_ERROR
:

70 
§e
 = &
¢p
->
¢_ªmŸe_îr‹
;

71 
	`¥ötf
("SCTP_REMOTE_ERROR:ássoc=0x%xÉrror=%d\n",

72 (
uöt32_t
)
§e
->
§e_assoc_id
, sª->
§e_îr‹
);

74 
SCTP_SEND_FAILED
:

75 
ssf
 = &
¢p
->
¢_£nd_Áûed
;

76 
	`¥ötf
("SCTP_SEND_FAILED:ássoc=0x%xÉrror=%d\n",

77 (
uöt32_t
)
ssf
->
ssf_assoc_id
, ssf->
ssf_îr‹
);

79 
SCTP_ADAPTION_INDICATION
:

80 
´
 = &
¢p
->
¢_ad≠ti⁄_evít
;

81 
	`¥ötf
("SCTP_ADAPTION_INDICATION: 0x%x\n",

82 (
u_öt
)
´
->
ßi_ad≠ti⁄_öd
);

84 
SCTP_PARTIAL_DELIVERY_EVENT
:

85 
pd≠i
 = &
¢p
->
¢_pd≠i_evít
;

86 if(
pd≠i
->
pd≠i_ödiˇti⁄
 =
SCTP_PARTIAL_DELIVERY_ABORTED
)

87 
	`¥ötf
("SCTP_PARTIAL_DELIEVERY_ABORTED\n");

89 
	`¥ötf
("Unknown SCTP_PARTIAL_DELIVERY_EVENT 0x%x\n",

90 
pd≠i
->
pd≠i_ödiˇti⁄
);

92 
SCTP_SHUTDOWN_EVENT
:

93 
s£
 = &
¢p
->
¢_shutdown_evít
;

94 
	`¥ötf
("SCTP_SHUTDOWN_EVENT:ássoc=0x%x\n",

95 (
uöt32_t
)
s£
->
s£_assoc_id
);

98 
	`¥ötf
("UnknownÇotificationÉventÅype=0x%x\n",

99 
¢p
->
¢_hódî
.
¢_ty≥
);

101 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_getnostrm.c

1 
	~"u≈.h
"

4 
	$s˘p_gë_no_°rms
(
sock_fd
,
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

6 
ªtsz
;

7 
s˘p_°©us
 
°©us
;

8 
ªtsz
 = (
°©us
);

9 
	`bzîo
(&
°©us
,(status));

11 
°©us
.
s°©_assoc_id
 = 
	`s˘p_addªss_to_associd
(
sock_fd
,
to
,
tﬁí
);

12 
	`Gësock›t
(
sock_fd
,
IPPROTO_SCTP
, 
SCTP_STATUS
,

13 &
°©us
, &
ªtsz
);

14 (
°©us
.
s°©_out°rms
);

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_modify_hb.c

1 
	~"u≈.h
"

3 
	$hóπbót_a˘i⁄
(
sock_fd
, 
sockaddr
 *
ß
, 
sockÀn_t
 
ßÀn
,

4 
u_öt
 
vÆue
)

6 
s˘p_∑ddΩ¨ams
 
•
;

7 
siz
;

9 
	`bzîo
(&
•
,(sp));

10 
•
.
•p_hböãrvÆ
 = 
vÆue
;

11 
	`mem˝y
((
ˇddr_t
)&
•
.
•p_addªss
,
ß
,
ßÀn
);

12 
	`Sësock›t
(
sock_fd
,
IPPROTO_SCTP
,

13 
SCTP_PEER_ADDR_PARAMS
, &
•
, (sp));

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_pdapircv.c

1 
	~"u≈.h
"

3 
uöt8_t
 *
	gs˘p_pd≠i_ªadbuf
=
NULL
;

4 
	gs˘p_pd≠i_rdbuf_sz
=0;

7 
uöt8_t
 *

8 
	$pd≠i_ªcvmsg
(
sock_fd
,

9 *
rdÀn
,

10 
SA
 *
‰om
,

11 *
‰om_Àn
,

12 
s˘p_¢drcvöfo
 *
§i
,

13 *
msg_Êags
)

15 
rdsz
,
À·
,
©_ö_buf
;

16 
‰mÀn
=0;

18 i‡(
s˘p_pd≠i_ªadbuf
 =
NULL
) {

19 
s˘p_pd≠i_ªadbuf
 = (
uöt8_t
 *)
	`MÆloc
(
SCTP_PDAPI_INCR_SZ
);

20 
s˘p_pd≠i_rdbuf_sz
 = 
SCTP_PDAPI_INCR_SZ
;

22 
©_ö_buf
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
s˘p_pd≠i_ªadbuf
, 
s˘p_pd≠i_rdbuf_sz
,

23 
‰om
, 
‰om_Àn
,

24 
§i
,
msg_Êags
);

25 if(
©_ö_buf
 < 1){

26 *
rdÀn
 = 
©_ö_buf
;

27 (
NULL
);

29 (*
msg_Êags
 & 
MSG_EOR
) == 0) {

30 
À·
 = 
s˘p_pd≠i_rdbuf_sz
 - 
©_ö_buf
;

31 if(
À·
 < 
SCTP_PDAPI_NEED_MORE_THRESHOLD
) {

32 
s˘p_pd≠i_ªadbuf
 = 
	`ªÆloc
(s˘p_pd≠i_ªadbuf, 
s˘p_pd≠i_rdbuf_sz
+
SCTP_PDAPI_INCR_SZ
);

33 if(
s˘p_pd≠i_ªadbuf
 =
NULL
) {

34 
	`îr_quô
("sctp_pdapiÑan out of memory");

36 
s˘p_pd≠i_rdbuf_sz
 +
SCTP_PDAPI_INCR_SZ
;

37 
À·
 = 
s˘p_pd≠i_rdbuf_sz
 - 
©_ö_buf
;

39 
rdsz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, &
s˘p_pd≠i_ªadbuf
[
©_ö_buf
],

40 
À·
, 
NULL
, &
‰mÀn
, NULL, 
msg_Êags
);

41 
©_ö_buf
 +
rdsz
;

43 *
rdÀn
 = 
©_ö_buf
;

44 (
s˘p_pd≠i_ªadbuf
);

45 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_print_addrs.c

1 
	~"u≈.h
"

4 
	$s˘p_¥öt_addªs£s
(
sockaddr_°‹age
 *
addrs
, 
num
)

6 
sockaddr_°‹age
 *
ss
;

7 
i
,
ßÀn
;

9 
ss
 = 
addrs
;

10 
i
=0; i<
num
; i++){

11 
	`¥ötf
("%s\n", 
	`Sock_¡›
((
SA
 *)
ss
, 
ßÀn
));

12 #ifde‡
HAVE_SOCKADDR_SA_LEN


13 
ßÀn
 = 
ss
->
ss_Àn
;

15 
ss
->
ss_Ámûy
) {

16 
AF_INET
:

17 
ßÀn
 = (
sockaddr_ö
);

19 #ifde‡
IPV6


20 
AF_INET6
:

21 
ßÀn
 = (
sockaddr_ö6
);

25 
	`îr_quô
("sctp_print_addresses: unknown AF");

29 
ss
 = (
sockaddr_°‹age
 *)((*)s†+ 
ßÀn
);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli.c

1 
	~"u≈.h
"

4 
	$s˘p°r_˛i
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

6 
sockaddr_ö
 
≥îaddr
;

7 
s˘p_¢drcvöfo
 
§i
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

9 
sockÀn_t
 
Àn
;

10 
out_sz
,
rd_sz
;

11 
msg_Êags
;

13 
	`bzîo
(&
§i
,(sri));

14 
	`fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 if(
£ndlöe
[0] != '[') {

16 
	`¥ötf
("Error,Üine must be ofÅhe form '[streamnum]text'\n");

19 
§i
.
söfo_°ªam
 = 
	`°πﬁ
(&
£ndlöe
[1],
NULL
,0);

20 
out_sz
 = 
	`°æí
(
£ndlöe
);

21 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, 
out_sz
,

22 
to
, 
tﬁí
,

24 
§i
.
söfo_°ªam
,

27 
Àn
 = (
≥îaddr
);

28 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªcvlöe
, (recvline),

29 (
SA
 *)&
≥îaddr
, &
Àn
,

30 &
§i
,&
msg_Êags
);

31 
	`¥ötf
("From str:%d seq:%d (assoc:0x%x):",

32 
§i
.
söfo_°ªam
,§i.
söfo_s¢
,

33 (
u_öt
)
§i
.
söfo_assoc_id
);

34 
	`¥ötf
("%.*s",
rd_sz
,
ªcvlöe
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli1.c

1 
	~"u≈.h
"

4 
	$s˘p°r_˛i
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

6 
sockaddr_ö
 
≥îaddr
;

7 
s˘p_¢drcvöfo
 
§i
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

9 
sockÀn_t
 
Àn
;

10 
out_sz
,
rd_sz
;

11 
msg_Êags
;

13 
	`bzîo
(&
§i
,(sri));

14 
	`fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 if(
£ndlöe
[0] != '[') {

16 
	`¥ötf
("Error,Üine must be ofÅhe form '[streamnum]text'\n");

19 
§i
.
söfo_°ªam
 = 
	`°πﬁ
(&
£ndlöe
[1],
NULL
,0);

20 
out_sz
 = 
	`°æí
(
£ndlöe
);

21 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, 
out_sz
,

22 
to
, 
tﬁí
,

24 
§i
.
söfo_°ªam
,

28 
Àn
 = (
≥îaddr
);

29 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªcvlöe
, (recvline),

30 (
SA
 *)&
≥îaddr
, &
Àn
,

31 &
§i
,&
msg_Êags
);

32 if(
msg_Êags
 & 
MSG_NOTIFICATION
)

33 
	`check_nŸifiˇti⁄
(
sock_fd
,
ªcvlöe
,
rd_sz
);

34 } 
msg_Êags
 & 
MSG_NOTIFICATION
);

35 
	`¥ötf
("From str:%d seq:%d (assoc:0x%x):",

36 
§i
.
söfo_°ªam
,§i.
söfo_s¢
,

37 (
u_öt
)
§i
.
söfo_assoc_id
);

38 
	`¥ötf
("%.*s",
rd_sz
,
ªcvlöe
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli_un.c

1 
	~"u≈.h
"

4 
	$s˘p°r_˛i
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

6 
sockaddr_ö
 
≥îaddr
;

7 
s˘p_¢drcvöfo
 
§i
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

9 
sockÀn_t
 
Àn
;

10 
out_sz
,
rd_sz
;

11 
msg_Êags
;

13 
	`bzîo
(&
§i
,(sri));

14 
	`fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 if(
£ndlöe
[0] != '[') {

16 
	`¥ötf
("Error,Üine must be ofÅhe form '[streamnum]text'\n");

19 
§i
.
söfo_°ªam
 = 
	`°πﬁ
(&
£ndlöe
[1],
NULL
,0);

21 
out_sz
 = 
	`°æí
(
£ndlöe
);

22 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, 
out_sz
,

23 
to
, 
tﬁí
,

25 
MSG_UNORDERED
,

26 
§i
.
söfo_°ªam
,

29 
Àn
 = (
≥îaddr
);

30 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªcvlöe
, (recvline),

31 (
SA
 *)&
≥îaddr
, &
Àn
,

32 &
§i
,&
msg_Êags
);

33 
	`¥ötf
("From str:%d seq:%d (assoc:0x%x):",

34 
§i
.
söfo_°ªam
,§i.
söfo_s¢
,

35 (
u_öt
)
§i
.
söfo_assoc_id
);

36 
	`¥ötf
("%.*s",
rd_sz
,
ªcvlöe
);

38 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcliecho.c

1 
	~"u≈.h
"

3 
	#SCTP_MAXLINE
 800

	)

6 
	$s˘p°r_˛i_echﬂŒ
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

8 
sockaddr_ö
 
≥îaddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
£ndlöe
[
SCTP_MAXLINE
], 
ªcvlöe
[SCTP_MAXLINE];

11 
sockÀn_t
 
Àn
;

12 
rd_sz
,
i
,
°rsz
;

13 
msg_Êags
;

15 
	`bzîo
(
£ndlöe
,(sendline));

16 
	`bzîo
(&
§i
,(sri));

17 
	`fgës
(
£ndlöe
, 
SCTP_MAXLINE
 - 9, 
Â
Ë!
NULL
) {

18 
°rsz
 = 
	`°æí
(
£ndlöe
);

19 if(
£ndlöe
[
°rsz
-1] == '\n') {

20 
£ndlöe
[
°rsz
-1] = '\0';

21 
°rsz
--;

23 
i
=0;i<
SERV_MAX_SCTP_STRM
;i++) {

24 
	`¢¥ötf
(
£ndlöe
 + 
°rsz
, (sendline) - strsz,

25 ".msg.%d", 
i
);

26 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, (sendline),

27 
to
, 
tﬁí
,

29 
i
,

32 
i
=0;i<
SERV_MAX_SCTP_STRM
;i++) {

33 
Àn
 = (
≥îaddr
);

34 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªcvlöe
, (recvline),

35 (
SA
 *)&
≥îaddr
, &
Àn
,

36 &
§i
,&
msg_Êags
);

37 
	`¥ötf
("From str:%d seq:%d (assoc:0x%x):",

38 
§i
.
söfo_°ªam
,§i.
söfo_s¢
,

39 (
u_öt
)
§i
.
söfo_assoc_id
);

40 
	`¥ötf
("%.*s\n",
rd_sz
,
ªcvlöe
);

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcliecho2.c

1 
	~"u≈.h
"

3 
	#SCTP_MAXLINE
 800

	)

6 
	$s˘p°r_˛i_echﬂŒ
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
)

8 
sockaddr_ö
 
≥îaddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
£ndlöe
[
SCTP_MAXLINE
], 
ªcvlöe
[SCTP_MAXLINE];

11 
sockÀn_t
 
Àn
;

12 
rd_sz
,
i
,
°rsz
;

13 
msg_Êags
;

15 
	`bzîo
(
£ndlöe
,(sendline));

16 
	`bzîo
(&
§i
,(sri));

17 
	`fgës
(
£ndlöe
, 
SCTP_MAXLINE
 - 9, 
Â
Ë!
NULL
) {

18 
°rsz
 = 
	`°æí
(
£ndlöe
);

19 if(
£ndlöe
[
°rsz
-1] == '\n') {

20 
£ndlöe
[
°rsz
-1] = '\0';

21 
°rsz
--;

24 
i
=0;i<
SERV_MAX_SCTP_STRM
;i++) {

25 
	`¢¥ötf
(
£ndlöe
 + 
°rsz
, (sendline) - strsz,

26 ".msg.%d 1", 
i
);

27 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, (sendline),

28 
to
, 
tﬁí
,

30 
i
,

32 
	`¢¥ötf
(
£ndlöe
 + 
°rsz
, (sendline) - strsz,

33 ".msg.%d 2", 
i
);

34 
	`S˘p_£ndmsg
(
sock_fd
, 
£ndlöe
, (sendline),

35 
to
, 
tﬁí
,

37 
i
,

40 
i
=0;i<
SERV_MAX_SCTP_STRM
*2;i++) {

41 
Àn
 = (
≥îaddr
);

43 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªcvlöe
, (recvline),

44 (
SA
 *)&
≥îaddr
, &
Àn
,

45 &
§i
,&
msg_Êags
);

46 
	`¥ötf
("From str:%d seq:%d (assoc:0x%x):",

47 
§i
.
söfo_°ªam
,§i.
söfo_s¢
,

48 (
u_öt
)
§i
.
söfo_assoc_id
);

49 
	`¥ötf
("%.*s\n",
rd_sz
,
ªcvlöe
);

52 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_wrapper.c

1 
	~"u≈.h
"

5 
	$S˘p_ªcvmsg
(
s
, *
msg
, 
size_t
 
Àn
,

6 
sockaddr
 *
‰om
, 
sockÀn_t
 *
‰omÀn
,

7 
s˘p_¢drcvöfo
 *
söfo
,

8 *
msg_Êags
)

10 
ªt
;

11 
ªt
 = 
	`s˘p_ªcvmsg
(
s
,
msg
,
Àn
,
‰om
,
‰omÀn
,
söfo
,
msg_Êags
);

12 if(
ªt
 < 0){

13 
	`îr_sys
("sctp_recvmsgÉrror");

15 (
ªt
);

16 
	}
}

20 
	$S˘p_£ndmsg
 (
s
, *
d©a
, 
size_t
 
Àn
, 
sockaddr
 *
to
,

21 
sockÀn_t
 
tﬁí
, 
uöt32_t
 
µid
, uöt32_à
Êags
,

22 
uöt16_t
 
°ªam_no
, 
uöt32_t
 
timëﬁive
, uöt32_à
c⁄ãxt
)

24 
ªt
;

25 
ªt
 = 
	`s˘p_£ndmsg
(
s
,
d©a
,
Àn
,
to
,
tﬁí
,
µid
,
Êags
,
°ªam_no
,

26 
timëﬁive
,
c⁄ãxt
);

27 if(
ªt
 < 0){

28 
	`îr_sys
("sctp_sendmsgÉrror");

30 (
ªt
);

31 
	}
}

34 
	$S˘p_bödx
(
sock_fd
,
sockaddr_°‹age
 *
©
,
num
,
›
)

36 
ªt
;

37 
ªt
 = 
	`s˘p_bödx
(
sock_fd
,
©
,
num
,
›
);

38 if(
ªt
 < 0){

39 
	`îr_sys
("sctp_bindxÉrror");

41 (
ªt
);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
;

7 
sockaddr_ö
 
£rvaddr
;

8 
s˘p_evít_subs¸ibe
 
ev¡s
;

9 
echo_to_Æl
=0;

11 if(
¨gc
 < 2)

12 
	`îr_quô
("Missing hostárgument - use '%s host [echo]'\n",

13 
¨gv
[0]);

14 if(
¨gc
 > 2) {

15 
	`¥ötf
("Echoing messagesÅoáll streams\n");

16 
echo_to_Æl
 = 1;

18 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

19 
	`bzîo
(&
£rvaddr
, (servaddr));

20 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

21 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

22 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

25 
	`bzîo
(&
ev¡s
, (evnts));

26 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

27 
	`Sësock›t
(
sock_fd
,
IPPROTO_SCTP
, 
SCTP_EVENTS
,

28 &
ev¡s
, (evnts));

29 if(
echo_to_Æl
 == 0)

30 
	`s˘p°r_˛i
(
°dö
,
sock_fd
,(
SA
 *)&
£rvaddr
,(servaddr));

32 
	`s˘p°r_˛i_echﬂŒ
(
°dö
,
sock_fd
,(
SA
 *)&
£rvaddr
,(servaddr));

33 
	`Clo£
(
sock_fd
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
;

7 
sockaddr_ö
 
£rvaddr
;

8 
s˘p_evít_subs¸ibe
 
ev¡s
;

9 
echo_to_Æl
=0;

10 
byemsg
[10];

12 if(
¨gc
 < 2)

13 
	`îr_quô
("Missing hostárgument - use '%s host [echo]'\n",

14 
¨gv
[0]);

15 if(
¨gc
 > 2) {

16 
	`¥ötf
("Echoing messagesÅoáll streams\n");

17 
echo_to_Æl
 = 1;

19 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

20 
	`bzîo
(&
£rvaddr
, (servaddr));

21 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

22 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

23 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

24 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

26 
	`bzîo
(&
ev¡s
, (evnts));

27 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

28 
	`Sësock›t
(
sock_fd
,
IPPROTO_SCTP
, 
SCTP_EVENTS
,

29 &
ev¡s
, (evnts));

31 if(
echo_to_Æl
 == 0)

32 
	`s˘p°r_˛i
(
°dö
,
sock_fd
,(
SA
 *)&
£rvaddr
,(servaddr));

34 
	`s˘p°r_˛i_echﬂŒ
(
°dö
,
sock_fd
,(
SA
 *)&
£rvaddr
,(servaddr));

35 
	`°r˝y
(
byemsg
,"goodbye");

36 
	`S˘p_£ndmsg
(
sock_fd
, 
byemsg
, 
	`°æí
(byemsg),

37 (
SA
 *)&
£rvaddr
, (servaddr),

39 
MSG_ABORT
,

41 
	`Clo£
(
sock_fd
);

44 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
;

7 
sockaddr_ö
 
£rvaddr
;

8 
s˘p_evít_subs¸ibe
 
ev¡s
;

10 if(
¨gc
 != 2)

11 
	`îr_quô
("Missing hostárgument - use '%s host'\n",

12 
¨gv
[0]);

13 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`bzîo
(&
ev¡s
, (evnts));

21 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

22 
ev¡s
.
s˘p_assocüti⁄_evít
 = 1;

23 
	`Sësock›t
(
sock_fd
,
IPPROTO_SCTP
, 
SCTP_EVENTS
,

24 &
ev¡s
, (evnts));

26 
	`s˘p°r_˛i
(
°dö
,
sock_fd
,(
SA
 *)&
£rvaddr
,(servaddr));

28 
	`˛o£
(
sock_fd
);

30 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

15 i‡(
¨gc
 == 2)

16 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

17 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

18 
	`bzîo
(&
£rvaddr
, (servaddr));

19 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

21 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

25 
	`bzîo
(&
ev¡s
, (evnts));

26 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

27 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

28 &
ev¡s
, (evnts));

30 
	`Li°í
(
sock_fd
, 
LISTENQ
);

32 
Àn
 = (
sockaddr_ö
);

33 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

34 (
SA
 *)&
˛üddr
, &
Àn
,

35 &
§i
,&
msg_Êags
);

36 if(
°ªam_ö¸emít
) {

37 
§i
.
söfo_°ªam
++;

38 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

39 
§i
.
söfo_°ªam
 = 0;

41 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

42 (
SA
 *)&
˛üddr
, 
Àn
,

43 
§i
.
söfo_µid
,

44 
§i
.
söfo_Êags
,

45 
§i
.
söfo_°ªam
,

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

14 
s˘p_öômsg
 
öôm
;

17 i‡(
¨gc
 == 2)

18 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

19 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

20 
	`bzîo
(&
öôm
,(initm));

21 
öôm
.
söô_num_o°ªams
 = 
SERV_MORE_STRMS_SCTP
;

22 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_INITMSG
,

23 &
öôm
, (initm));

25 
	`bzîo
(&
£rvaddr
, (servaddr));

26 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

27 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

28 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

30 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

32 
	`bzîo
(&
ev¡s
, (evnts));

33 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

34 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

35 &
ev¡s
, (evnts));

37 
	`Li°í
(
sock_fd
, 
LISTENQ
);

39 
Àn
 = (
sockaddr_ö
);

40 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

41 (
SA
 *)&
˛üddr
, &
Àn
,

42 &
§i
,&
msg_Êags
);

43 if(
°ªam_ö¸emít
) {

44 
§i
.
söfo_°ªam
++;

45 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

46 
§i
.
söfo_°ªam
 = 0;

48 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

49 (
SA
 *)&
˛üddr
, 
Àn
,

50 
§i
.
söfo_µid
,

51 
§i
.
söfo_Êags
,

52 
§i
.
söfo_°ªam
,

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

15 i‡(
¨gc
 == 2)

16 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

17 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

18 
	`bzîo
(&
£rvaddr
, (servaddr));

19 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

21 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

25 
	`bzîo
(&
ev¡s
, (evnts));

26 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

27 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

28 &
ev¡s
, (evnts));

30 
	`Li°í
(
sock_fd
, 
LISTENQ
);

33 
Àn
 = (
sockaddr_ö
);

34 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

35 (
SA
 *)&
˛üddr
, &
Àn
,

36 &
§i
,&
msg_Êags
);

37 if(
°ªam_ö¸emít
) {

38 
§i
.
söfo_°ªam
++;

39 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

40 
§i
.
söfo_°ªam
 = 0;

42 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

43 (
SA
 *)&
˛üddr
, 
Àn
,

44 
§i
.
söfo_µid
,

45 (
§i
.
söfo_Êags
|
MSG_EOF
),

46 
§i
.
söfo_°ªam
,

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
˛o£_time
;

13 
sockÀn_t
 
Àn
;

14 
size_t
 
rd_sz
;

17 i‡(
¨gc
 == 2)

18 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

19 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

20 
˛o£_time
 = 120;

21 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_AUTOCLOSE
,

22 &
˛o£_time
, (close_time));

24 
	`bzîo
(&
£rvaddr
, (servaddr));

25 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

26 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

27 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

29 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

31 
	`bzîo
(&
ev¡s
, (evnts));

32 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

33 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

34 &
ev¡s
, (evnts));

36 
	`Li°í
(
sock_fd
, 
LISTENQ
);

38 
Àn
 = (
sockaddr_ö
);

39 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

40 (
SA
 *)&
˛üddr
, &
Àn
,

41 &
§i
,&
msg_Êags
);

42 if(
°ªam_ö¸emít
) {

43 
§i
.
söfo_°ªam
++;

44 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

45 
§i
.
söfo_°ªam
 = 0;

47 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

48 (
SA
 *)&
˛üddr
, 
Àn
,

49 
§i
.
söfo_µid
,

50 
§i
.
söfo_Êags
,

51 
§i
.
söfo_°ªam
,

54 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv05.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
uöt8_t
 *
ªadbuf
;

7 
sock_fd
,
msg_Êags
;

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

15 i‡(
¨gc
 == 2)

16 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

17 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

18 
	`bzîo
(&
£rvaddr
, (servaddr));

19 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

21 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

25 
	`bzîo
(&
ev¡s
, (evnts));

26 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

27 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

28 &
ev¡s
, (evnts));

30 
	`Li°í
(
sock_fd
, 
LISTENQ
);

31 
rd_sz
 = 0;

34 
Àn
 = (
sockaddr_ö
);

35 
	`bzîo
(&
§i
,(sri));

36 
ªadbuf
 = 
	`pd≠i_ªcvmsg
(
sock_fd
, &
rd_sz
,

37 (
SA
 *)&
˛üddr
, &
Àn
,

38 &
§i
,&
msg_Êags
);

39 if(
ªadbuf
 =
NULL
)

42 if(
°ªam_ö¸emít
) {

43 
§i
.
söfo_°ªam
++;

44 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

45 
§i
.
söfo_°ªam
 = 0;

47 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

48 (
SA
 *)&
˛üddr
, 
Àn
,

49 
§i
.
söfo_µid
,

50 
§i
.
söfo_Êags
,

51 
§i
.
söfo_°ªam
,

54 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
°ªam_ö¸emít
=1;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

15 i‡(
¨gc
 == 2)

16 
°ªam_ö¸emít
 = 
	`©oi
(
¨gv
[1]);

17 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

18 
	`bzîo
(&
£rvaddr
, (servaddr));

19 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

21 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

26 
	`bzîo
(&
ev¡s
, (evnts));

27 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

28 
ev¡s
.
s˘p_assocüti⁄_evít
 = 1;

29 
ev¡s
.
s˘p_addªss_evít
 = 1;

30 
ev¡s
.
s˘p_£nd_Áûuª_evít
 = 1;

31 
ev¡s
.
s˘p_≥î_îr‹_evít
 = 1;

32 
ev¡s
.
s˘p_shutdown_evít
 = 1;

33 
ev¡s
.
s˘p_∑πül_dñivîy_evít
 = 1;

34 
ev¡s
.
s˘p_ad≠ti⁄_œyî_evít
 = 1;

35 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

36 &
ev¡s
, (evnts));

38 
	`Li°í
(
sock_fd
, 
LISTENQ
);

40 
Àn
 = (
sockaddr_ö
);

41 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

42 (
SA
 *)&
˛üddr
, &
Àn
,

43 &
§i
,&
msg_Êags
);

44 if(
msg_Êags
 & 
MSG_NOTIFICATION
) {

45 
	`¥öt_nŸifiˇti⁄
(
ªadbuf
);

49 if(
°ªam_ö¸emít
) {

50 
§i
.
söfo_°ªam
++;

51 if(
§i
.
söfo_°ªam
 >
	`s˘p_gë_no_°rms
(
sock_fd
,(
SA
 *)&
˛üddr
, 
Àn
))

52 
§i
.
söfo_°ªam
 = 0;

54 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

55 (
SA
 *)&
˛üddr
, 
Àn
,

56 
§i
.
söfo_µid
,

57 
§i
.
söfo_Êags
,

58 
§i
.
söfo_°ªam
,

61 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv07.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
;

7 
ªadbuf
[
BUFFSIZE
];

8 
sockaddr_ö
 
˛üddr
;

9 
s˘p_¢drcvöfo
 
§i
;

10 
s˘p_evít_subs¸ibe
 
ev¡s
;

11 
sockÀn_t
 
Àn
;

12 
size_t
 
rd_sz
;

14 if(
¨gc
 < 2)

15 
	`îr_quô
("Error, use %s [list ofáddressesÅo bind]\n",

16 
¨gv
[0]);

17 
sock_fd
 = 
	`Sockë
(
AF_INET6
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

19 if(
	`s˘p_böd_¨g_li°
(
sock_fd
, 
¨gv
 + 1, 
¨gc
 - 1))

20 
	`îr_sys
("Can't bindÅheáddress set");

22 
	`bzîo
(&
ev¡s
, (evnts));

23 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

25 
ev¡s
.
s˘p_assocüti⁄_evít
 = 1;

26 
ev¡s
.
s˘p_addªss_evít
 = 1;

27 
ev¡s
.
s˘p_£nd_Áûuª_evít
 = 1;

28 
ev¡s
.
s˘p_≥î_îr‹_evít
 = 1;

29 
ev¡s
.
s˘p_shutdown_evít
 = 1;

30 
ev¡s
.
s˘p_∑πül_dñivîy_evít
 = 1;

31 
ev¡s
.
s˘p_ad≠ti⁄_œyî_evít
 = 1;

32 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

33 &
ev¡s
, (evnts));

35 
	`Li°í
(
sock_fd
, 
LISTENQ
);

38 
Àn
 = (
sockaddr_ö
);

39 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

40 (
SA
 *)&
˛üddr
, &
Àn
,

41 &
§i
,&
msg_Êags
);

42 if(
msg_Êags
 & 
MSG_NOTIFICATION
) {

43 
	`¥öt_nŸifiˇti⁄
(
ªadbuf
);

46 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

47 (
SA
 *)&
˛üddr
, 
Àn
,

48 
§i
.
söfo_µid
,

49 
§i
.
söfo_Êags
,

50 
§i
.
söfo_°ªam
,

54 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv_fork.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sock_fd
,
msg_Êags
,
c⁄nfd
,
chûdpid
;

7 
s˘p_assoc_t
 
assoc
;

8 
ªadbuf
[
BUFFSIZE
];

9 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

10 
s˘p_¢drcvöfo
 
§i
;

11 
s˘p_evít_subs¸ibe
 
ev¡s
;

12 
sockÀn_t
 
Àn
;

13 
size_t
 
rd_sz
;

15 
sock_fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

19 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

21 
	`Böd
(
sock_fd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

23 
	`bzîo
(&
ev¡s
, (evnts));

24 
ev¡s
.
s˘p_d©a_io_evít
 = 1;

25 
	`Sësock›t
(
sock_fd
, 
IPPROTO_SCTP
, 
SCTP_EVENTS
,

26 &
ev¡s
, (evnts));

28 
	`Li°í
(
sock_fd
, 
LISTENQ
);

31 
Àn
 = (
sockaddr_ö
);

32 
rd_sz
 = 
	`S˘p_ªcvmsg
(
sock_fd
, 
ªadbuf
, (readbuf),

33 (
SA
 *)&
˛üddr
, &
Àn
,

34 &
§i
,&
msg_Êags
);

35 
	`S˘p_£ndmsg
(
sock_fd
, 
ªadbuf
, 
rd_sz
,

36 (
SA
 *)&
˛üddr
, 
Àn
,

37 
§i
.
söfo_µid
,

38 
§i
.
söfo_Êags
,

39 
§i
.
söfo_°ªam
,

41 
assoc
 = 
	`s˘p_addªss_to_associd
(
sock_fd
,(
SA
 *)&
˛üddr
,
Àn
);

42 if(()
assoc
 == 0){

43 
	`îr_ªt
("Can't getássociation id");

46 
c⁄nfd
 = 
	`s˘p_≥ñoff
(
sock_fd
,
assoc
);

47 if(
c⁄nfd
 == -1){

48 
	`îr_ªt
("sctp_peeloff fails");

51 if((
chûdpid
 = 
	`f‹k
()) == 0) {

52 
	`Clo£
(
sock_fd
);

53 
	`°r_echo
(
c⁄nfd
);

54 
	`exô
(0);

56 
	`Clo£
(
c⁄nfd
);

60 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sctp/unp.h

4 #i‚def 
__u≈_h


5 
	#__u≈_h


	)

7 
	~"../c⁄fig.h
"

13 
	~<sys/ty≥s.h
>

14 
	~<sys/sockë.h
>

15 
	~<sys/time.h
>

16 
	~<time.h
>

17 
	~<√töë/ö.h
>

18 
	~<¨∑/öë.h
>

19 
	~<√töë/s˘p.h
>

20 
	~<î∫o.h
>

21 
	~<f˙é.h
>

22 
	~<√tdb.h
>

23 
	~<sig«l.h
>

24 
	~<°dio.h
>

25 
	~<°dlib.h
>

26 
	~<°rög.h
>

27 
	~<sys/°©.h
>

28 
	~<sys/uio.h
>

29 
	~<uni°d.h
>

30 
	~<sys/waô.h
>

31 
	~<sys/un.h
>

33 #ifdef 
HAVE_SYS_SELECT_H


34 
	~<sys/£À˘.h
>

37 #ifdef 
HAVE_POLL_H


38 
	~<pﬁl.h
>

41 #ifdef 
HAVE_STRINGS_H


42 
	~<°rögs.h
>

48 #ifdef 
HAVE_SYS_IOCTL_H


49 
	~<sys/io˘l.h
>

51 #ifdef 
HAVE_SYS_FILIO_H


52 
	~<sys/fûio.h
>

54 #ifdef 
HAVE_SYS_SOCKIO_H


55 
	~<sys/sockio.h
>

58 #ifdef 
HAVE_PTHREAD_H


59 
	~<±hªad.h
>

63 #ifdef 
__osf__


64 #unde‡
ªcv


65 #unde‡
£nd


66 
	#ªcv
(
a
,
b
,
c
,
d
Ë
	`ªcv‰om
◊,b,c,d,0,0)

	)

67 
	#£nd
(
a
,
b
,
c
,
d
Ë
	`£ndto
◊,b,c,d,0,0)

	)

70 #i‚def 
INADDR_NONE


72 
	#INADDR_NONE
 0xfffffff‡

	)

75 #i‚def 
SHUT_RD


76 
	#SHUT_RD
 0

	)

77 
	#SHUT_WR
 1

	)

78 
	#SHUT_RDWR
 2

	)

85 #i‚de‡
INET_ADDRSTRLEN


87 
	#INET_ADDRSTRLEN
 16

	)

93 #i‚de‡
INET6_ADDRSTRLEN


95 
	#INET6_ADDRSTRLEN
 46

	)

103 #i‚def 
HAVE_BZERO


104 
	#bzîo
(
±r
,
n
Ë
	`mem£t
’å, 0,Ç)

	)

110 #i‚def 
HAVE_GETHOSTBYNAME2


111 
	#gëho°by«me2
(
ho°
,
Ámûy
Ë
	`gëho°by«me
((ho°))

	)

115 
	sö_pktöfo
 {

116 
ö_addr
 
	mùi_addr
;

117 
	mùi_ifödex
;

126 #i‚def 
CMSG_LEN


128 
	#CMSG_LEN
(
size
Ë((
cmsghdr
Ë+ (size))

	)

130 #i‚def 
CMSG_SPACE


132 
	#CMSG_SPACE
(
size
Ë((
cmsghdr
Ë+ (size))

	)

138 #i‚def 
SUN_LEN


140 
	#SUN_LEN
(
su
) \

141 ((*(
su
)Ë- ((su)->
sun_∑th
Ë+ 
	`°æí
((su)->sun_∑th))

	)

146 #i‚def 
AF_LOCAL


147 
	#AF_LOCAL
 
AF_UNIX


	)

149 #i‚def 
PF_LOCAL


150 
	#PF_LOCAL
 
PF_UNIX


	)

157 #i‚de‡
INFTIM


158 
	#INFTIM
 (-1Ë

	)

160 #ifdef 
HAVE_POLL_H


161 
	#INFTIM_UNPH


	)

167 
	#LISTENQ
 1024

	)

170 
	#MAXLINE
 4096

	)

171 
	#MAXSOCKADDR
 128

	)

172 
	#BUFFSIZE
 8192

	)

175 
	#SERV_PORT
 9877

	)

176 
	#SERV_PORT_STR
 "9877"

	)

178 
	#SCTP_PDAPI_INCR_SZ
 65535

	)

179 
	#SCTP_PDAPI_NEED_MORE_THRESHOLD
 1024

	)

180 
	#SERV_MAX_SCTP_STRM
 10

	)

181 
	#SERV_MORE_STRMS_SCTP
 20

	)

184 
	#UNIXSTR_PATH
 "/tmp/unix.°r"

	)

185 
	#UNIXDG_PATH
 "/tmp/unix.dg"

	)

195 
	#SA
 
sockaddr


	)

197 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

199 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

202 
	tSigfunc
();

204 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

205 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

207 #i‚def 
HAVE_ADDRINFO_STRUCT


208 
	~"../lib/addröfo.h
"

211 #i‚def 
HAVE_IF_NAMEINDEX_STRUCT


212 
	sif_«meödex
 {

213 
	mif_ödex
;

214 *
	mif_«me
;

221 #i‚def 
HAVE_TIMESPEC_STRUCT


222 
	stime•ec
 {

223 
time_t
 
	mtv_£c
;

224 
	mtv_n£c
;

233 
c⁄√˘_n⁄b
(, c⁄° 
SA
 *, 
sockÀn_t
, );

234 
c⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

235 
d´m⁄_öô
(const *, );

236 
d´m⁄_öëd
(const *, );

237 
dg_˛i
(
FILE
 *, , c⁄° 
SA
 *, 
sockÀn_t
);

238 
dg_echo
(, 
SA
 *, 
sockÀn_t
);

239 *
gf_time
();

240 
hóπbót_˛i
(, , );

241 
hóπbót_£rv
(, , );

242 
addröfo
 *
ho°_£rv
(const *, const *, , );

243 
öë_§¸t_add
(*, );

244 
u_ch¨
 *
öë_§¸t_öô
();

245 
öë_§¸t_¥öt
(
u_ch¨
 *, );

246 **
my_addrs
(*);

247 
ªadabÀ_timeo
(, );

248 
ssize_t
 
ªadlöe
(, *, 
size_t
);

249 
ssize_t
 
ªadn
(, *, 
size_t
);

250 
ssize_t
 
ªad_fd
(, *, 
size_t
, *);

251 
ssize_t
 
ªcv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

252 
ö_pktöfo
 *);

253 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

254 
sock_böd_wûd
(, );

255 
sock_cmp_addr
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

256 
sock_cmp_p‹t
(c⁄° 
SA
 *, c⁄° SA *, 
sockÀn_t
);

257 
sock_gë_p‹t
(c⁄° 
SA
 *, 
sockÀn_t
);

258 
sock_£t_addr
(
SA
 *, 
sockÀn_t
, const *);

259 
sock_£t_p‹t
(
SA
 *, 
sockÀn_t
, );

260 
sock_£t_wûd
(
SA
 *, 
sockÀn_t
);

261 *
sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

262 *
sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

263 
sockfd_to_Ámûy
();

264 
°r_echo
();

265 
°r_˛i
(
FILE
 *, );

266 
s˘p°r_˛i
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
, 
sockÀn_t
 
tﬁí
);

267 
s˘p°r_˛i_echﬂŒ
(
FILE
 *
Â
, 
sock_fd
, 
sockaddr
 *
to
,

268 
sockÀn_t
 
tﬁí
);

269 
uöt8_t
 *
s˘p_pd≠i_ªcvmsg
(
sock_fd
, *
rdÀn
, 
SA
 *
‰om
, *
‰om_Àn
,

270 
s˘p_¢drcvöfo
 *
§i
, *
msg_Êags
);

271 
s˘p_böd_¨g_li°
(
sock_fd
, **
¨gv
, 
¨gc
);

273 
s˘p_¥öt_addªs£s
(
sockaddr_°‹age
 *
addrs
, 
num
);

275 
s˘p_check_nŸifiˇti⁄
(
sock_fd
,*
ªcvlö
);

277 
	#SCTP_ON_DEMAND_HB
 1

	)

278 
	#SCTP_SET_HB_INTERVAL
 2

	)

279 
	#SCTP_DISABLE_HB
 3

	)

280 
s˘p_hóπbót_a˘i⁄
(
sock_fd
, 
sockaddr
 *
ß
,

281 
a˘i⁄
, 
u_öt
 
vÆue
);

283 
s˘p_assoc_t


284 
s˘p_addªss_to_associd
(
sock_fd
, 
sockaddr
 *
ß
, 
sockÀn_t
);

288 
s˘p_¥öt_nŸifiˇti⁄
(*
nŸify_buf
);

290 
t˝_c⁄√˘
(const *, const *);

291 
t˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

292 
tv_sub
(
timevÆ
 *, timeval *);

293 
udp_˛õ¡
(c⁄° *, c⁄° *, **, 
sockÀn_t
 *);

294 
udp_c⁄√˘
(const *, const *);

295 
udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

296 
wrôabÀ_timeo
(, );

297 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

298 
ssize_t
 
wrôe_fd
(, *, 
size_t
, );

300 #ifdef 
MCAST


301 
mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

302 
mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

303 
mˇ°_gë_if
();

304 
mˇ°_gë_lo›
();

305 
mˇ°_gë_âl
();

306 
mˇ°_£t_if
(, c⁄° *, 
u_öt
);

307 
mˇ°_£t_lo›
(, );

308 
mˇ°_£t_âl
(, );

310 
Mˇ°_Àave
(, c⁄° 
SA
 *, 
sockÀn_t
);

311 
Mˇ°_joö
(, c⁄° 
SA
 *, 
sockÀn_t
, c⁄° *, 
u_öt
);

312 
Mˇ°_gë_if
();

313 
Mˇ°_gë_lo›
();

314 
Mˇ°_gë_âl
();

315 
Mˇ°_£t_if
(, c⁄° *, 
u_öt
);

316 
Mˇ°_£t_lo›
(, );

317 
Mˇ°_£t_âl
(, );

320 
ö_cksum
(*, );

322 #i‚def 
HAVE_GETADDRINFO_PROTO


323 
gëaddröfo
(c⁄° *, c⁄° *, c⁄° 
addröfo
 *,

324 
addröfo
 **);

325 
‰ìaddröfo
(
addröfo
 *);

326 *
gai_°ªº‹
();

329 #i‚def 
HAVE_GETNAMEINFO_PROTO


330 
gë«meöfo
(c⁄° 
SA
 *, 
sockÀn_t
, *, 
size_t
, *, size_t, );

333 #i‚def 
HAVE_GETHOSTNAME_PROTO


334 
gëho°«me
(*, );

337 #i‚def 
HAVE_HSTRERROR_PROTO


338 c⁄° *
h°ªº‹
();

341 #i‚def 
HAVE_IF_NAMETOINDEX_PROTO


342 
if_«mëoödex
(const *);

343 *
if_ödext⁄ame
(, *);

344 
if_‰ì«meödex
(
if_«meödex
 *);

345 
if_«meödex
 *if_nameindex();

348 #i‚def 
HAVE_INET_PTON_PROTO


349 
öë_±⁄
(, const *, *);

350 c⁄° *
öë_¡›
(, c⁄° *, *, 
size_t
);

353 #i‚def 
HAVE_INET_ATON_PROTO


354 
öë_©⁄
(c⁄° *, 
ö_addr
 *);

357 #i‚def 
HAVE_ISFDTYPE_PROTO


358 
isfdty≥
(, );

361 #i‚def 
HAVE_PSELECT_PROTO


362 
p£À˘
(, 
fd_£t
 *, fd_set *, fd_set *,

363 c⁄° 
time•ec
 *, c⁄° 
sig£t_t
 *);

366 #i‚def 
HAVE_SOCKATMARK_PROTO


367 
sock©m¨k
();

370 #i‚def 
HAVE_SNPRINTF_PROTO


371 
¢¥ötf
(*, 
size_t
, const *, ...);

375 
C⁄√˘_timeo
(, c⁄° 
SA
 *, 
sockÀn_t
, );

376 
addröfo
 *
Ho°_£rv
(const *, const *, , );

377 c⁄° *
I√t_¡›
(, c⁄° *, *, 
size_t
);

378 
I√t_±⁄
(, const *, *);

379 *
If_ödext⁄ame
(, *);

380 
If_«mëoödex
(const *);

381 
if_«meödex
 *
If_«meödex
();

382 **
My_addrs
(*);

383 
ssize_t
 
Ród_fd
(, *, 
size_t
, *);

384 
RódabÀ_timeo
(, );

385 
ssize_t
 
Recv‰om_Êags
(, *, 
size_t
, *, 
SA
 *, 
sockÀn_t
 *,

386 
ö_pktöfo
 *);

387 
Sigfunc
 *
Sig«l
(, Sigfunc *);

388 
Sigfunc
 *
Sig«l_öå
(, Sigfunc *);

389 
Sock_böd_wûd
(, );

390 *
Sock_¡›
(c⁄° 
SA
 *, 
sockÀn_t
);

391 *
Sock_¡›_ho°
(c⁄° 
SA
 *, 
sockÀn_t
);

392 
Sockfd_to_Ámûy
();

393 
T˝_c⁄√˘
(const *, const *);

394 
T˝_li°í
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

395 
Udp_˛õ¡
(c⁄° *, c⁄° *, **, 
sockÀn_t
 *);

396 
Udp_c⁄√˘
(const *, const *);

397 
Udp_£rvî
(c⁄° *, c⁄° *, 
sockÀn_t
 *);

398 
ssize_t
 
Wrôe_fd
(, *, 
size_t
, );

399 
WrôabÀ_timeo
(, );

402 *
CÆloc
(
size_t
, size_t);

403 
Clo£
();

404 
Dup2
(, );

405 
F˙é
(, , );

406 
Gëtimeofday
(
timevÆ
 *, *);

407 
Io˘l
(, , *);

408 
pid_t
 
F‹k
();

409 *
MÆloc
(
size_t
);

410 
Mkãmp
(*);

411 *
Mm≠
(*, 
size_t
, , , , 
off_t
);

412 
O≥n
(c⁄° *, , 
mode_t
);

413 
Pùe
(*
fds
);

414 
ssize_t
 
Ród
(, *, 
size_t
);

415 
Sigadd£t
(
sig£t_t
 *, );

416 
Sigdñ£t
(
sig£t_t
 *, );

417 
Sigem±y£t
(
sig£t_t
 *);

418 
Sigfûl£t
(
sig£t_t
 *);

419 
Sigismembî
(c⁄° 
sig£t_t
 *, );

420 
Sig≥ndög
(
sig£t_t
 *);

421 
Sig¥ocmask
(, c⁄° 
sig£t_t
 *, sigset_t *);

422 *
Sådup
(const *);

423 
Sysc⁄f
();

424 
Sys˘l
(*, 
u_öt
, *, 
size_t
 *, *, size_t);

425 
U∆ök
(const *);

426 
pid_t
 
Waô
(*);

427 
pid_t
 
Waôpid
(pid_t, *, );

428 
Wrôe
(, *, 
size_t
);

431 
F˛o£
(
FILE
 *);

432 
FILE
 *
Fd›í
(, const *);

433 *
Fgës
(*, , 
FILE
 *);

434 
FILE
 *
F›í
(const *, const *);

435 
Fputs
(c⁄° *, 
FILE
 *);

438 
Ac˚±
(, 
SA
 *, 
sockÀn_t
 *);

439 
Böd
(, c⁄° 
SA
 *, 
sockÀn_t
);

440 
C⁄√˘
(, c⁄° 
SA
 *, 
sockÀn_t
);

441 
Gë≥î«me
(, 
SA
 *, 
sockÀn_t
 *);

442 
Gësock«me
(, 
SA
 *, 
sockÀn_t
 *);

443 
Gësock›t
(, , , *, 
sockÀn_t
 *);

444 
Isfdty≥
(, );

445 
Li°í
(, );

446 #ifdef 
HAVE_POLL


447 
Pﬁl
(
pﬁlfd
 *, , );

449 
ssize_t
 
Ródlöe
(, *, 
size_t
);

450 
ssize_t
 
Ródn
(, *, 
size_t
);

451 
ssize_t
 
Recv
(, *, 
size_t
, );

452 
ssize_t
 
Recv‰om
(, *, 
size_t
, , 
SA
 *, 
sockÀn_t
 *);

453 
ssize_t
 
Recvmsg
(, 
msghdr
 *, );

454 
Sñe˘
(, 
fd_£t
 *, fd_£à*, fd_£à*, 
timevÆ
 *);

455 
Síd
(, c⁄° *, 
size_t
, );

456 
Sídto
(, c⁄° *, 
size_t
, , c⁄° 
SA
 *, 
sockÀn_t
);

457 
Sídmsg
(, c⁄° 
msghdr
 *, );

458 
Sësock›t
(, , , c⁄° *, 
sockÀn_t
);

459 
Shutdown
(, );

460 
Sock©m¨k
();

461 
Sockë
(, , );

462 
Sockë∑ú
(, , , *);

463 
Wrôí
(, *, 
size_t
);

465 
îr_dump
(const *, ...);

466 
îr_msg
(const *, ...);

467 
îr_quô
(const *, ...);

468 
îr_ªt
(const *, ...);

469 
îr_sys
(const *, ...);

	@/media/sf_ddrive/progs/network/unpv13e/select/strcliselect01.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
maxfdp1
;

7 
fd_£t
 
r£t
;

8 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

10 
	`FD_ZERO
(&
r£t
);

12 
	`FD_SET
(
	`fûío
(
Â
), &
r£t
);

13 
	`FD_SET
(
sockfd
, &
r£t
);

14 
maxfdp1
 = 
	`max
(
	`fûío
(
Â
), 
sockfd
) + 1;

15 
	`Sñe˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL);

17 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

18 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0)

19 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

20 
	`Fputs
(
ªcvlöe
, 
°dout
);

23 i‡(
	`FD_ISSET
(
	`fûío
(
Â
), &
r£t
)) {

24 i‡(
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë=
NULL
)

26 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/select/strcliselect02.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
maxfdp1
, 
°döeof
;

7 
fd_£t
 
r£t
;

8 
buf
[
MAXLINE
];

9 
n
;

11 
°döeof
 = 0;

12 
	`FD_ZERO
(&
r£t
);

14 i‡(
°döeof
 == 0)

15 
	`FD_SET
(
	`fûío
(
Â
), &
r£t
);

16 
	`FD_SET
(
sockfd
, &
r£t
);

17 
maxfdp1
 = 
	`max
(
	`fûío
(
Â
), 
sockfd
) + 1;

18 
	`Sñe˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL);

20 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

21 i‡–(
n
 = 
	`Ród
(
sockfd
, 
buf
, 
MAXLINE
)) == 0) {

22 i‡(
°döeof
 == 1)

25 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

28 
	`Wrôe
(
	`fûío
(
°dout
), 
buf
, 
n
);

31 i‡(
	`FD_ISSET
(
	`fûío
(
Â
), &
r£t
)) {

32 i‡–(
n
 = 
	`Ród
(
	`fûío
(
Â
), 
buf
, 
MAXLINE
)) == 0) {

33 
°döeof
 = 1;

34 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

35 
	`FD_CLR
(
	`fûío
(
Â
), &
r£t
);

39 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/select/tcpcli01.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/select/tcpcli02.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/select/tcpcli03.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli03 <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(19);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`shutdown
(
sockfd
, 
SHUT_RD
);

24 
	`∑u£
();

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child.h

2 
pid_t
 
	mchûd_pid
;

3 
	mchûd_pùefd
;

4 
	mchûd_°©us
;

5 
	mchûd_cou¡
;

6 } 
	tChûd
;

8 
Chûd
 *
	g˝å
;

	@/media/sf_ddrive/progs/network/unpv13e/server/child02.c

2 
	~"u≈.h
"

4 
pid_t


5 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

7 
pid_t
 
pid
;

8 
	`chûd_maö
(, , );

10 i‡–(
pid
 = 
	`F‹k
()) > 0)

11 (
pid
);

13 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

14 
	}
}

19 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

21 
c⁄nfd
;

22 
	`web_chûd
();

23 
sockÀn_t
 
˛ûí
;

24 
sockaddr
 *
˛üddr
;

26 
˛üddr
 = 
	`MÆloc
(
addæí
);

28 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

30 
˛ûí
 = 
addæí
;

31 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

33 
	`web_chûd
(
c⁄nfd
);

34 
	`Clo£
(
c⁄nfd
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child02l.c

1 
	~"u≈.h
"

3 
pid_t


4 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

6 
pid_t
 
pid
;

7 
	`chûd_maö
(, , );

9 i‡–(
pid
 = 
	`F‹k
()) > 0)

10 (
pid
);

12 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

13 
	}
}

16 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

18 
c⁄nfd
;

19 
	`web_chûd
();

20 
fd_£t
 
r£t
;

21 
sockÀn_t
 
˛ûí
;

22 
sockaddr
 *
˛üddr
;

24 
˛üddr
 = 
	`MÆloc
(
addæí
);

26 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

27 
	`FD_ZERO
(&
r£t
);

29 
	`FD_SET
(
li°ífd
, &
r£t
);

30 
	`Sñe˘
(
li°ífd
+1, &
r£t
, 
NULL
, NULL, NULL);

31 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
) == 0)

32 
	`îr_quô
("listenfdÑeadable");

34 
˛ûí
 = 
addæí
;

35 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

37 
	`web_chûd
(
c⁄nfd
);

38 
	`Clo£
(
c⁄nfd
);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child02m.c

1 
	~"u≈.h
"

3 
pid_t


4 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

6 
pid_t
 
pid
;

7 
	`chûd_maö
(, , );

9 i‡–(
pid
 = 
	`F‹k
()) > 0)

10 (
pid
);

12 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

13 
	}
}

16 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

18 
c⁄nfd
;

19 
	`web_chûd
();

20 
sockÀn_t
 
˛ûí
;

21 
sockaddr
 *
˛üddr
;

22 *
˝å
;

24 
˛üddr
 = 
	`MÆloc
(
addæí
);

26 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

28 
˛ûí
 = 
addæí
;

29 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

30 
˝å
[
i
]++;

32 
	`web_chûd
(
c⁄nfd
);

33 
	`Clo£
(
c⁄nfd
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child03.c

1 
	~"u≈.h
"

3 
pid_t


4 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

6 
pid_t
 
pid
;

7 
	`chûd_maö
(, , );

9 i‡–(
pid
 = 
	`F‹k
()) > 0)

10 (
pid
);

12 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

13 
	}
}

16 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

18 
c⁄nfd
;

19 
	`web_chûd
();

20 
sockÀn_t
 
˛ûí
;

21 
sockaddr
 *
˛üddr
;

23 
˛üddr
 = 
	`MÆloc
(
addæí
);

25 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

27 
˛ûí
 = 
addæí
;

28 
	`my_lock_waô
();

29 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

30 
	`my_lock_ªÀa£
();

32 
	`web_chûd
(
c⁄nfd
);

33 
	`Clo£
(
c⁄nfd
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child03m.c

1 
	~"u≈.h
"

3 
pid_t


4 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

6 
pid_t
 
pid
;

7 
	`chûd_maö
(, , );

9 i‡–(
pid
 = 
	`F‹k
()) > 0)

10 (
pid
);

12 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

13 
	}
}

16 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

18 
c⁄nfd
;

19 
	`web_chûd
();

20 
sockÀn_t
 
˛ûí
;

21 
sockaddr
 *
˛üddr
;

22 *
˝å
;

24 
˛üddr
 = 
	`MÆloc
(
addæí
);

26 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

28 
˛ûí
 = 
addæí
;

29 
	`my_lock_waô
();

30 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

31 
	`my_lock_ªÀa£
();

32 
˝å
[
i
]++;

34 
	`web_chûd
(
c⁄nfd
);

35 
	`Clo£
(
c⁄nfd
);

37 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child04.c

1 
	~"u≈.h
"

3 
pid_t


4 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

6 
pid_t
 
pid
;

7 
	`chûd_maö
(, , );

9 i‡–(
pid
 = 
	`F‹k
()) > 0)

10 (
pid
);

12 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

13 
	}
}

16 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

18 
c⁄nfd
;

19 
	`web_chûd
();

20 
sockÀn_t
 
˛ûí
;

21 
sockaddr
 *
˛üddr
;

23 
˛üddr
 = 
	`MÆloc
(
addæí
);

25 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

27 
˛ûí
 = 
addæí
;

28 
	`my_lock_waô
();

29 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

30 
	`my_lock_ªÀa£
();

32 
	`web_chûd
(
c⁄nfd
);

33 
	`Clo£
(
c⁄nfd
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/child05.c

2 
	~"u≈.h
"

3 
	~"chûd.h
"

5 
pid_t


6 
	$chûd_make
(
i
, 
li°ífd
, 
addæí
)

8 
sockfd
[2];

9 
pid_t
 
pid
;

10 
	`chûd_maö
(, , );

12 
	`Sockë∑ú
(
AF_LOCAL
, 
SOCK_STREAM
, 0, 
sockfd
);

14 i‡–(
pid
 = 
	`F‹k
()) > 0) {

15 
	`Clo£
(
sockfd
[1]);

16 
˝å
[
i
].
chûd_pid
 = 
pid
;

17 
˝å
[
i
].
chûd_pùefd
 = 
sockfd
[0];

18 
˝å
[
i
].
chûd_°©us
 = 0;

19 (
pid
);

22 
	`Dup2
(
sockfd
[1], 
STDERR_FILENO
);

23 
	`Clo£
(
sockfd
[0]);

24 
	`Clo£
(
sockfd
[1]);

25 
	`Clo£
(
li°ífd
);

26 
	`chûd_maö
(
i
, 
li°ífd
, 
addæí
);

27 
	}
}

32 
	$chûd_maö
(
i
, 
li°ífd
, 
addæí
)

34 
c
;

35 
c⁄nfd
;

36 
ssize_t
 
n
;

37 
	`web_chûd
();

39 
	`¥ötf
("chûd %ld sèπög\n", (Ë
	`gëpid
());

41 i‡–(
n
 = 
	`Ród_fd
(
STDERR_FILENO
, &
c
, 1, &
c⁄nfd
)) == 0)

42 
	`îr_quô
("read_fdÑeturned 0");

43 i‡(
c⁄nfd
 < 0)

44 
	`îr_quô
("no descriptor fromÑead_fd");

46 
	`web_chûd
(
c⁄nfd
);

47 
	`Clo£
(
c⁄nfd
);

49 
	`Wrôe
(
STDERR_FILENO
, "", 1);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/client.c

1 
	~"u≈.h
"

3 
	#MAXN
 16384

	)

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
, 
j
, 
fd
, 
nchûdªn
, 
∆o›s
, 
nbyãs
;

9 
pid_t
 
pid
;

10 
ssize_t
 
n
;

11 
ªque°
[
MAXLINE
], 
ª∂y
[
MAXN
];

13 i‡(
¨gc
 != 6)

14 
	`îr_quô
("usage: client <hostname or IPaddr> <port> <#children> "

17 
nchûdªn
 = 
	`©oi
(
¨gv
[3]);

18 
∆o›s
 = 
	`©oi
(
¨gv
[4]);

19 
nbyãs
 = 
	`©oi
(
¨gv
[5]);

20 
	`¢¥ötf
(
ªque°
, ‘eque°), "%d\n", 
nbyãs
);

22 
i
 = 0; i < 
nchûdªn
; i++) {

23 i‡–(
pid
 = 
	`F‹k
()) == 0) {

24 
j
 = 0; j < 
∆o›s
; j++) {

25 
fd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

27 
	`Wrôe
(
fd
, 
ªque°
, 
	`°æí
(request));

29 i‡–(
n
 = 
	`Ródn
(
fd
, 
ª∂y
, 
nbyãs
)) !=Çbytes)

30 
	`îr_quô
("£rvîÑëu∫ed %d byãs", 
n
);

32 
	`Clo£
(
fd
);

34 
	`¥ötf
("chûd %d d⁄e\n", 
i
);

35 
	`exô
(0);

40 
	`waô
(
NULL
) > 0)

42 i‡(
î∫o
 !
ECHILD
)

43 
	`îr_sys
("waitÉrror");

45 
	`exô
(0);

46 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/clientrst.c

1 
	~"u≈.h
"

3 
	#MAXN
 16384

	)

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
, 
j
, 
fd
, 
nchûdªn
, 
∆o›s
, 
nbyãs
;

9 
pid_t
 
pid
;

10 
ssize_t
 
n
;

11 
ªque°
[
MAXLINE
], 
ª∂y
[
MAXN
];

13 i‡(
¨gc
 != 6)

14 
	`îr_quô
("usage: client <hostname or IPaddr> <port> <#children> "

17 
nchûdªn
 = 
	`©oi
(
¨gv
[3]);

18 
∆o›s
 = 
	`©oi
(
¨gv
[4]);

19 
nbyãs
 = 
	`©oi
(
¨gv
[5]);

20 
	`¢¥ötf
(
ªque°
, ‘eque°), "%d\n", 
nbyãs
);

22 
i
 = 0; i < 
nchûdªn
; i++) {

23 i‡–(
pid
 = 
	`F‹k
()) == 0) {

24 
j
 = 0; j < 
∆o›s
; j++) {

25 
fd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

39 i‡(
i
 =2 && (
j
 % 3) == 0) {

40 
lögî
 
lög
;

42 
lög
.
l_⁄off
 = 1;

43 
lög
.
l_lögî
 = 0;

44 
	`Sësock›t
(
fd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lög
, (ling));

45 
	`Clo£
(
fd
);

48 
fd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

51 
	`Wrôe
(
fd
, 
ªque°
, 
	`°æí
(request));

53 i‡–(
n
 = 
	`Ródn
(
fd
, 
ª∂y
, 
nbyãs
)) !=Çbytes)

54 
	`îr_quô
("£rvîÑëu∫ed %d byãs", 
n
);

56 
	`Clo£
(
fd
);

58 
	`¥ötf
("chûd %d d⁄e\n", 
i
);

59 
	`exô
(0);

64 
	`waô
(
NULL
) > 0)

66 i‡(
î∫o
 !
ECHILD
)

67 
	`îr_sys
("waitÉrror");

69 
	`exô
(0);

70 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/lock_fcntl.c

2 
	~"u≈.h
"

4 
Êock
 
	glock_ô
, 
	gu∆ock_ô
;

5 
	glock_fd
 = -1;

9 
	$my_lock_öô
(*
∑th«me
)

11 
lock_fûe
[1024];

14 
	`°∫˝y
(
lock_fûe
, 
∑th«me
, (lock_file));

15 
lock_fd
 = 
	`Mk°emp
(
lock_fûe
);

17 
	`U∆ök
(
lock_fûe
);

19 
lock_ô
.
l_ty≥
 = 
F_WRLCK
;

20 
lock_ô
.
l_whí˚
 = 
SEEK_SET
;

21 
lock_ô
.
l_°¨t
 = 0;

22 
lock_ô
.
l_Àn
 = 0;

24 
u∆ock_ô
.
l_ty≥
 = 
F_UNLCK
;

25 
u∆ock_ô
.
l_whí˚
 = 
SEEK_SET
;

26 
u∆ock_ô
.
l_°¨t
 = 0;

27 
u∆ock_ô
.
l_Àn
 = 0;

28 
	}
}

33 
	$my_lock_waô
()

35 
rc
;

37  (
rc
 = 
	`f˙é
(
lock_fd
, 
F_SETLKW
, &
lock_ô
)) < 0) {

38 i‡(
î∫o
 =
EINTR
)

41 
	`îr_sys
("fcntlÉrror for my_lock_wait");

43 
	}
}

46 
	$my_lock_ªÀa£
()

48 i‡(
	`f˙é
(
lock_fd
, 
F_SETLKW
, &
u∆ock_ô
) < 0)

49 
	`îr_sys
("fcntlÉrror for my_lock_release");

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/lock_pthread.c

2 
	~"u≈thªad.h
"

3 
	~<sys/mm™.h
>

5 
±hªad_muãx_t
 *
	gm±r
;

8 
	$my_lock_öô
(*
∑th«me
)

10 
fd
;

11 
±hªad_muãx©å_t
 
m©å
;

13 
fd
 = 
	`O≥n
("/dev/zîo", 
O_RDWR
, 0);

15 
m±r
 = 
	`Mm≠
(0, (
±hªad_muãx_t
), 
PROT_READ
 | 
PROT_WRITE
,

16 
MAP_SHARED
, 
fd
, 0);

17 
	`Clo£
(
fd
);

19 
	`Pthªad_muãx©å_öô
(&
m©å
);

20 
	`Pthªad_muãx©å_£çsh¨ed
(&
m©å
, 
PTHREAD_PROCESS_SHARED
);

21 
	`Pthªad_muãx_öô
(
m±r
, &
m©å
);

22 
	}
}

27 
	$my_lock_waô
()

29 
	`Pthªad_muãx_lock
(
m±r
);

30 
	}
}

33 
	$my_lock_ªÀa£
()

35 
	`Pthªad_muãx_u∆ock
(
m±r
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/meter.c

1 
	~"u≈.h
"

2 
	~<sys/mm™.h
>

11 
	$mëî
(
nchûdªn
)

13 
fd
;

14 *
±r
;

16 #ifdef 
MAP_ANON


17 
±r
 = 
	`Mm≠
(0, 
nchûdªn
*(), 
PROT_READ
 | 
PROT_WRITE
,

18 
MAP_ANON
 | 
MAP_SHARED
, -1, 0);

20 
fd
 = 
	`O≥n
("/dev/zîo", 
O_RDWR
, 0);

22 
±r
 = 
	`Mm≠
(0, 
nchûdªn
*(), 
PROT_READ
 | 
PROT_WRITE
,

23 
MAP_SHARED
, 
fd
, 0);

24 
	`Clo£
(
fd
);

27 (
±r
);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/pr_cpu_time.c

1 
	~"u≈.h
"

2 
	~<sys/ªsour˚.h
>

4 #i‚def 
HAVE_GETRUSAGE_PROTO


5 
gërußge
(, 
rußge
 *);

9 
	$¥_˝u_time
()

11 
u£r
, 
sys
;

12 
rußge
 
myußge
, 
chûdußge
;

14 i‡(
	`gërußge
(
RUSAGE_SELF
, &
myußge
) < 0)

15 
	`îr_sys
("getrusageÉrror");

16 i‡(
	`gërußge
(
RUSAGE_CHILDREN
, &
chûdußge
) < 0)

17 
	`îr_sys
("getrusageÉrror");

19 
u£r
 = (Ë
myußge
.
ru_utime
.
tv_£c
 +

20 
myußge
.
ru_utime
.
tv_u£c
/1000000.0;

21 
u£r
 +(Ë
chûdußge
.
ru_utime
.
tv_£c
 +

22 
chûdußge
.
ru_utime
.
tv_u£c
/1000000.0;

23 
sys
 = (Ë
myußge
.
ru_°ime
.
tv_£c
 +

24 
myußge
.
ru_°ime
.
tv_u£c
/1000000.0;

25 
sys
 +(Ë
chûdußge
.
ru_°ime
.
tv_£c
 +

26 
chûdußge
.
ru_°ime
.
tv_u£c
/1000000.0;

28 
	`¥ötf
("\nu£∏timê%g, sy†timê%g\n", 
u£r
, 
sys
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread07.c

1 
	~"u≈thªad.h
"

2 
	~"±hªad07.h
"

5 
	$thªad_make
(
i
)

7 *
	`thªad_maö
(*);

9 
	`Pthªad_¸óã
(&
çå
[
i
].
thªad_tid
, 
NULL
, &
thªad_maö
, (*) i);

11 
	}
}

14 
	$thªad_maö
(*
¨g
)

16 
c⁄nfd
;

17 
	`web_chûd
();

18 
sockÀn_t
 
˛ûí
;

19 
sockaddr
 *
˛üddr
;

21 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
	`¥ötf
("thªad %d sèπög\n", (Ë
¨g
);

25 
˛ûí
 = 
addæí
;

26 
	`Pthªad_muãx_lock
(&
mlock
);

27 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

28 
	`Pthªad_muãx_u∆ock
(&
mlock
);

29 
çå
[(Ë
¨g
].
thªad_cou¡
++;

31 
	`web_chûd
(
c⁄nfd
);

32 
	`Clo£
(
c⁄nfd
);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread07.h

2 
±hªad_t
 
	mthªad_tid
;

3 
	mthªad_cou¡
;

4 } 
	tThªad
;

5 
Thªad
 *
	gçå
;

7 
	gli°ífd
, 
	g¡hªads
;

8 
sockÀn_t
 
	gaddæí
;

9 
±hªad_muãx_t
 
	gmlock
;

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread08.c

1 
	~"u≈thªad.h
"

2 
	~"±hªad08.h
"

5 
	$thªad_make
(
i
)

7 *
	`thªad_maö
(*);

9 
	`Pthªad_¸óã
(&
çå
[
i
].
thªad_tid
, 
NULL
, &
thªad_maö
, (*) i);

11 
	}
}

14 
	$thªad_maö
(*
¨g
)

16 
c⁄nfd
;

17 
	`web_chûd
();

19 
	`¥ötf
("thªad %d sèπög\n", (Ë
¨g
);

21 
	`Pthªad_muãx_lock
(&
˛ifd_muãx
);

22 
igë
 =
ùut
)

23 
	`Pthªad_c⁄d_waô
(&
˛ifd_c⁄d
, &
˛ifd_muãx
);

24 
c⁄nfd
 = 
˛ifd
[
igë
];

25 i‡(++
igë
 =
MAXNCLI
)

26 
igë
 = 0;

27 
	`Pthªad_muãx_u∆ock
(&
˛ifd_muãx
);

28 
çå
[(Ë
¨g
].
thªad_cou¡
++;

30 
	`web_chûd
(
c⁄nfd
);

31 
	`Clo£
(
c⁄nfd
);

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread08.h

2 
±hªad_t
 
	mthªad_tid
;

3 
	mthªad_cou¡
;

4 } 
	tThªad
;

5 
Thªad
 *
	gçå
;

7 
	#MAXNCLI
 32

	)

8 
	g˛ifd
[
MAXNCLI
], 
	gigë
, 
	gùut
;

9 
±hªad_muãx_t
 
	g˛ifd_muãx
;

10 
±hªad_c⁄d_t
 
	g˛ifd_c⁄d
;

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread09.c

1 
	~"u≈thªad.h
"

2 
	~"±hªad09.h
"

5 
	$thªad_make
(
i
)

7 *
	`thªad_maö
(*);

9 
	`Pthªad_¸óã
(&
çå
[
i
].
thªad_tid
, 
NULL
, &
thªad_maö
, (*) i);

11 
	}
}

14 
	$thªad_maö
(*
¨g
)

16 
c⁄nfd
;

17 
	`web_chûd
();

18 
sockÀn_t
 
˛ûí
;

19 
sockaddr
 *
˛üddr
;

21 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
	`¥ötf
("thªad %d sèπög\n", (Ë
¨g
);

25 
˛ûí
 = 
addæí
;

26 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

27 
çå
[(Ë
¨g
].
thªad_cou¡
++;

29 
	`web_chûd
(
c⁄nfd
);

30 
	`Clo£
(
c⁄nfd
);

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/pthread09.h

2 
±hªad_t
 
	mthªad_tid
;

3 
	mthªad_cou¡
;

4 } 
	tThªad
;

5 
Thªad
 *
	gçå
;

7 
	gli°ífd
, 
	g¡hªads
;

8 
sockÀn_t
 
	gaddæí
;

	@/media/sf_ddrive/progs/network/unpv13e/server/readline.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$ªadlöe
(
fd
, *
v±r
, 
size_t
 
maxÀn
)

7 
ssize_t
 
n
, 
rc
;

8 
c
, *
±r
;

10 
±r
 = 
v±r
;

11 
n
 = 1;Ç < 
maxÀn
;Ç++) {

12 i‡–(
rc
 = 
	`ªad
(
fd
, &
c
, 1)) == 1) {

13 *
±r
++ = 
c
;

14 i‡(
c
 == '\n')

16 } i‡(
rc
 == 0) {

17 i‡(
n
 == 1)

25 *
±r
 = 0;

26 (
n
);

27 
	}
}

30 
ssize_t


31 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

33 
ssize_t
 
n
;

35 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) == -1)

36 
	`îr_sys
("readlineÉrror");

37 (
n
);

38 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/readline_r.c

2 
	~"u≈.h
"

3 
	~"ªadlöe_r.h
"

5 
ssize_t


6 
	$my_ªad_r
(
Rlöe
 *
Ωå
, *
±r
)

8 i‡(
Ωå
->
æ_˙t
 <= 0) {

9 
agaö
:

10 
Ωå
->
æ_˙t
 = 
	`ªad
‘±r->
ªad_fd
,Ñ±r->
æ_buf
, (rptr->rl_buf));

11 i‡(
Ωå
->
æ_˙t
 < 0) {

12 i‡(
î∫o
 =
EINTR
)

13 
agaö
;

17 i‡(
Ωå
->
æ_˙t
 == 0)

19 
Ωå
->
æ_buÂå
 =Ñ±r->
æ_buf
;

22 
Ωå
->
æ_˙t
--;

23 *
±r
 = *
Ωå
->
æ_buÂå
++ & 255;

25 
	}
}

28 
	$ªadlöe_röô
(
fd
, *
±r
, 
size_t
 
maxÀn
, 
Rlöe
 *
Ωå
)

30 
Ωå
->
ªad_fd
 = 
fd
;

31 
Ωå
->
ªad_±r
 = 
±r
;

32 
Ωå
->
ªad_maxÀn
 = 
maxÀn
;

34 
Ωå
->
æ_˙t
 = 0;

35 
Ωå
->
æ_buÂå
 =Ñ±r->
æ_buf
;

36 
	}
}

38 
ssize_t


39 
	$ªadlöe_r
(
Rlöe
 *
Ωå
)

41 
n
, 
rc
;

42 
c
, *
±r
;

44 
±r
 = 
Ωå
->
ªad_±r
;

45 
n
 = 1;Ç < 
Ωå
->
ªad_maxÀn
;Ç++) {

46 i‡–(
rc
 = 
	`my_ªad_r
(
Ωå
, &
c
)) == 1) {

47 *
±r
++ = 
c
;

48 i‡(
c
 == '\n')

50 } i‡(
rc
 == 0) {

51 i‡(
n
 == 1)

59 *
±r
 = 0;

60 (
n
);

61 
	}
}

64 
ssize_t


65 
	$Ródlöe_r
(
Rlöe
 *
Ωå
)

67 
ssize_t
 
n
;

69 i‡–(
n
 = 
	`ªadlöe_r
(
Ωå
)) == -1)

70 
	`îr_sys
("readline_rÉrror");

71 (
n
);

72 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/readline_r.h

2 
	mªad_fd
;

3 *
	mªad_±r
;

4 
size_t
 
	mªad_maxÀn
;

6 
	mæ_˙t
;

7 *
	mæ_buÂå
;

8 
	mæ_buf
[
MAXLINE
];

9 } 
	tRlöe
;

11 
ªadlöe_röô
(, *, 
size_t
, 
Rlöe
 *);

12 
ssize_t
 
ªadlöe_r
(
Rlöe
 *);

13 
ssize_t
 
Ródlöe_r
(
Rlöe
 *);

	@/media/sf_ddrive/progs/network/unpv13e/server/serv00.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
	`sig_öt
(), 
	`web_chûd
();

9 
sockÀn_t
 
˛ûí
, 
addæí
;

10 
sockaddr
 *
˛üddr
;

12 i‡(
¨gc
 == 2)

13 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

14 i‡(
¨gc
 == 3)

15 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

17 
	`îr_quô
("usage: serv00 [ <host> ] <port#>");

18 
˛üddr
 = 
	`MÆloc
(
addæí
);

20 
	`Sig«l
(
SIGINT
, 
sig_öt
);

23 
˛ûí
 = 
addæí
;

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

26 
	`web_chûd
(
c⁄nfd
);

28 
	`Clo£
(
c⁄nfd
);

30 
	}
}

35 
	$sig_öt
(
signo
)

37 
	`¥_˝u_time
();

39 
	`¥_˝u_time
();

40 
	`exô
(0);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv01.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
pid_t
 
chûdpid
;

9 
	`sig_chld
(), 
	`sig_öt
(), 
	`web_chûd
();

10 
sockÀn_t
 
˛ûí
, 
addæí
;

11 
sockaddr
 *
˛üddr
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage: serv01 [ <host> ] <port#>");

19 
˛üddr
 = 
	`MÆloc
(
addæí
);

21 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

22 
	`Sig«l
(
SIGINT
, 
sig_öt
);

25 
˛ûí
 = 
addæí
;

26 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
)) < 0) {

27 i‡(
î∫o
 =
EINTR
)

30 
	`îr_sys
("acceptÉrror");

33 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

34 
	`Clo£
(
li°ífd
);

35 
	`web_chûd
(
c⁄nfd
);

36 
	`exô
(0);

38 
	`Clo£
(
c⁄nfd
);

40 
	}
}

45 
	$sig_öt
(
signo
)

47 
	`¥_˝u_time
();

49 
	`¥_˝u_time
();

50 
	`exô
(0);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv02.c

2 
	~"u≈.h
"

4 
	gnchûdªn
;

5 
pid_t
 *
	gpids
;

8 
	$maö
(
¨gc
, **
¨gv
)

10 
li°ífd
, 
i
;

11 
sockÀn_t
 
addæí
;

12 
	`sig_öt
();

13 
pid_t
 
	`chûd_make
(, , );

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

17 i‡(
¨gc
 == 4)

18 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

20 
	`îr_quô
("usage: serv02 [ <host> ] <port#> <#children>");

21 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

22 
pids
 = 
	`CÆloc
(
nchûdªn
, (
pid_t
));

24 
i
 = 0; i < 
nchûdªn
; i++)

25 
pids
[
i
] = 
	`chûd_make
(i, 
li°ífd
, 
addæí
);

27 
	`Sig«l
(
SIGINT
, 
sig_öt
);

30 
	`∑u£
();

31 
	}
}

36 
	$sig_öt
(
signo
)

38 
i
;

39 
	`¥_˝u_time
();

42 
i
 = 0; i < 
nchûdªn
; i++)

43 
	`kûl
(
pids
[
i
], 
SIGTERM
);

44 
	`waô
(
NULL
) > 0)

46 i‡(
î∫o
 !
ECHILD
)

47 
	`îr_sys
("waitÉrror");

49 
	`¥_˝u_time
();

50 
	`exô
(0);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv02m.c

1 
	~"u≈.h
"

3 
	gnchûdªn
;

4 
pid_t
 *
	gpids
;

5 *
	g˝å
, *
mëî
();

8 
	$maö
(
¨gc
, **
¨gv
)

10 
li°ífd
, 
i
;

11 
sockÀn_t
 
addæí
;

12 
	`sig_öt
();

13 
pid_t
 
	`chûd_make
(, , );

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

17 i‡(
¨gc
 == 4)

18 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

20 
	`îr_quô
("usage: serv02 [ <host> ] <port#> <#children>");

21 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

22 
pids
 = 
	`CÆloc
(
nchûdªn
, (
pid_t
));

23 
˝å
 = 
	`mëî
(
nchûdªn
);

25 
i
 = 0; i < 
nchûdªn
; i++)

26 
pids
[
i
] = 
	`chûd_make
(i, 
li°ífd
, 
addæí
);

28 
	`Sig«l
(
SIGINT
, 
sig_öt
);

31 
	`∑u£
();

32 
	}
}

35 
	$sig_öt
(
signo
)

37 
i
;

38 
	`¥_˝u_time
();

41 
i
 = 0; i < 
nchûdªn
; i++)

42 
	`kûl
(
pids
[
i
], 
SIGTERM
);

43 
	`waô
(
NULL
) > 0)

45 i‡(
î∫o
 !
ECHILD
)

46 
	`îr_sys
("waitÉrror");

48 
	`¥_˝u_time
();

50 
i
 = 0; i < 
nchûdªn
; i++)

51 
	`¥ötf
("chûd %d, %ld c⁄√˘i⁄s\n", 
i
, 
˝å
[i]);

53 
	`exô
(0);

54 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv03.c

1 
	~"u≈.h
"

3 
	gnchûdªn
;

4 
pid_t
 *
	gpids
;

7 
	$maö
(
¨gc
, **
¨gv
)

9 
li°ífd
, 
i
;

10 
sockÀn_t
 
addæí
;

11 
	`sig_öt
();

12 
pid_t
 
	`chûd_make
(, , );

14 i‡(
¨gc
 == 3)

15 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

16 i‡(
¨gc
 == 4)

17 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

19 
	`îr_quô
("usage: serv03 [ <host> ] <port#> <#children>");

20 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

21 
pids
 = 
	`CÆloc
(
nchûdªn
, (
pid_t
));

23 
	`my_lock_öô
("/tmp/lock.XXXXXX");

24 
i
 = 0; i < 
nchûdªn
; i++)

25 
pids
[
i
] = 
	`chûd_make
(i, 
li°ífd
, 
addæí
);

27 
	`Sig«l
(
SIGINT
, 
sig_öt
);

30 
	`∑u£
();

31 
	}
}

34 
	$sig_öt
(
signo
)

36 
i
;

37 
	`¥_˝u_time
();

40 
i
 = 0; i < 
nchûdªn
; i++)

41 
	`kûl
(
pids
[
i
], 
SIGTERM
);

42 
	`waô
(
NULL
) > 0)

44 i‡(
î∫o
 !
ECHILD
)

45 
	`îr_sys
("waitÉrror");

47 
	`¥_˝u_time
();

48 
	`exô
(0);

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv03m.c

1 
	~"u≈.h
"

3 
	gnchûdªn
;

4 
pid_t
 *
	gpids
;

5 *
	g˝å
, *
mëî
();

8 
	$maö
(
¨gc
, **
¨gv
)

10 
li°ífd
, 
i
;

11 
sockÀn_t
 
addæí
;

12 
	`sig_öt
();

13 
pid_t
 
	`chûd_make
(, , );

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

17 i‡(
¨gc
 == 4)

18 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

20 
	`îr_quô
("usage: serv03 [ <host> ] <port#> <#children>");

21 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

22 
pids
 = 
	`CÆloc
(
nchûdªn
, (
pid_t
));

23 
˝å
 = 
	`mëî
(
nchûdªn
);

25 
	`my_lock_öô
("/tmp/lock.XXXXXX");

26 
i
 = 0; i < 
nchûdªn
; i++)

27 
pids
[
i
] = 
	`chûd_make
(i, 
li°ífd
, 
addæí
);

29 
	`Sig«l
(
SIGINT
, 
sig_öt
);

32 
	`∑u£
();

33 
	}
}

36 
	$sig_öt
(
signo
)

38 
i
;

39 
	`¥_˝u_time
();

42 
i
 = 0; i < 
nchûdªn
; i++)

43 
	`kûl
(
pids
[
i
], 
SIGTERM
);

44 
	`waô
(
NULL
) > 0)

46 i‡(
î∫o
 !
ECHILD
)

47 
	`îr_sys
("waitÉrror");

49 
	`¥_˝u_time
();

51 
i
 = 0; i < 
nchûdªn
; i++)

52 
	`¥ötf
("chûd %d, %ld c⁄√˘i⁄s\n", 
i
, 
˝å
[i]);

54 
	`exô
(0);

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv04.c

1 
	~"u≈.h
"

3 
	gnchûdªn
;

4 
pid_t
 *
	gpids
;

7 
	$maö
(
¨gc
, **
¨gv
)

9 
li°ífd
, 
i
;

10 
sockÀn_t
 
addæí
;

11 
	`sig_öt
();

12 
pid_t
 
	`chûd_make
(, , );

14 i‡(
¨gc
 == 3)

15 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

16 i‡(
¨gc
 == 4)

17 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

19 
	`îr_quô
("usage: serv04 [ <host> ] <port#> <#children>");

20 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

21 
pids
 = 
	`CÆloc
(
nchûdªn
, (
pid_t
));

23 
	`my_lock_öô
(
NULL
);

24 
i
 = 0; i < 
nchûdªn
; i++)

25 
pids
[
i
] = 
	`chûd_make
(i, 
li°ífd
, 
addæí
);

27 
	`Sig«l
(
SIGINT
, 
sig_öt
);

30 
	`∑u£
();

31 
	}
}

34 
	$sig_öt
(
signo
)

36 
i
;

37 
	`¥_˝u_time
();

40 
i
 = 0; i < 
nchûdªn
; i++)

41 
	`kûl
(
pids
[
i
], 
SIGTERM
);

42 
	`waô
(
NULL
) > 0)

44 i‡(
î∫o
 !
ECHILD
)

45 
	`îr_sys
("waitÉrror");

47 
	`¥_˝u_time
();

48 
	`exô
(0);

49 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv05.c

2 
	~"u≈.h
"

3 
	~"chûd.h
"

5 
	gnchûdªn
;

8 
	$maö
(
¨gc
, **
¨gv
)

10 
li°ífd
, 
i
, 
«vaû
, 
maxfd
, 
n£l
, 
c⁄nfd
, 
rc
;

11 
	`sig_öt
();

12 
pid_t
 
	`chûd_make
(, , );

13 
ssize_t
 
n
;

14 
fd_£t
 
r£t
, 
ma°î£t
;

15 
sockÀn_t
 
addæí
, 
˛ûí
;

16 
sockaddr
 *
˛üddr
;

18 i‡(
¨gc
 == 3)

19 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

20 i‡(
¨gc
 == 4)

21 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

23 
	`îr_quô
("usage: serv05 [ <host> ] <port#> <#children>");

25 
	`FD_ZERO
(&
ma°î£t
);

26 
	`FD_SET
(
li°ífd
, &
ma°î£t
);

27 
maxfd
 = 
li°ífd
;

28 
˛üddr
 = 
	`MÆloc
(
addæí
);

30 
nchûdªn
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

31 
«vaû
 = 
nchûdªn
;

32 
˝å
 = 
	`CÆloc
(
nchûdªn
, (
Chûd
));

35 
i
 = 0; i < 
nchûdªn
; i++) {

36 
	`chûd_make
(
i
, 
li°ífd
, 
addæí
);

37 
	`FD_SET
(
˝å
[
i
].
chûd_pùefd
, &
ma°î£t
);

38 
maxfd
 = 
	`max
(maxfd, 
˝å
[
i
].
chûd_pùefd
);

41 
	`Sig«l
(
SIGINT
, 
sig_öt
);

44 
r£t
 = 
ma°î£t
;

45 i‡(
«vaû
 <= 0)

46 
	`FD_CLR
(
li°ífd
, &
r£t
);

47 
n£l
 = 
	`Sñe˘
(
maxfd
 + 1, &
r£t
, 
NULL
, NULL, NULL);

50 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

51 
˛ûí
 = 
addæí
;

52 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

54 
i
 = 0; i < 
nchûdªn
; i++)

55 i‡(
˝å
[
i
].
chûd_°©us
 == 0)

58 i‡(
i
 =
nchûdªn
)

59 
	`îr_quô
("noávailable children");

60 
˝å
[
i
].
chûd_°©us
 = 1;

61 
˝å
[
i
].
chûd_cou¡
++;

62 
«vaû
--;

64 
n
 = 
	`Wrôe_fd
(
˝å
[
i
].
chûd_pùefd
, "", 1, 
c⁄nfd
);

65 
	`Clo£
(
c⁄nfd
);

66 i‡(--
n£l
 == 0)

71 
i
 = 0; i < 
nchûdªn
; i++) {

72 i‡(
	`FD_ISSET
(
˝å
[
i
].
chûd_pùefd
, &
r£t
)) {

73 i‡–(
n
 = 
	`Ród
(
˝å
[
i
].
chûd_pùefd
, &
rc
, 1)) == 0)

74 
	`îr_quô
("chûd %dÅîmö©ed u√x≥˘edly", 
i
);

75 
˝å
[
i
].
chûd_°©us
 = 0;

76 
«vaû
++;

77 i‡(--
n£l
 == 0)

82 
	}
}

86 
	$sig_öt
(
signo
)

88 
i
;

89 
	`¥_˝u_time
();

92 
i
 = 0; i < 
nchûdªn
; i++)

93 
	`kûl
(
˝å
[
i
].
chûd_pid
, 
SIGTERM
);

94 
	`waô
(
NULL
) > 0)

96 i‡(
î∫o
 !
ECHILD
)

97 
	`îr_sys
("waitÉrror");

99 
	`¥_˝u_time
();

101 
i
 = 0; i < 
nchûdªn
; i++)

102 
	`¥ötf
("chûd %d, %ld c⁄√˘i⁄s\n", 
i
, 
˝å
[i].
chûd_cou¡
);

104 
	`exô
(0);

105 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv06.c

2 
	~"u≈thªad.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
;

8 
	`sig_öt
();

9 *
	`doô
(*);

10 
±hªad_t
 
tid
;

11 
sockÀn_t
 
˛ûí
, 
addæí
;

12 
sockaddr
 *
˛üddr
;

14 i‡(
¨gc
 == 2)

15 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

16 i‡(
¨gc
 == 3)

17 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

19 
	`îr_quô
("usage: serv06 [ <host> ] <port#>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

22 
	`Sig«l
(
SIGINT
, 
sig_öt
);

25 
˛ûí
 = 
addæí
;

26 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

28 
	`Pthªad_¸óã
(&
tid
, 
NULL
, &
doô
, (*Ë
c⁄nfd
);

30 
	}
}

33 
	$doô
(*
¨g
)

35 
	`web_chûd
();

37 
	`Pthªad_dëach
(
	`±hªad_£lf
());

38 
	`web_chûd
((Ë
¨g
);

39 
	`Clo£
((Ë
¨g
);

40 (
NULL
);

41 
	}
}

45 
	$sig_öt
(
signo
)

47 
	`¥_˝u_time
();

49 
	`¥_˝u_time
();

50 
	`exô
(0);

51 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv07.c

2 
	~"u≈thªad.h
"

3 
	~"±hªad07.h
"

5 
±hªad_muãx_t
 
	gmlock
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 
	$maö
(
¨gc
, **
¨gv
)

10 
i
;

11 
	`sig_öt
(), 
	`thªad_make
();

13 i‡(
¨gc
 == 3)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 4)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage: serv07 [ <host> ] <port#> <#threads>");

19 
¡hªads
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

20 
çå
 = 
	`CÆloc
(
¡hªads
, (
Thªad
));

22 
i
 = 0; i < 
¡hªads
; i++)

23 
	`thªad_make
(
i
);

25 
	`Sig«l
(
SIGINT
, 
sig_öt
);

28 
	`∑u£
();

29 
	}
}

33 
	$sig_öt
(
signo
)

35 
i
;

36 
	`¥_˝u_time
();

38 
	`¥_˝u_time
();

40 
i
 = 0; i < 
¡hªads
; i++)

41 
	`¥ötf
("thªad %d, %ld c⁄√˘i⁄s\n", 
i
, 
çå
[i].
thªad_cou¡
);

43 
	`exô
(0);

44 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv08.c

2 
	~"u≈thªad.h
"

3 
	~"±hªad08.h
"

5 
	g¡hªads
;

6 
±hªad_muãx_t
 
	g˛ifd_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

7 
±hªad_c⁄d_t
 
	g˛ifd_c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

10 
	$maö
(
¨gc
, **
¨gv
)

12 
i
, 
li°ífd
, 
c⁄nfd
;

13 
	`sig_öt
(), 
	`thªad_make
();

14 
sockÀn_t
 
addæí
, 
˛ûí
;

15 
sockaddr
 *
˛üddr
;

17 i‡(
¨gc
 == 3)

18 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

19 i‡(
¨gc
 == 4)

20 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

22 
	`îr_quô
("usage: serv08 [ <host> ] <port#> <#threads>");

23 
˛üddr
 = 
	`MÆloc
(
addæí
);

25 
¡hªads
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

26 
çå
 = 
	`CÆloc
(
¡hªads
, (
Thªad
));

27 
igë
 = 
ùut
 = 0;

30 
i
 = 0; i < 
¡hªads
; i++)

31 
	`thªad_make
(
i
);

33 
	`Sig«l
(
SIGINT
, 
sig_öt
);

36 
˛ûí
 = 
addæí
;

37 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
˛ûí
);

39 
	`Pthªad_muãx_lock
(&
˛ifd_muãx
);

40 
˛ifd
[
ùut
] = 
c⁄nfd
;

41 i‡(++
ùut
 =
MAXNCLI
)

42 
ùut
 = 0;

43 i‡(
ùut
 =
igë
)

44 
	`îr_quô
("ùuàigë = %d", 
ùut
);

45 
	`Pthªad_c⁄d_sig«l
(&
˛ifd_c⁄d
);

46 
	`Pthªad_muãx_u∆ock
(&
˛ifd_muãx
);

48 
	}
}

52 
	$sig_öt
(
signo
)

54 
i
;

55 
	`¥_˝u_time
();

57 
	`¥_˝u_time
();

59 
i
 = 0; i < 
¡hªads
; i++)

60 
	`¥ötf
("thªad %d, %ld c⁄√˘i⁄s\n", 
i
, 
çå
[i].
thªad_cou¡
);

62 
	`exô
(0);

63 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/serv09.c

2 
	~"u≈thªad.h
"

3 
	~"±hªad09.h
"

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
;

9 
	`sig_öt
(), 
	`thªad_make
();

11 i‡(
¨gc
 == 3)

12 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

13 i‡(
¨gc
 == 4)

14 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

16 
	`îr_quô
("usage: serv09 [ <host> ] <port#> <#threads>");

17 
¡hªads
 = 
	`©oi
(
¨gv
[
¨gc
-1]);

18 
çå
 = 
	`CÆloc
(
¡hªads
, (
Thªad
));

20 
i
 = 0; i < 
¡hªads
; i++)

21 
	`thªad_make
(
i
);

23 
	`Sig«l
(
SIGINT
, 
sig_öt
);

26 
	`∑u£
();

27 
	}
}

31 
	$sig_öt
(
signo
)

33 
i
;

34 
	`¥_˝u_time
();

36 
	`¥_˝u_time
();

38 
i
 = 0; i < 
¡hªads
; i++)

39 
	`¥ötf
("thªad %d, %ld c⁄√˘i⁄s\n", 
i
, 
çå
[i].
thªad_cou¡
);

41 
	`exô
(0);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/sig_chld_waitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0) {

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/unpthread.h

4 #i‚def 
__u≈_±hªad_h


5 
	#__u≈_±hªad_h


	)

7 
	~"u≈.h
"

9 
Pthªad_¸óã
(
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

11 
Pthªad_joö
(
±hªad_t
, **);

12 
Pthªad_dëach
(
±hªad_t
);

13 
Pthªad_kûl
(
±hªad_t
, );

15 
Pthªad_muãx©å_öô
(
±hªad_muãx©å_t
 *);

16 
Pthªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *, );

17 
Pthªad_muãx_öô
(
±hªad_muãx_t
 *, 
±hªad_muãx©å_t
 *);

18 
Pthªad_muãx_lock
(
±hªad_muãx_t
 *);

19 
Pthªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

21 
Pthªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *);

22 
Pthªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *);

23 
Pthªad_c⁄d_waô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *);

24 
Pthªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *,

25 c⁄° 
time•ec
 *);

27 
Pthªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

28 
	`Pthªad_£t•ecific
(
±hªad_key_t
, const *);

29 
	`Pthªad_⁄˚
(
±hªad_⁄˚_t
 *, (*)());

	@/media/sf_ddrive/progs/network/unpv13e/server/web_child.c

1 
	~"u≈.h
"

3 
	#MAXN
 16384

	)

6 
	$web_chûd
(
sockfd
)

8 
¡owrôe
;

9 
ssize_t
 
ƒód
;

10 
löe
[
MAXLINE
], 
ªsu…
[
MAXN
];

13 i‡–(
ƒód
 = 
	`Ródlöe
(
sockfd
, 
löe
, 
MAXLINE
)) == 0)

17 
¡owrôe
 = 
	`©ﬁ
(
löe
);

18 i‡((
¡owrôe
 <0Ë|| (¡owrôê> 
MAXN
))

19 
	`îr_quô
("˛õ¡Ñeque° f‹ %d byãs", 
¡owrôe
);

21 
	`Wrôí
(
sockfd
, 
ªsu…
, 
¡owrôe
);

23 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/server/web_child_r.c

1 
	~"u≈.h
"

2 
	~"ªadlöe_r.h
"

4 
	#MAXN
 16384

	)

7 
	$web_chûd
(
sockfd
)

9 
¡owrôe
;

10 
ssize_t
 
ƒód
;

11 
löe
[
MAXLINE
], 
ªsu…
[
MAXN
];

12 
Rlöe
 
æöe
;

14 
	`ªadlöe_röô
(
sockfd
, 
löe
, 
MAXLINE
, &
æöe
);

16 i‡–(
ƒód
 = 
	`Ródlöe_r
(&
æöe
)) == 0)

20 
¡owrôe
 = 
	`©ﬁ
(
löe
);

21 i‡((
¡owrôe
 <0Ë|| (¡owrôê> 
MAXN
))

22 
	`îr_quô
("˛õ¡Ñeque° f‹ %d byãs", 
¡owrôe
);

24 
	`Wrôí
(
sockfd
, 
ªsu…
, 
¡owrôe
);

26 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sigio/dgcli01.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

11 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

13 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

15 
ªcvlöe
[
n
] = 0;

16 
	`Fputs
(
ªcvlöe
, 
°dout
);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sigio/dgecho01.c

2 
	~"u≈.h
"

4 
	gsockfd
;

6 
	#QSIZE
 8

	)

7 
	#MAXDG
 4096

	)

10 *
	mdg_d©a
;

11 
size_t
 
	mdg_Àn
;

12 
sockaddr
 *
	mdg_ß
;

13 
sockÀn_t
 
	mdg_ßÀn
;

14 } 
	tDG
;

15 
DG
 
	gdg
[
QSIZE
];

16 
	g˙åód
[
QSIZE
+1];

18 
	gigë
;

19 
	gùut
;

20 
	gnqueue
;

21 
sockÀn_t
 
	g˛ûí
;

23 
sig_io
();

24 
sig_hup
();

29 
	$dg_echo
(
sockfd_¨g
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí_¨g
)

31 
i
;

32 c⁄° 
⁄
 = 1;

33 
sig£t_t
 
zîomask
, 
√wmask
, 
ﬁdmask
;

35 
sockfd
 = 
sockfd_¨g
;

36 
˛ûí
 = 
˛ûí_¨g
;

38 
i
 = 0; i < 
QSIZE
; i++) {

39 
dg
[
i
].
dg_d©a
 = 
	`MÆloc
(
MAXDG
);

40 
dg
[
i
].
dg_ß
 = 
	`MÆloc
(
˛ûí
);

41 
dg
[
i
].
dg_ßÀn
 = 
˛ûí
;

43 
igë
 = 
ùut
 = 
nqueue
 = 0;

45 
	`Sig«l
(
SIGHUP
, 
sig_hup
);

46 
	`Sig«l
(
SIGIO
, 
sig_io
);

47 
	`F˙é
(
sockfd
, 
F_SETOWN
, 
	`gëpid
());

48 
	`Io˘l
(
sockfd
, 
FIOASYNC
, &
⁄
);

49 
	`Io˘l
(
sockfd
, 
FIONBIO
, &
⁄
);

51 
	`Sigem±y£t
(&
zîomask
);

52 
	`Sigem±y£t
(&
ﬁdmask
);

53 
	`Sigem±y£t
(&
√wmask
);

54 
	`Sigadd£t
(&
√wmask
, 
SIGIO
);

56 
	`Sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
);

58 
nqueue
 == 0)

59 
	`sigsu•íd
(&
zîomask
);

62 
	`Sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
);

64 
	`Sídto
(
sockfd
, 
dg
[
igë
].
dg_d©a
, dg[igë].
dg_Àn
, 0,

65 
dg
[
igë
].
dg_ß
, dg[igë].
dg_ßÀn
);

67 i‡(++
igë
 >
QSIZE
)

68 
igë
 = 0;

71 
	`Sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
);

72 
nqueue
--;

74 
	}
}

79 
	$sig_io
(
signo
)

81 
ssize_t
 
Àn
;

82 
ƒód
;

83 
DG
 *
±r
;

85 
ƒód
 = 0; ; ) {

86 i‡(
nqueue
 >
QSIZE
)

87 
	`îr_quô
("receive overflow");

89 
±r
 = &
dg
[
ùut
];

90 
±r
->
dg_ßÀn
 = 
˛ûí
;

91 
Àn
 = 
	`ªcv‰om
(
sockfd
, 
±r
->
dg_d©a
, 
MAXDG
, 0,

92 
±r
->
dg_ß
, &±r->
dg_ßÀn
);

93 i‡(
Àn
 < 0) {

94 i‡(
î∫o
 =
EWOULDBLOCK
)

97 
	`îr_sys
("recvfromÉrror");

99 
±r
->
dg_Àn
 = 
Àn
;

101 
ƒód
++;

102 
nqueue
++;

103 i‡(++
ùut
 >
QSIZE
)

104 
ùut
 = 0;

107 
˙åód
[
ƒód
]++;

108 
	}
}

113 
	$sig_hup
(
signo
)

115 
i
;

117 
i
 = 0; i <
QSIZE
; i++)

118 
	`¥ötf
("˙åód[%d] = %ld\n", 
i
, 
˙åód
[i]);

119 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sigio/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli01 <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sigio/udpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/buffers.c

10 
	~"sock.h
"

13 
	$buf„rs
(
sockfd
)

15 
n
;

16 
sockÀn_t
 
›éí
;

20 i‡(
rbuf
 =
NULL
) {

21 i‡–(
rbuf
 = 
	`mÆloc
(
ªadÀn
)Ë=
NULL
)

22 
	`îr_sys
("mallocÉrror forÑead buffer");

25 i‡(
wbuf
 =
NULL
) {

26 i‡–(
wbuf
 = 
	`mÆloc
(
wrôñí
)Ë=
NULL
)

27 
	`îr_sys
("mallocÉrror for write buffer");

33 i‡(
rcvbuÊí
) {

34 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuÊí
,

35 (
rcvbuÊí
)) < 0)

36 
	`îr_sys
("SO_RCVBUF setsockoptÉrror");

38 
›éí
 = (
n
);

39 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
n
, &
›éí
) < 0)

40 
	`îr_sys
("SO_RCVBUF getsockoptÉrror");

41 i‡(
n
 !
rcvbuÊí
)

42 
	`îr_quô
("rcvbuÊí = %d, SO_RCVBUF = %d", 
rcvbuÊí
, 
n
);

43 i‡(
vîbo£
)

44 
	`Ârötf
(
°dîr
, "SO_RCVBUF = %d\n", 
n
);

47 i‡(
¢dbuÊí
) {

48 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
¢dbuÊí
,

49 (
¢dbuÊí
)) < 0)

50 
	`îr_sys
("SO_SNDBUF setsockoptÉrror");

52 
›éí
 = (
n
);

53 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
n
, &
›éí
) < 0)

54 
	`îr_sys
("SO_SNDBUF getsockoptÉrror");

55 i‡(
n
 !
¢dbuÊí
)

56 
	`îr_quô
("¢dbuÊí = %d, SO_SNDBUF = %d", 
¢dbuÊí
, 
n
);

57 i‡(
vîbo£
)

58 
	`Ârötf
(
°dîr
, "SO_SNDBUF = %d\n", 
n
);

60 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/cliopen.c

10 
	~"sock.h
"

13 
	$˛i›í
(*
ho°
, *
p‹t
)

15 
fd
, 
i
, 
⁄
;

16 c⁄° *
¥Ÿocﬁ
;

17 
ö_addr
 
öaddr
;

18 
£rvít
 *
•
;

19 
ho°ít
 *
hp
;

21 
¥Ÿocﬁ
 = 
udp
 ? "udp" : "tcp";

24 
	`bzîo
(&
£rvaddr
, (servaddr));

25 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

28 i‡–(
i
 = 
	`©oi
(
p‹t
)) == 0) {

29 i‡–(
•
 = 
	`gë£rvby«me
(
p‹t
, 
¥Ÿocﬁ
)Ë=
NULL
)

30 
	`îr_quô
("gë£rvby«me(Ëîr‹ f‹: %s/%s", 
p‹t
, 
¥Ÿocﬁ
);

32 
£rvaddr
.
sö_p‹t
 = 
•
->
s_p‹t
;

34 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
i
);

41 i‡(
	`öë_©⁄
(
ho°
, &
öaddr
) == 1)

42 
£rvaddr
.
sö_addr
 = 
öaddr
;

43 i‡–(
hp
 = 
	`gëho°by«me
(
ho°
)Ë!
NULL
)

44 
	`mem˝y
(&
£rvaddr
.
sö_addr
, 
hp
->
h_addr
, hp->
h_Àngth
);

46 
	`îr_quô
("övÆid ho°«me: %s", 
ho°
);

48 i‡–(
fd
 = 
	`sockë
(
AF_INET
, 
udp
 ? 
SOCK_DGRAM
 : 
SOCK_STREAM
, 0)) < 0)

49 
	`îr_sys
("socket()Érror");

51 i‡(
ªu£addr
) {

52 
⁄
 = 1;

53 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
,  (on)) < 0)

54 
	`îr_sys
("setsockopt of SO_REUSEADDRÉrror");

57 #ifdef 
SO_REUSEPORT


58 i‡(
ªu£p‹t
) {

59 
⁄
 = 1;

60 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEPORT
, &
⁄
,  (on)) < 0)

61 
	`îr_sys
("setsockopt of SO_REUSEPORTÉrror");

75 i‡(
bödp‹t
 !0 || 
loˇlù
[0] !0 || 
udp
) {

76 
	`bzîo
(&
˛üddr
, (cliaddr));

77 
˛üddr
.
sö_Ámûy
 = 
AF_INET
;

78 
˛üddr
.
sö_p‹t
 = 
	`ht⁄s
(
bödp‹t
);

79 i‡(
loˇlù
[0] != 0) {

80 i‡(
	`öë_©⁄
(
loˇlù
, &
˛üddr
.
sö_addr
) == 0)

81 
	`îr_quô
("övÆid IPáddªss: %s", 
loˇlù
);

83 
˛üddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

85 i‡(
	`böd
(
fd
, (
sockaddr
 *Ë&
˛üddr
, (cliaddr)) < 0)

86 
	`îr_sys
("bind()Érror");

93 
	`buf„rs
(
fd
);

94 
	`sock›ts
(
fd
, 0);

100 i‡(
udp
 =0 || 
c⁄√˘udp
) {

102 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *Ë&
£rvaddr
, (servaddr))

105 i‡(
î∫o
 =
EINTR
)

107 i‡(
î∫o
 =
EISCONN
)

109 
	`îr_sys
("connect()Érror");

113 i‡(
vîbo£
) {

117 
i
 = (
˛üddr
);

118 i‡(
	`gësock«me
(
fd
, (
sockaddr
 *Ë&
˛üddr
, &
i
) < 0)

119 
	`îr_sys
("getsockname()Érror");

123 
	`Ârötf
(
°dîr
, "connected on %s.%d ",

124 
	`INET_NTOA
(
˛üddr
.
sö_addr
), 
	`¡ohs
(˛üddr.
sö_p‹t
));

125 
	`Ârötf
(
°dîr
, "to %s.%d\n",

126 
	`INET_NTOA
(
£rvaddr
.
sö_addr
), 
	`¡ohs
(£rvaddr.
sö_p‹t
));

129 
	`sock›ts
(
fd
, 1);

131 (
fd
);

132 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/crlf.c

10 
	~"sock.h
"

15 
	$¸lf_add
(*
d°
, 
d°size
, c⁄° *
§c
, 
Ànö
)

17 
Ànout
;

18 
c
;

20 i‡–(
Ànout
 = 
Ànö
Ë> 
d°size
)

21 
	`îr_quô
("crlf_add: destinationÇot bigÉnough");

23  ; 
Ànö
 > 0;Üenin--) {

24 i‡–(
c
 = *
§c
++) == '\n') {

25 i‡(++
Ànout
 >
d°size
)

26 
	`îr_quô
("crlf_add: destinationÇot bigÉnough");

27 *
d°
++ = '\r';

29 *
d°
++ = 
c
;

32 (
Ànout
);

33 
	}
}

36 
	$¸lf_°rù
(*
d°
, 
d°size
, c⁄° *
§c
, 
Ànö
)

38 
Ànout
;

39 
c
;

41 
Ànout
 = 0; 
Ànö
 > 0;Üenin--) {

42 i‡–(
c
 = *
§c
++) != '\r') {

43 i‡(++
Ànout
 >
d°size
)

44 
	`îr_quô
("crlf_strip: destinationÇot bigÉnough");

45 *
d°
++ = 
c
;

49 (
Ànout
);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/error.c

1 
	~<î∫o.h
>

2 
	~<°d¨g.h
>

3 
	~"ourhdr.h
"

5 
îr_doô
(, c⁄° *, 
va_li°
);

7 *
	g≤ame
 = 
NULL
;

14 
	$îr_ªt
(c⁄° *
fmt
, ...)

16 
va_li°
 
≠
;

18 
	`va_°¨t
(
≠
, 
fmt
);

19 
	`îr_doô
(1, 
fmt
, 
≠
);

20 
	`va_íd
(
≠
);

22 
	}
}

29 
	$îr_sys
(c⁄° *
fmt
, ...)

31 
va_li°
 
≠
;

33 
	`va_°¨t
(
≠
, 
fmt
);

34 
	`îr_doô
(1, 
fmt
, 
≠
);

35 
	`va_íd
(
≠
);

36 
	`exô
(1);

37 
	}
}

44 
	$îr_dump
(c⁄° *
fmt
, ...)

46 
va_li°
 
≠
;

48 
	`va_°¨t
(
≠
, 
fmt
);

49 
	`îr_doô
(1, 
fmt
, 
≠
);

50 
	`va_íd
(
≠
);

51 
	`ab‹t
();

52 
	`exô
(1);

53 
	}
}

60 
	$îr_msg
(c⁄° *
fmt
, ...)

62 
va_li°
 
≠
;

64 
	`va_°¨t
(
≠
, 
fmt
);

65 
	`îr_doô
(0, 
fmt
, 
≠
);

66 
	`va_íd
(
≠
);

68 
	}
}

75 
	$îr_quô
(c⁄° *
fmt
, ...)

77 
va_li°
 
≠
;

79 
	`va_°¨t
(
≠
, 
fmt
);

80 
	`îr_doô
(0, 
fmt
, 
≠
);

81 
	`va_íd
(
≠
);

82 
	`exô
(1);

83 
	}
}

89 
	$îr_doô
(
î∫oÊag
, c⁄° *
fmt
, 
va_li°
 
≠
)

91 
î∫o_ßve
;

92 
buf
[
MAXLINE
];

94 
î∫o_ßve
 = 
î∫o
;

95 
	`v•rötf
(
buf
, 
fmt
, 
≠
);

96 i‡(
î∫oÊag
)

97 
	`•rötf
(
buf
+
	`°æí
(buf), ": %s", 
	`°ªº‹
(
î∫o_ßve
));

98 
	`°rˇt
(
buf
, "\n");

99 
	`fÊush
(
°dout
);

100 
	`Âuts
(
buf
, 
°dîr
);

101 
	`fÊush
(
°dîr
);

103 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/loop.c

10 
	~"sock.h
"

15 
ây_©exô
();

16 
sig_ˇtch
();

19 
	$lo›
(
sockfd
)

21 
maxfdp1
, 
ƒód
, 
¡owrôe
, 
°döeof
, 
˛ûí
;

22 
fd_£t
 
r£t
;

23 
sockaddr_ö
 
˛üddr
;

25 #ifdef 
MSG_TRUNC


26 
iovec
 
iov
[1];

27 
msghdr
 
msg
;

29 #ifdef 
IP_RECVDSTADDR


30 
cmsghdr
 *
cm±r
 = 
NULL
;

31 
ö_addr
 
d°öaddr
;

32 
	#CONTROLLEN
 ((
cmsghdr
Ë+ (
ö_addr
))

	)

37 #ifdef 
nŸdef


43 i‡(
cbªak
 && 
	`ißây
(
STDIN_FILENO
)) {

44 i‡(
	`ây_cbªak
(
STDIN_FILENO
) < 0)

45 
	`îr_sys
("tty_cbreakÉrror");

46 i‡(
	`©exô
(
ây_©exô
) < 0)

47 
	`îr_sys
("tty_atexitÉrror");

49 i‡(
	`sig«l
(
SIGINT
, 
sig_ˇtch
Ë=
SIG_ERR
)

50 
	`îr_sys
("signalÉrror");

51 i‡(
	`sig«l
(
SIGQUIT
, 
sig_ˇtch
Ë=
SIG_ERR
)

52 
	`îr_sys
("signalÉrror");

53 i‡(
	`sig«l
(
SIGTERM
, 
sig_ˇtch
Ë=
SIG_ERR
)

54 
	`îr_sys
("signalÉrror");

58 i‡(
∑u£öô
)

59 
	`¶ìp
(
∑u£öô
);

61 
°döeof
 = 0;

62 
	`FD_ZERO
(&
r£t
);

63 
maxfdp1
 = 
sockfd
 + 1;

70 i‡(
°döeof
 == 0)

71 
	`FD_SET
(
STDIN_FILENO
, &
r£t
);

72 
	`FD_SET
(
sockfd
, &
r£t
);

74 i‡(
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL) < 0)

75 
	`îr_sys
("selectÉrror");

77 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
r£t
)) {

78 i‡–(
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
rbuf
, 
ªadÀn
)) < 0)

79 
	`îr_sys
("readÉrror from stdin");

80 i‡(
ƒód
 == 0) {

81 i‡(
hÆf˛o£
) {

82 i‡(
	`shutdown
(
sockfd
, 1) < 0)

83 
	`îr_sys
("shutdown()Érror");

85 
	`FD_CLR
(
STDIN_FILENO
, &
r£t
);

86 
°döeof
 = 1;

92 i‡(
¸lf
) {

93 
¡owrôe
 = 
	`¸lf_add
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

94 i‡(
	`wrôe
(
sockfd
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

95 
	`îr_sys
("writeÉrror");

97 i‡(
	`wrôe
(
sockfd
, 
rbuf
, 
ƒód
) !=Çread)

98 
	`îr_sys
("writeÉrror");

102 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

103 i‡(
udp
 && 
£rvî
) {

104 
˛ûí
 = (
˛üddr
);

105 #i‚def 
MSG_TRUNC


106 
ƒód
 = 
	`ªcv‰om
(
sockfd
, 
rbuf
, 
ªadÀn
, 0,

107 (
sockaddr
 *Ë&
˛üddr
, &
˛ûí
);

113 
iov
[0].
iov_ba£
 = 
rbuf
;

114 
iov
[0].
iov_Àn
 = 
ªadÀn
;

115 
msg
.
msg_iov
 = 
iov
;

116 
msg
.
msg_iovÀn
 = 1;

117 
msg
.
msg_«me
 = (
ˇddr_t
Ë&
˛üddr
;

118 
msg
.
msg_«mñí
 = 
˛ûí
;

120 #ifdef 
IP_RECVDSTADDR


121 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

122 
	`îr_sys
("mallocÉrror for control buffer");

124 
msg
.
msg_c⁄åﬁ
 = (
ˇddr_t
Ë
cm±r
;

125 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

127 
msg
.
msg_c⁄åﬁ
 = (
ˇddr_t
) 0;

128 
msg
.
msg_c⁄åﬁÀn
 = 0;

130 
msg
.
msg_Êags
 = 0;

132 
ƒód
 = 
	`ªcvmsg
(
sockfd
, &
msg
, 0);

134 i‡(
ƒód
 < 0)

135 
	`îr_sys
("datagramÑeceiveÉrror");

137 i‡(
vîbo£
) {

138 
	`¥ötf
("‰om %s", 
	`INET_NTOA
(
˛üddr
.
sö_addr
));

139 #ifdef 
MSG_TRUNC


140 #ifdef 
IP_RECVDSTADDR


141 i‡(
ªcvd°addr
) {

142 i‡(
cm±r
->
cmsg_Àvñ
 !
IPPROTO_IP
)

143 
	`îr_quô
("controlÜevel != IPPROTO_IP");

144 i‡(
cm±r
->
cmsg_ty≥
 !
IP_RECVDSTADDR
)

145 
	`îr_quô
("controlÅype != IP_RECVDSTADDR");

146 i‡(
cm±r
->
cmsg_Àn
 !
CONTROLLEN
)

147 
	`îr_quô
("controlÜength (%d) != %d",

148 
cm±r
->
cmsg_Àn
, 
CONTROLLEN
);

149 
	`mem˝y
((*Ë&
d°öaddr
, (*Ë
	`CMSG_DATA
(
cm±r
),

150 (
ö_addr
));

152 
	`¥ötf
(",Åÿ%s", 
	`INET_NTOA
(
d°öaddr
));

156 
	`¥ötf
(": ");

157 
	`fÊush
(
°dout
);

160 #ifdef 
MSG_TRUNC


161 i‡(
msg
.
msg_Êags
 & 
MSG_TRUNC
)

162 
	`¥ötf
("(datagramÅruncated)\n");

166 i‡–(
ƒód
 = 
	`ªad
(
sockfd
, 
rbuf
, 
ªadÀn
)) < 0)

167 
	`îr_sys
("readÉrror");

168 i‡(
ƒód
 == 0) {

169 i‡(
vîbo£
)

170 
	`Ârötf
(
°dîr
, "connection closed byÖeer\n");

175 i‡(
¸lf
) {

176 
¡owrôe
 = 
	`¸lf_°rù
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

177 i‡(
	`wrôí
(
STDOUT_FILENO
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

178 
	`îr_sys
("writenÉrrorÅo stdout");

180 i‡(
	`wrôí
(
STDOUT_FILENO
, 
rbuf
, 
ƒód
) !=Çread)

181 
	`îr_sys
("writenÉrrorÅo stdout");

186 i‡(
∑u£˛o£
) {

187 i‡(
vîbo£
)

188 
	`Ârötf
(
°dîr
, "pausing before close\n");

189 
	`¶ìp
(
∑u£˛o£
);

192 i‡(
	`˛o£
(
sockfd
) < 0)

193 
	`îr_sys
("closeÉrror");

194 
	}
}

197 
	$sig_ˇtch
(
signo
)

199 
	`exô
(0);

200 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/looptcp.c

10 
	~"sock.h
"

16 
	$lo›_t˝
(
sockfd
)

18 
maxfdp1
, 
ƒód
, 
¡owrôe
, 
°döeof
, 
Êags
;

19 
fd_£t
 
r£t
;

21 i‡(
∑u£öô
)

22 
	`¶ìp_us
(
∑u£öô
*1000);

24 
Êags
 = 0;

25 
°döeof
 = 0;

26 
	`FD_ZERO
(&
r£t
);

27 
maxfdp1
 = 
sockfd
 + 1;

30 i‡(
°döeof
 == 0)

31 
	`FD_SET
(
STDIN_FILENO
, &
r£t
);

32 
	`FD_SET
(
sockfd
, &
r£t
);

34 i‡(
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL) < 0)

35 
	`îr_sys
("selectÉrror");

37 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
r£t
)) {

38 i‡–(
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
rbuf
, 
ªadÀn
)) < 0)

39 
	`îr_sys
("readÉrror from stdin");

40 i‡(
ƒód
 == 0) {

41 i‡(
hÆf˛o£
) {

42 i‡(
	`shutdown
(
sockfd
, 
SHUT_WR
) < 0)

43 
	`îr_sys
("shutdown()Érror");

45 
	`FD_CLR
(
STDIN_FILENO
, &
r£t
);

46 
°döeof
 = 1;

52 i‡(
¸lf
) {

53 
¡owrôe
 = 
	`¸lf_add
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

54 i‡(
	`dowrôe
(
sockfd
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

55 
	`îr_sys
("writeÉrror");

57 i‡(
	`dowrôe
(
sockfd
, 
rbuf
, 
ƒód
) !=Çread)

58 
	`îr_sys
("writeÉrror");

62 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

64 
Êags
 = 
msg≥ek
;

65 
⁄˚m‹e
:

66 i‡–(
ƒód
 = 
	`ªcv
(
sockfd
, 
rbuf
, 
ªadÀn
, 
Êags
)) < 0)

67 
	`îr_sys
("recvÉrror");

68 i‡(
ƒód
 == 0) {

69 i‡(
vîbo£
)

70 
	`Ârötf
(
°dîr
, "connection closed byÖeer\n");

74 i‡(
¸lf
) {

75 
¡owrôe
 = 
	`¸lf_°rù
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

76 i‡(
	`wrôí
(
STDOUT_FILENO
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

77 
	`îr_sys
("writenÉrrorÅo stdout");

79 i‡(
	`wrôí
(
STDOUT_FILENO
, 
rbuf
, 
ƒód
) !=Çread)

80 
	`îr_sys
("writenÉrrorÅo stdout");

83 i‡(
Êags
 != 0) {

84 
Êags
 = 0;

85 
⁄˚m‹e
;

90 i‡(
∑u£˛o£
) {

91 i‡(
vîbo£
)

92 
	`Ârötf
(
°dîr
, "pausing before close\n");

93 
	`¶ìp_us
(
∑u£˛o£
*1000);

96 i‡(
	`˛o£
(
sockfd
) < 0)

97 
	`îr_sys
("closeÉrror");

98 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/loopudp.c

10 
	~"sock.h
"

16 
	$lo›_udp
(
sockfd
)

18 
maxfdp1
, 
ƒód
, 
¡owrôe
, 
°döeof
,

19 
˛ûí
, 
£rvÀn
, 
Êags
;

20 
fd_£t
 
r£t
;

21 
sockaddr_ö
 
˛üddr
;

22 
sockaddr_ö
 
£rvaddr
;

24 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


25 
iovec
 
iov
[1];

26 
msghdr
 
msg
;

28 #ifdef 
IP_RECVDSTADDR


29 
cmsghdr
 *
cm±r
 = 
NULL
;

30 
ö_addr
 
d°öaddr
;

31 
	#CONTROLLEN
 ((
cmsghdr
Ë+ (
ö_addr
))

	)

36 i‡(
∑u£öô
)

37 
	`¶ìp_us
(
∑u£öô
*1000);

39 
Êags
 = 0;

40 
°döeof
 = 0;

41 
	`FD_ZERO
(&
r£t
);

42 
maxfdp1
 = 
sockfd
 + 1;

49 i‡(
°döeof
 == 0)

50 
	`FD_SET
(
STDIN_FILENO
, &
r£t
);

51 
	`FD_SET
(
sockfd
, &
r£t
);

53 i‡(
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL) < 0)

54 
	`îr_sys
("selectÉrror");

56 i‡(
	`FD_ISSET
(
STDIN_FILENO
, &
r£t
)) {

57 i‡–(
ƒód
 = 
	`ªad
(
STDIN_FILENO
, 
rbuf
, 
ªadÀn
)) < 0)

58 
	`îr_sys
("readÉrror from stdin");

59 i‡(
ƒód
 == 0) {

60 i‡(
hÆf˛o£
) {

61 i‡(
	`shutdown
(
sockfd
, 
SHUT_WR
) < 0)

62 
	`îr_sys
("shutdown()Érror");

64 
	`FD_CLR
(
STDIN_FILENO
, &
r£t
);

65 
°döeof
 = 1;

71 i‡(
¸lf
) {

72 
¡owrôe
 = 
	`¸lf_add
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

73 i‡(
c⁄√˘udp
) {

74 i‡(
	`wrôe
(
sockfd
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

75 
	`îr_sys
("writeÉrror");

77 i‡(
	`£ndto
(
sockfd
, 
wbuf
, 
¡owrôe
, 0,

78 (
sockaddr
 *Ë&
£rvaddr
, (servaddr))

79 !
¡owrôe
)

80 
	`îr_sys
("sendtoÉrror");

83 i‡(
c⁄√˘udp
) {

84 i‡(
	`wrôe
(
sockfd
, 
rbuf
, 
ƒód
) !=Çread)

85 
	`îr_sys
("writeÉrror");

87 i‡(
	`£ndto
(
sockfd
, 
rbuf
, 
ƒód
, 0,

88 (
sockaddr
 *Ë&
£rvaddr
, (servaddr))

89 !
ƒód
)

90 
	`îr_sys
("sendtoÉrror");

95 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

96 i‡(
£rvî
) {

97 
˛ûí
 = (
˛üddr
);

98 #i‚def 
HAVE_MSGHDR_MSG_CONTROL


99 
ƒód
 = 
	`ªcv‰om
(
sockfd
, 
rbuf
, 
ªadÀn
, 0,

100 (
sockaddr
 *Ë&
˛üddr
, &
˛ûí
);

106 
iov
[0].
iov_ba£
 = 
rbuf
;

107 
iov
[0].
iov_Àn
 = 
ªadÀn
;

108 
msg
.
msg_iov
 = 
iov
;

109 
msg
.
msg_iovÀn
 = 1;

110 
msg
.
msg_«me
 = (
ˇddr_t
Ë&
˛üddr
;

111 
msg
.
msg_«mñí
 = 
˛ûí
;

113 #ifdef 
IP_RECVDSTADDR


114 i‡(
cm±r
 =
NULL
 && (cm±∏
	`mÆloc
(
CONTROLLEN
)) == NULL)

115 
	`îr_sys
("mallocÉrror for control buffer");

117 
msg
.
msg_c⁄åﬁ
 = (
ˇddr_t
Ë
cm±r
;

118 
msg
.
msg_c⁄åﬁÀn
 = 
CONTROLLEN
;

120 
msg
.
msg_c⁄åﬁ
 = (
ˇddr_t
) 0;

121 
msg
.
msg_c⁄åﬁÀn
 = 0;

123 
msg
.
msg_Êags
 = 0;

125 
ƒód
 = 
	`ªcvmsg
(
sockfd
, &
msg
, 0);

127 i‡(
ƒód
 < 0)

128 
	`îr_sys
("datagramÑeceiveÉrror");

130 i‡(
vîbo£
) {

131 
	`¥ötf
("‰om %s", 
	`INET_NTOA
(
˛üddr
.
sö_addr
));

132 #ifdef 
HAVE_MSGHDR_MSG_CONTROL


133 #ifdef 
IP_RECVDSTADDR


134 i‡(
ªcvd°addr
) {

135 i‡(
cm±r
->
cmsg_Àn
 !
CONTROLLEN
)

136 
	`îr_quô
("controlÜength (%d) != %d",

137 
cm±r
->
cmsg_Àn
, 
CONTROLLEN
);

138 i‡(
cm±r
->
cmsg_Àvñ
 !
IPPROTO_IP
)

139 
	`îr_quô
("controlÜevel != IPPROTO_IP");

140 i‡(
cm±r
->
cmsg_ty≥
 !
IP_RECVDSTADDR
)

141 
	`îr_quô
("controlÅype != IP_RECVDSTADDR");

142 
	`mem˝y
(&
d°öaddr
, 
	`CMSG_DATA
(
cm±r
),

143 (
ö_addr
));

144 
	`bzîo
(
cm±r
, 
CONTROLLEN
);

146 
	`¥ötf
(",Åÿ%s", 
	`INET_NTOA
(
d°öaddr
));

150 
	`¥ötf
(": ");

151 
	`fÊush
(
°dout
);

154 #ifdef 
MSG_TRUNC


155 i‡(
msg
.
msg_Êags
 & 
MSG_TRUNC
)

156 
	`¥ötf
("(datagramÅruncated)\n");

159 } i‡(
c⁄√˘udp
) {

161 
Êags
 = 
msg≥ek
;

162 
⁄˚m‹e
:

163 i‡–(
ƒód
 = 
	`ªcv
(
sockfd
, 
rbuf
, 
ªadÀn
, 
Êags
)) < 0)

164 
	`îr_sys
("recvÉrror");

165 i‡(
ƒód
 == 0) {

166 i‡(
vîbo£
)

167 
	`Ârötf
(
°dîr
, "connection closed byÖeer\n");

173 
£rvÀn
 = (
£rvaddr
);

174 
ƒód
 = 
	`ªcv‰om
(
sockfd
, 
rbuf
, 
ªadÀn
, 0,

175 (
sockaddr
 *Ë&
£rvaddr
, &
£rvÀn
);

176 i‡(
ƒód
 < 0)

177 
	`îr_sys
("datagramÑecvfrom()Érror");

179 i‡(
vîbo£
) {

180 
	`¥ötf
("‰om %s", 
	`INET_NTOA
(
£rvaddr
.
sö_addr
));

181 
	`¥ötf
(": ");

182 
	`fÊush
(
°dout
);

186 i‡(
¸lf
) {

187 
¡owrôe
 = 
	`¸lf_°rù
(
wbuf
, 
wrôñí
, 
rbuf
, 
ƒód
);

188 i‡(
	`wrôí
(
STDOUT_FILENO
, 
wbuf
, 
¡owrôe
) !=Çtowrite)

189 
	`îr_sys
("writenÉrrorÅo stdout");

191 i‡(
	`wrôí
(
STDOUT_FILENO
, 
rbuf
, 
ƒód
) !=Çread)

192 
	`îr_sys
("writenÉrrorÅo stdout");

195 i‡(
Êags
 != 0) {

196 
Êags
 = 0;

197 
⁄˚m‹e
;

202 i‡(
∑u£˛o£
) {

203 i‡(
vîbo£
)

204 
	`Ârötf
(
°dîr
, "pausing before close\n");

205 
	`¶ìp_us
(
∑u£˛o£
*1000);

208 i‡(
	`˛o£
(
sockfd
) < 0)

209 
	`îr_sys
("closeÉrror");

210 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/main.c

10 
	~"sock.h
"

12 *
	gho°
;

13 *
	gp‹t
;

16 
	gbödp‹t
;

18 
	gbrﬂdˇ°
;

19 
	gcbªak
;

20 
	gchunkwrôe
;

21 
	g˛õ¡
 = 1;

22 
	gc⁄√˘udp
 = 1;

23 
	g¸lf
;

24 
	gdebug
;

25 
	gdof‹k
;

26 
	gd⁄åouã
;

27 
	gf‹eignù
[32];

28 
	gf‹eig≈‹t
;

29 
	ghÆf˛o£
;

30 
	gign‹ewîr
;

31 
	gùtos
 = -1;

32 
	gùâl
 = -1;

33 
	gjoöù
[32];

34 
	gkì∑live
;

35 
	glögî
 = -1;

36 
	gli°íq
 = 5;

37 
	gloˇlù
[32];

38 
	gmax£g
;

39 
	gmˇ°âl
;

40 
	gmsg≥ek
;

41 
	gnodñay
;

42 
	gnbuf
 = 1024;

43 
	g⁄esbˇ°
;

44 
	g∑u£˛o£
;

45 
	g∑u£öô
;

46 
	g∑u£li°í
;

47 
	g∑u£rw
;

48 
	gªu£addr
;

49 
	gªu£p‹t
;

50 
	gªadÀn
 = 1024;

51 
	gwrôñí
 = 1024;

52 
	gªcvd°addr
;

53 
	grcvbuÊí
;

54 
	g¢dbuÊí
;

55 
	grcvtimeo
;

56 
	g¢dtimeo
;

57 
	g§ouã_˙t
;

58 *
	grbuf
;

59 *
	gwbuf
;

60 
	g£rvî
;

61 
	gsigio
;

62 
	gsour˚sök
;

63 
	gudp
;

64 
	gurgwrôe
;

65 
	gvîbo£
;

66 
	gu£wrôev
;

68 
sockaddr_ö
 
	g˛üddr
, 
	g£rvaddr
;

70 
ußge
(const *);

73 
	$maö
(
¨gc
, *
¨gv
[])

75 
c
, 
fd
;

76 *
±r
;

78 i‡(
¨gc
 < 2)

79 
	`ußge
("");

81 
›ãº
 = 0;

82  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "2b:cf:g:hij:kl:n:op:q:r:st:uvw:x:y:ABCDEFG:H:IJ:KL:NO:P:Q:R:S:TU:VWX:YZ")) != -1) {

83 
c
) {

84 #ifdef 
IP_ONESBCAST


86 
⁄esbˇ°
 = 1;

91 
bödp‹t
 = 
	`©oi
(
›èrg
);

95 
¸lf
 = 1;

99 i‡–(
±r
 = 
	`°ºchr
(
›èrg
, '.')Ë=
NULL
)

100 
	`ußge
("invalid -f option");

102 *
±r
++ = 0;

103 
f‹eig≈‹t
 = 
	`©oi
(
±r
);

104 
	`°r˝y
(
f‹eignù
, 
›èrg
);

108 
	`§ouã_do›t
(0, 
›èrg
);

112 
hÆf˛o£
 = 1;

116 
sour˚sök
 = 1;

119 #ifdef 
IP_ADD_MEMBERSHIP


121 
	`°r˝y
(
joöù
, 
›èrg
);

126 
chunkwrôe
 = 1;

130 i‡–(
±r
 = 
	`°ºchr
(
›èrg
, '.')Ë=
NULL
)

131 
	`ußge
("invalid -l option");

133 *
±r
++ = 0;

134 
bödp‹t
 = 
	`©oi
(
±r
);

135 
	`°r˝y
(
loˇlù
, 
›èrg
);

139 
nbuf
 = 
	`©ﬁ
(
›èrg
);

143 
c⁄√˘udp
 = 0;

147 
∑u£rw
 = 
	`©oi
(
›èrg
);

151 
li°íq
 = 
	`©oi
(
›èrg
);

155 
ªadÀn
 = 
	`©oi
(
›èrg
);

159 
£rvî
 = 1;

160 
˛õ¡
 = 0;

163 #ifdef 
IP_MULTICAST_TTL


165 
mˇ°âl
 = 
	`©oi
(
›èrg
);

170 
udp
 = 1;

174 
vîbo£
++;

178 
wrôñí
 = 
	`©oi
(
›èrg
);

182 
rcvtimeo
 = 
	`©ﬁ
(
›èrg
);

186 
¢dtimeo
 = 
	`©ﬁ
(
›èrg
);

190 
ªu£addr
 = 1;

194 
brﬂdˇ°
 = 1;

198 
cbªak
 = 1;

202 
debug
 = 1;

206 
ªcvd°addr
 = 1;

210 
dof‹k
 = 1;

214 
	`§ouã_do›t
(1, 
›èrg
);

217 #ifdef 
IP_TOS


219 
ùtos
 = 
	`©oi
(
›èrg
);

224 
sigio
 = 1;

227 #ifdef 
IP_TTL


229 
ùâl
 = 
	`©oi
(
›èrg
);

234 
kì∑live
 = 1;

238 
lögî
 = 
	`©ﬁ
(
›èrg
);

242 
nodñay
 = 1;

246 
∑u£li°í
 = 
	`©oi
(
›èrg
);

250 
∑u£öô
 = 
	`©oi
(
›èrg
);

254 
∑u£˛o£
 = 
	`©oi
(
›èrg
);

258 
rcvbuÊí
 = 
	`©oi
(
›èrg
);

262 
¢dbuÊí
 = 
	`©oi
(
›èrg
);

265 #ifdef 
SO_REUSEPORT


267 
ªu£p‹t
 = 1;

272 
urgwrôe
 = 
	`©oi
(
›èrg
);

276 
u£wrôev
 = 1;

277 
chunkwrôe
 = 1;

281 
ign‹ewîr
 = 1;

285 
max£g
 = 
	`©oi
(
›èrg
);

289 
d⁄åouã
 = 1;

293 
msg≥ek
 = 
MSG_PEEK
;

297 
	`ußge
("unrecognized option");

302 i‡(
udp
 && 
hÆf˛o£
)

303 
	`ußge
("can't specify -hánd -u");

304 i‡(
udp
 && 
debug
)

305 
	`ußge
("can't specify -Dánd -u");

306 i‡(
udp
 && 
lögî
 >= 0)

307 
	`ußge
("can't specify -Lánd -u");

308 i‡(
udp
 && 
nodñay
)

309 
	`ußge
("can't specify -Nánd -u");

310 #ifdef 
nŸdef


311 i‡(
udp
 =0 && 
brﬂdˇ°
)

312 
	`ußge
("can't specify -B with TCP");

314 i‡(
udp
 =0 && 
f‹eignù
[0] != 0)

315 
	`ußge
("can't specify -f with TCP");

317 i‡(
˛õ¡
) {

318 i‡(
›töd
 !
¨gc
-2)

319 
	`ußge
("missing <hostname>ánd/or <port>");

320 
ho°
 = 
¨gv
[
›töd
];

321 
p‹t
 = 
¨gv
[
›töd
+1];

326 i‡(
›töd
 =
¨gc
-2) {

327 
ho°
 = 
¨gv
[
›töd
];

328 
p‹t
 = 
¨gv
[
›töd
+1];

329 } i‡(
›töd
 =
¨gc
-1) {

330 
ho°
 = 
NULL
;

331 
p‹t
 = 
¨gv
[
›töd
];

333 
	`ußge
("missing <port>");

336 i‡(
˛õ¡
)

337 
fd
 = 
	`˛i›í
(
ho°
, 
p‹t
);

339 
fd
 = 
	`£rv›í
(
ho°
, 
p‹t
);

341 i‡(
sour˚sök
) {

342 i‡(
˛õ¡
) {

343 i‡(
udp
)

344 
	`sour˚_udp
(
fd
);

346 
	`sour˚_t˝
(
fd
);

348 i‡(
udp
)

349 
	`sök_udp
(
fd
);

351 
	`sök_t˝
(
fd
);

355 i‡(
udp
)

356 
	`lo›_udp
(
fd
);

358 
	`lo›_t˝
(
fd
);

361 
	`exô
(0);

362 
	}
}

365 
	$ußge
(c⁄° *
msg
)

367 
	`îr_msg
(

378 #ifdef 
IP_ADD_MEMBERSHIP


389 #ifdef 
IP_MULTICAST_TTL


404 #ifdef 
IP_TOS


408 #ifdef 
IP_TTL


419 #ifdef 
SO_REUSEPORT


428 #ifdef 
IP_ONESBCAST


433 i‡(
msg
[0] != 0)

434 
	`îr_quô
("%s", 
msg
);

435 
	`exô
(1);

436 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/multicast.c

10 
	~"sock.h
"

13 
	$joö_mˇ°
(
fd
, 
sockaddr_ö
 *
sö
)

15 #ifdef 
IP_ADD_MEMBERSHIP


16 
u_l⁄g
 
öaddr
;

17 
ù_mªq
 
mªq
;

19 
öaddr
 = 
sö
->
sö_addr
.
s_addr
;

20 i‡(
	`IN_MULTICAST
(
öaddr
) == 0)

23 
mªq
.
imr_mu…üddr
.
s_addr
 = 
öaddr
;

24 
mªq
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

25 i‡(
	`£tsock›t
(
fd
, 
IPPROTO_IP
, 
IP_ADD_MEMBERSHIP
, &
mªq
,

26 (
mªq
)) == -1 )

27 
	`îr_sys
("IP_ADD_MEMBERSHIPÉrror");

29 i‡(
vîbo£
)

30 
	`Ârötf
(
°dîr
, "multicast group joined\n");

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/ourhdr.h

3 #i‚def 
__ourhdr_h


4 
	#__ourhdr_h


	)

6 
	~<sys/ty≥s.h
>

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<uni°d.h
>

12 #ifdef 
nŸdef


13 
	tssize_t
;

16 #ifdef 
nŸdef


17 *
›èrg
;

18 
›töd
, 
›ãº
, 
›t›t
;

21 #ifdef 
nŸdef


22 
	#£nd
(
a
,
b
,
c
,
d
Ë
	`£ndto
(◊), (b), (c), (d), (
sockaddr
 *Ë
NULL
, 0)

	)

25 
	#MAXLINE
 4096

	)

27 
	#FILE_MODE
 (
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
)

	)

29 
	#DIR_MODE
 (
FILE_MODE
 | 
S_IXUSR
 | 
S_IXGRP
 | 
S_IXOTH
)

	)

32 
	tSigfunc
();

35 #if 
deföed
(
SIG_IGN
Ë&& !deföed(
SIG_ERR
)

36 
	#SIG_ERR
 ((
Sigfunc
 *)-1)

	)

39 
	#mö
(
a
,
b
Ë(◊Ë< (bË? (aË: (b))

	)

40 
	#max
(
a
,
b
Ë(◊Ë> (bË? (aË: (b))

	)

43 *
∑th_Æloc
(*);

44 
›í_max
();

45 
˛r_Ê
(, );

46 
£t_Ê
(, );

47 
¥_exô
();

48 
¥_mask
(const *);

49 
Sigfunc
 *
sig«l_öå
(, Sigfunc *);

51 
ây_cbªak
();

52 
ây_øw
();

53 
ây_ª£t
();

54 
ây_©exô
();

55 #ifdef 
ECHO


56 
ãrmios
 *
ây_ãrmios
();

59 
¶ìp_us
();

60 
ssize_t
 
ªadn
(, *, 
size_t
);

61 
ssize_t
 
wrôí
(, c⁄° *, 
size_t
);

62 
d´m⁄_öô
();

64 
s_pùe
(*);

65 
ªcv_fd
(, 
	$ssize_t
 (*
func
)(, c⁄° *, 
size_t
));

67 
	`£nd_fd
(, );

68 
	`£nd_îr
(, , const *);

69 
	`£rv_li°í
(const *);

70 
	`£rv_ac˚±
(, 
uid_t
 *);

71 
	`˛i_c⁄n
(const *);

72 
	`buf_¨gs
(*, (*
func
)(, **));

75 
	`±ym_›í
(*);

76 
	`±ys_›í
(, *);

77 #ifdef 
TIOCGWINSZ


78 
pid_t
 
	`±y_f‹k
(*, *, c⁄° 
ãrmios
 *,

79 c⁄° 
wösize
 *);

82 
	`lock_ªg
(, , , 
off_t
, , off_t);

84 
	#ªad_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

85 
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_RDLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

86 
	#ªadw_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

87 
	`lock_ªg
(
fd
, 
F_SETLKW
, 
F_RDLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

88 
	#wrôe_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

89 
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_WRLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

90 
	#wrôew_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

91 
	`lock_ªg
(
fd
, 
F_SETLKW
, 
F_WRLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

92 
	#un_lock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

93 
	`lock_ªg
(
fd
, 
F_SETLK
, 
F_UNLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

95 
pid_t
 
	`lock_ã°
(, , 
off_t
, , off_t);

98 
	#is_ªadlock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

99 
	`lock_ã°
(
fd
, 
F_RDLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

100 
	#is_wrôñock
(
fd
, 
off£t
, 
whí˚
, 
Àn
) \

101 
	`lock_ã°
(
fd
, 
F_WRLCK
, 
off£t
, 
whí˚
, 
Àn
)

	)

103 
	`îr_dump
(const *, ...);

104 
	`îr_msg
(const *, ...);

105 
	`îr_quô
(const *, ...);

106 
	`îr_ªt
(const *, ...);

107 
	`îr_sys
(const *, ...);

109 
	`log_msg
(const *, ...);

110 
	`log_›í
(const *, , );

111 
	`log_quô
(const *, ...);

112 
	`log_ªt
(const *, ...);

113 
	`log_sys
(const *, ...);

115 
	`TELL_WAIT
();

116 
	`TELL_PARENT
(
pid_t
);

117 
	`TELL_CHILD
(
pid_t
);

118 
	`WAIT_PARENT
();

119 
	`WAIT_CHILD
();

	@/media/sf_ddrive/progs/network/unpv13e/sock/pattern.c

10 
	~"sock.h
"

11 
	~<˘y≥.h
>

14 
	$∑âîn
(*
±r
, 
Àn
)

16 
c
;

18 
c
 = 0;

19 
Àn
-- > 0) {

20 
	`i•röt
((
c
 & 0x7F)) == 0)

21 
c
++;

22 *
±r
++ = (
c
++ & 0x7F);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/servopen.c

10 
	~"sock.h
"

13 
	$£rv›í
(*
ho°
, *
p‹t
)

15 
fd
, 
√wfd
, 
i
, 
⁄
, 
pid
;

16 c⁄° *
¥Ÿocﬁ
;

17 
ö_addr
 
öaddr
;

18 
£rvít
 *
•
;

20 
¥Ÿocﬁ
 = 
udp
 ? "udp" : "tcp";

23 
	`bzîo
(&
£rvaddr
, (servaddr));

24 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

29 i‡(
ho°
 =
NULL
)

30 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

32 i‡(
	`öë_©⁄
(
ho°
, &
öaddr
) == 0)

33 
	`îr_quô
("övÆid ho°Çamêf‹ sîvî: %s", 
ho°
);

34 
£rvaddr
.
sö_addr
 = 
öaddr
;

38 i‡–(
i
 = 
	`©oi
(
p‹t
)) == 0) {

39 i‡–(
•
 = 
	`gë£rvby«me
(
p‹t
, 
¥Ÿocﬁ
)Ë=
NULL
)

40 
	`îr_ªt
("gë£rvby«me(Ëîr‹ f‹: %s/%s", 
p‹t
, 
¥Ÿocﬁ
);

42 
£rvaddr
.
sö_p‹t
 = 
•
->
s_p‹t
;

44 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
i
);

46 i‡–(
fd
 = 
	`sockë
(
AF_INET
, 
udp
 ? 
SOCK_DGRAM
 : 
SOCK_STREAM
, 0)) < 0)

47 
	`îr_sys
("socket()Érror");

49 i‡(
ªu£addr
) {

50 
⁄
 = 1;

51 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on)) < 0)

52 
	`îr_sys
("setsockopt of SO_REUSEADDRÉrror");

55 #ifdef 
SO_REUSEPORT


56 i‡(
ªu£p‹t
) {

57 
⁄
 = 1;

58 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_REUSEPORT
, &
⁄
, (on)) < 0)

59 
	`îr_sys
("setsockopt of SO_REUSEPORTÉrror");

64 i‡(
	`böd
(
fd
, (
sockaddr
 *Ë&
£rvaddr
, (servaddr)) < 0)

65 
	`îr_sys
("can't bindÜocaláddress");

67 
	`joö_mˇ°
(
fd
, &
£rvaddr
);

69 i‡(
udp
) {

70 
	`buf„rs
(
fd
);

72 i‡(
f‹eignù
[0] != 0) {

73 
	`bzîo
(&
˛üddr
, (cliaddr));

74 i‡(
	`öë_©⁄
(
f‹eignù
, &
˛üddr
.
sö_addr
) == 0)

75 
	`îr_quô
("övÆid IPáddªss: %s", 
f‹eignù
);

76 
˛üddr
.
sö_Ámûy
 = 
AF_INET
;

77 
˛üddr
.
sö_p‹t
 = 
	`ht⁄s
(
f‹eig≈‹t
);

81 i‡(
	`c⁄√˘
(
fd
, (
sockaddr
 *Ë&
˛üddr
, (cliaddr))

83 
	`îr_sys
("connect()Érror");

87 
	`sock›ts
(
fd
, 1);

89 (
fd
);

92 
	`buf„rs
(
fd
);

94 
	`sock›ts
(
fd
, 0);

96 
	`li°í
(
fd
, 
li°íq
);

98 i‡(
∑u£li°í
)

99 
	`¶ìp_us
(
∑u£li°í
*1000);

101 i‡(
dof‹k
)

102 
	`TELL_WAIT
();

105 
i
 = (
˛üddr
);

106 i‡–(
√wfd
 = 
	`ac˚±
(
fd
, (
sockaddr
 *Ë&
˛üddr
, &
i
)) < 0)

107 
	`îr_sys
("accept()Érror");

109 i‡(
dof‹k
) {

110 i‡–(
pid
 = 
	`f‹k
()) < 0)

111 
	`îr_sys
("forkÉrror");

113 i‡(
pid
 > 0) {

114 
	`˛o£
(
√wfd
);

115 
	`WAIT_CHILD
();

118 
	`˛o£
(
fd
);

123 i‡(
vîbo£
) {

126 
i
 = (
£rvaddr
);

127 i‡(
	`gësock«me
(
√wfd
, (
sockaddr
 *Ë&
£rvaddr
, &
i
) < 0)

128 
	`îr_sys
("getsockname()Érror");

132 
	`Ârötf
(
°dîr
, "connection on %s.%d ",

133 
	`INET_NTOA
(
£rvaddr
.
sö_addr
), 
	`¡ohs
(£rvaddr.
sö_p‹t
));

134 
	`Ârötf
(
°dîr
, "from %s.%d\n",

135 
	`INET_NTOA
(
˛üddr
.
sö_addr
), 
	`¡ohs
(˛üddr.
sö_p‹t
));

138 
	`buf„rs
(
√wfd
);

140 
	`sock›ts
(
√wfd
, 1);

142 i‡(
dof‹k
)

143 
	`TELL_PARENT
(
	`gëµid
());

145 (
√wfd
);

147 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sinktcp.c

10 
	~"sock.h
"

13 
	$sök_t˝
(
sockfd
)

15 
n
, 
Êags
;

17 i‡(
∑u£öô
)

18 
	`¶ìp_us
(
∑u£öô
*1000);

22 
Êags
 = 
msg≥ek
;

23 
⁄˚m‹e
:

24 i‡–(
n
 = 
	`ªcv
(
sockfd
, 
rbuf
, 
ªadÀn
, 
Êags
)) < 0) {

25 
	`îr_sys
("recvÉrror");

27 } i‡(
n
 == 0) {

28 i‡(
vîbo£
)

29 
	`Ârötf
(
°dîr
, "connection closed byÖeer\n");

32 #ifdef 
nŸdef


33 } i‡(
n
 !
ªadÀn
)

34 
	`îr_quô
("ªadÑëu∫ed %d,Éx≥˘ed %d", 
n
, 
ªadÀn
);

39 i‡(
vîbo£
)

40 
	`Ârötf
(
°dîr
, "ª˚ived %d byãs%s\n", 
n
,

41 (
Êags
 =
MSG_PEEK
) ? " (MSG_PEEK)" : "");

43 i‡(
∑u£rw
)

44 
	`¶ìp_us
(
∑u£rw
*1000);

46 i‡(
Êags
 != 0) {

47 
Êags
 = 0;

48 
⁄˚m‹e
;

52 i‡(
∑u£˛o£
) {

53 i‡(
vîbo£
)

54 
	`Ârötf
(
°dîr
, "pausing before close\n");

55 
	`¶ìp_us
(
∑u£˛o£
*1000);

58 i‡(
	`˛o£
(
sockfd
) < 0)

59 
	`îr_sys
("closeÉrror");

60 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sinkudp.c

10 
	~"sock.h
"

13 
	$sök_udp
(
sockfd
)

15 
n
, 
Êags
;

17 i‡(
∑u£öô
)

18 
	`¶ìp_us
(
∑u£öô
*1000);

22 
Êags
 = 
msg≥ek
;

23 
⁄˚m‹e
:

24 i‡–(
n
 = 
	`ªcv
(
sockfd
, 
rbuf
, 
ªadÀn
, 
Êags
)) < 0) {

25 
	`îr_sys
("recvÉrror");

27 } i‡(
n
 == 0) {

28 i‡(
vîbo£
)

29 
	`Ârötf
(
°dîr
, "connection closed byÖeer\n");

32 #ifdef 
nŸdef


33 } i‡(
n
 !
ªadÀn
)

34 
	`îr_quô
("ªadÑëu∫ed %d,Éx≥˘ed %d", 
n
, 
ªadÀn
);

39 i‡(
vîbo£
) {

40 
	`Ârötf
(
°dîr
, "ª˚ived %d byãs%s\n", 
n
,

41 (
Êags
 =
MSG_PEEK
) ? " (MSG_PEEK)" : "");

42 i‡(
vîbo£
 > 1) {

43 
	`Ârötf
(
°dîr
, "¥ötög %d byãs\n", 
n
);

44 
rbuf
[
n
] = 0;

45 
	`Ârötf
(
°dîr
, "SDAP hódî: %lx\n", *((*Ë
rbuf
));

46 
	`Ârötf
(
°dîr
, "√xàl⁄g: %lx\n", *((*Ë
rbuf
+4));

47 
	`Âuts
(&
rbuf
[8], 
°dîr
);

51 i‡(
∑u£rw
)

52 
	`¶ìp_us
(
∑u£rw
*1000);

54 i‡(
Êags
 != 0) {

55 
Êags
 = 0;

56 
⁄˚m‹e
;

60 i‡(
∑u£˛o£
) {

61 i‡(
vîbo£
)

62 
	`Ârötf
(
°dîr
, "pausing before close\n");

63 
	`¶ìp_us
(
∑u£˛o£
*1000);

66 i‡(
	`˛o£
(
sockfd
) < 0)

67 
	`îr_sys
("closeÉrror");

68 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sleepus.c

1 
	~<sys/ty≥s.h
>

2 
	~<sys/time.h
>

3 
	~<î∫o.h
>

4 
	~<°ddef.h
>

5 
	~"ourhdr.h
"

8 
	$¶ìp_us
(
nu£cs
)

10 
timevÆ
 
tvÆ
;

13 
tvÆ
.
tv_£c
 = 
nu£cs
 / 1000000;

14 
tvÆ
.
tv_u£c
 = 
nu£cs
 % 1000000;

15 i‡(
	`£À˘
(0, 
NULL
, NULL, NULL, &
tvÆ
) == 0)

25 i‡(
î∫o
 =
EINTR
)

27 
	`îr_sys
("sleep_us: selectÉrror");

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sock.h

10 
	~"u≈.h
"

12 
	~<sys/uio.h
>

13 #ifdef 
__bsdi__


14 
	~<machöe/ídün.h
>

16 
	~<√töë/t˝.h
>

17 
	~<√tdb.h
>

20 
bödp‹t
;

21 
brﬂdˇ°
;

22 
cbªak
;

23 
chunkwrôe
;

24 
˛õ¡
;

25 
c⁄√˘udp
;

26 
¸lf
;

27 
debug
;

28 
dof‹k
;

29 
d⁄åouã
;

30 
f‹eignù
[];

31 
f‹eig≈‹t
;

32 
hÆf˛o£
;

33 
ign‹ewîr
;

34 
ùtos
;

35 
ùâl
;

36 
joöù
[];

37 
kì∑live
;

38 
lögî
;

39 
li°íq
;

40 
loˇlù
[];

41 
max£g
;

42 
mˇ°âl
;

43 
msg≥ek
;

44 
nodñay
;

45 
nbuf
;

46 
⁄esbˇ°
;

47 
∑u£˛o£
;

48 
∑u£öô
;

49 
∑u£li°í
;

50 
∑u£rw
;

51 
ªu£addr
;

52 
ªu£p‹t
;

53 
ªadÀn
;

54 
wrôñí
;

55 
ªcvd°addr
;

56 
rcvbuÊí
;

57 
¢dbuÊí
;

58 
rcvtimeo
;

59 
¢dtimeo
;

60 *
rbuf
;

61 *
wbuf
;

62 
£rvî
;

63 
sigio
;

64 
sour˚sök
;

65 
§ouã_˙t
;

66 
udp
;

67 
urgwrôe
;

68 
vîbo£
;

69 
u£wrôev
;

71 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

77 #if 
deföed
(
sun
Ë&& deföed(
__GNUC__
Ë&& deföed(
GCC_STRUCT_PROBLEM
)

78 
	#INET_NTOA
(
foo
Ë
	`öë_¡ﬂ
(&foo)

	)

80 
	#INET_NTOA
(
foo
Ë
	`öë_¡ﬂ
(foo)

	)

84 
buf„rs
();

85 
˛i›í
(*, *);

86 
¸lf_add
(*, , const *, );

87 
¸lf_°rù
(*, , const *, );

88 
joö_mˇ°
(, 
sockaddr_ö
 *);

89 
lo›_t˝
();

90 
lo›_udp
();

91 
∑âîn
(*, );

92 
£rv›í
(*, *);

93 
sök_t˝
();

94 
sök_udp
();

95 
sour˚_t˝
();

96 
sour˚_udp
();

97 
§ouã_do›t
(, *);

98 
§ouã_£t
();

99 
¶ìp_us
();

100 
sock›ts
(, );

101 
ssize_t
 
dowrôe
(, c⁄° *, 
size_t
);

103 
TELL_WAIT
();

104 
TELL_PARENT
(
pid_t
);

105 
WAIT_PARENT
();

106 
TELL_CHILD
(
pid_t
);

107 
WAIT_CHILD
();

	@/media/sf_ddrive/progs/network/unpv13e/sock/sockopts.c

10 
	~"sock.h
"

11 
	~<f˙é.h
>

12 
	~<sys/io˘l.h
>

15 
	$sock›ts
(
sockfd
, 
dﬂŒ
)

17 
›ti⁄
, 
›éí
;

18 
lögî
 
lög
;

19 
timevÆ
 
timî
;

25 i‡(
debug
) {

26 
›ti⁄
 = 1;

27 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_DEBUG
,

28 &
›ti⁄
, (option)) < 0)

29 
	`îr_sys
("SO_DEBUG setsockoptÉrror");

31 
›ti⁄
 = 0;

32 
›éí
 = (
›ti⁄
);

33 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_DEBUG
,

34 &
›ti⁄
, &
›éí
) < 0)

35 
	`îr_sys
("SO_DEBUG getsockoptÉrror");

36 i‡(
›ti⁄
 == 0)

37 
	`îr_quô
("SO_DEBUGÇŸ së (%d)", 
›ti⁄
);

39 i‡(
vîbo£
)

40 
	`Ârötf
(
°dîr
, "SO_DEBUG set\n");

43 i‡(
d⁄åouã
) {

44 
›ti⁄
 = 1;

45 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_DONTROUTE
,

46 &
›ti⁄
, (option)) < 0)

47 
	`îr_sys
("SO_DONTROUTE setsockoptÉrror");

49 
›ti⁄
 = 0;

50 
›éí
 = (
›ti⁄
);

51 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_DONTROUTE
,

52 &
›ti⁄
, &
›éí
) < 0)

53 
	`îr_sys
("SO_DONTROUTE getsockoptÉrror");

54 i‡(
›ti⁄
 == 0)

55 
	`îr_quô
("SO_DONTROUTEÇŸ së (%d)", 
›ti⁄
);

57 i‡(
vîbo£
)

58 
	`Ârötf
(
°dîr
, "SO_DONTROUTE set\n");

61 #ifdef 
IP_TOS


62 i‡(
ùtos
 !-1 && 
dﬂŒ
 == 0) {

63 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_TOS
,

64 &
ùtos
, (iptos)) < 0)

65 
	`îr_sys
("IP_TOS setsockoptÉrror");

67 
›ti⁄
 = 0;

68 
›éí
 = (
›ti⁄
);

69 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_TOS
,

70 &
›ti⁄
, &
›éí
) < 0)

71 
	`îr_sys
("IP_TOS getsockoptÉrror");

72 i‡(
›ti⁄
 !
ùtos
)

73 
	`îr_quô
("IP_TOSÇŸ së (%d)", 
›ti⁄
);

75 i‡(
vîbo£
)

76 
	`Ârötf
(
°dîr
, "IP_TOS sëÅÿ%d\n", 
ùtos
);

80 #ifdef 
IP_TTL


81 i‡(
ùâl
 !-1 && 
dﬂŒ
 == 0) {

82 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_TTL
,

83 &
ùâl
, (ipttl)) < 0)

84 
	`îr_sys
("IP_TTL setsockoptÉrror");

86 
›ti⁄
 = 0;

87 
›éí
 = (
›ti⁄
);

88 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_TTL
,

89 &
›ti⁄
, &
›éí
) < 0)

90 
	`îr_sys
("IP_TTL getsockoptÉrror");

91 i‡(
›ti⁄
 !
ùâl
)

92 
	`îr_quô
("IP_TTLÇŸ së (%d)", 
›ti⁄
);

94 i‡(
vîbo£
)

95 
	`Ârötf
(
°dîr
, "IP_TTL sëÅÿ%d\n", 
ùâl
);

99 i‡(
max£g
 && 
udp
 == 0) {

103 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
,

104 &
max£g
, (maxseg)) < 0)

105 
	`îr_sys
("TCP_MAXSEG setsockoptÉrror");

107 
›ti⁄
 = 0;

108 
›éí
 = (
›ti⁄
);

109 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
,

110 &
›ti⁄
, &
›éí
) < 0)

111 
	`îr_sys
("TCP_MAXSEG getsockoptÉrror");

113 i‡(
vîbo£
)

114 
	`Ârötf
(
°dîr
, "TCP_MAXSEG = %d\n", 
›ti⁄
);

117 i‡(
§ouã_˙t
 > 0)

118 
	`§ouã_£t
(
sockfd
);

120 i‡(
brﬂdˇ°
) {

121 
›ti⁄
 = 1;

122 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
,

123 &
›ti⁄
, (option)) < 0)

124 
	`îr_sys
("SO_BROADCAST setsockoptÉrror");

126 
›ti⁄
 = 0;

127 
›éí
 = (
›ti⁄
);

128 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_BROADCAST
,

129 &
›ti⁄
, &
›éí
) < 0)

130 
	`îr_sys
("SO_BROADCAST getsockoptÉrror");

131 i‡(
›ti⁄
 == 0)

132 
	`îr_quô
("SO_BROADCASTÇŸ së (%d)", 
›ti⁄
);

134 i‡(
vîbo£
)

135 
	`Ârötf
(
°dîr
, "SO_BROADCAST set\n");

137 #ifdef 
IP_ONESBCAST


138 i‡(
⁄esbˇ°
) {

139 
›ti⁄
 = 1;

140 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_ONESBCAST
,

141 &
›ti⁄
, (option)) < 0)

142 
	`îr_sys
("IP_ONESBCAST setsockoptÉrror");

144 
›ti⁄
 = 0;

145 
›éí
 = (
›ti⁄
);

146 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_ONESBCAST
,

147 &
›ti⁄
, &
›éí
) < 0)

148 
	`îr_sys
("IP_ONESBCAST getsockoptÉrror");

149 i‡(
›ti⁄
 == 0)

150 
	`îr_quô
("IP_ONESBCASTÇŸ së (%d)", 
›ti⁄
);

152 i‡(
vîbo£
)

153 
	`Ârötf
(
°dîr
, "IP_ONESBCAST set\n");

158 #ifdef 
IP_ADD_MEMBERSHIP


159 i‡(
joöù
[0]) {

160 
ù_mªq
 
joö
;

162 i‡(
	`öë_©⁄
(
joöù
, &
joö
.
imr_mu…üddr
) == 0)

163 
	`îr_quô
("övÆid mu…iˇ°áddªss: %s", 
joöù
);

164 
joö
.
imr_öãrÁ˚
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

165 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_ADD_MEMBERSHIP
,

166 &
joö
, (join)) < 0)

167 
	`îr_sys
("IP_ADD_MEMBERSHIP setsockoptÉrror");

169 i‡(
vîbo£
)

170 
	`Ârötf
(
°dîr
, "IP_ADD_MEMBERSHIP set\n");

174 #ifdef 
IP_MULTICAST_TTL


175 i‡(
mˇ°âl
) {

176 
u_ch¨
 
âl
 = 
mˇ°âl
;

178 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_TTL
,

179 &
âl
, (ttl)) < 0)

180 
	`îr_sys
("IP_MULTICAST_TTL setsockoptÉrror");

182 
›éí
 = (
âl
);

183 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_MULTICAST_TTL
,

184 &
âl
, &
›éí
) < 0)

185 
	`îr_sys
("IP_MULTICAST_TTL getsockoptÉrror");

186 i‡(
âl
 !
mˇ°âl
)

187 
	`îr_quô
("IP_MULTICAST_TTLÇŸ së (%d)", 
âl
);

189 i‡(
vîbo£
)

190 
	`Ârötf
(
°dîr
, "IP_MULTICAST_TTL sëÅÿ%d\n", 
âl
);

194 i‡(
kì∑live
 && 
dﬂŒ
 && 
udp
 == 0) {

195 
›ti⁄
 = 1;

196 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
,

197 &
›ti⁄
, (option)) < 0)

198 
	`îr_sys
("SO_KEEPALIVE setsockoptÉrror");

200 
›ti⁄
 = 0;

201 
›éí
 = (
›ti⁄
);

202 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
,

203 &
›ti⁄
, &
›éí
) < 0)

204 
	`îr_sys
("SO_KEEPALIVE getsockoptÉrror");

205 i‡(
›ti⁄
 == 0)

206 
	`îr_quô
("SO_KEEPALIVEÇŸ së (%d)", 
›ti⁄
);

208 i‡(
vîbo£
)

209 
	`Ârötf
(
°dîr
, "SO_KEEPALIVE set\n");

212 i‡(
nodñay
 && 
dﬂŒ
 && 
udp
 == 0) {

213 
›ti⁄
 = 1;

214 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_NODELAY
,

215 &
›ti⁄
, (option)) < 0)

216 
	`îr_sys
("TCP_NODELAY setsockoptÉrror");

218 
›ti⁄
 = 0;

219 
›éí
 = (
›ti⁄
);

220 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_NODELAY
,

221 &
›ti⁄
, &
›éí
) < 0)

222 
	`îr_sys
("TCP_NODELAY getsockoptÉrror");

223 i‡(
›ti⁄
 == 0)

224 
	`îr_quô
("TCP_NODELAYÇŸ së (%d)", 
›ti⁄
);

226 i‡(
vîbo£
)

227 
	`Ârötf
(
°dîr
, "TCP_NODELAY set\n");

230 i‡(
dﬂŒ
 && 
vîbo£
 && 
udp
 == 0) {

231 
›ti⁄
 = 0;

232 
›éí
 = (
›ti⁄
);

233 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
,

234 &
›ti⁄
, &
›éí
) < 0)

235 
	`îr_sys
("TCP_MAXSEG getsockoptÉrror");

237 
	`Ârötf
(
°dîr
, "TCP_MAXSEG = %d\n", 
›ti⁄
);

240 i‡(
lögî
 >0 && 
dﬂŒ
 && 
udp
 == 0) {

241 
lög
.
l_⁄off
 = 1;

242 
lög
.
l_lögî
 = 
lögî
;

243 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_LINGER
,

244 &
lög
, (ling)) < 0)

245 
	`îr_sys
("SO_LINGER setsockoptÉrror");

247 
lög
.
l_⁄off
 = 0;

248 
lög
.
l_lögî
 = -1;

249 
›éí
 = (
lögî
);

250 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_LINGER
,

251 &
lög
, &
›éí
) < 0)

252 
	`îr_sys
("SO_LINGER getsockoptÉrror");

253 i‡(
lög
.
l_⁄off
 =0 ||Üög.
l_lögî
 !
lögî
)

254 
	`îr_quô
("SO_LINGERÇŸ së (%d, %d)", 
lög
.
l_⁄off
,Üög.
l_lögî
);

256 i‡(
vîbo£
)

257 
	`Ârötf
(
°dîr
, "linger %s,Åime = %d\n",

258 
lög
.
l_⁄off
 ? "⁄" : "off",Üög.
l_lögî
);

261 i‡(
dﬂŒ
 && 
rcvtimeo
) {

262 #ifdef 
SO_RCVTIMEO


264 
timî
.
tv_£c
 = 
rcvtimeo
 / 1000;

265 
timî
.
tv_u£c
 = (
rcvtimeo
 % 1000) * 1000;

266 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
,

267 &
timî
, (timer)) < 0)

268 
	`îr_sys
("SO_RCVTIMEO setsockoptÉrror");

270 
timî
.
tv_£c
 =Åimî.
tv_u£c
 = 0;

271 
›éí
 = (
timî
);

272 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVTIMEO
,

273 &
timî
, &
›éí
) < 0)

274 
	`îr_sys
("SO_RCVTIMEO getsockoptÉrror");

276 i‡(
vîbo£
)

277 
	`Ârötf
(
°dîr
, "SO_RCVTIMEO: %ld.%06ld\n",

278 
timî
.
tv_£c
,Åimî.
tv_u£c
);

280 
	`Ârötf
(
°dîr
, "warning: SO_RCVTIMEOÇot supported by host\n");

284 i‡(
dﬂŒ
 && 
¢dtimeo
) {

285 #ifdef 
SO_SNDTIMEO


287 
timî
.
tv_£c
 = 
¢dtimeo
 / 1000;

288 
timî
.
tv_u£c
 = (
¢dtimeo
 % 1000) * 1000;

289 i‡(
	`£tsock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDTIMEO
,

290 &
timî
, (timer)) < 0)

291 
	`îr_sys
("SO_SNDTIMEO setsockoptÉrror");

293 
timî
.
tv_£c
 =Åimî.
tv_u£c
 = 0;

294 
›éí
 = (
timî
);

295 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDTIMEO
,

296 &
timî
, &
›éí
) < 0)

297 
	`îr_sys
("SO_SNDTIMEO getsockoptÉrror");

299 i‡(
vîbo£
)

300 
	`Ârötf
(
°dîr
, "SO_SNDTIMEO: %ld.%06ld\n",

301 
timî
.
tv_£c
,Åimî.
tv_u£c
);

303 
	`Ârötf
(
°dîr
, "warning: SO_SNDTIMEOÇot supported by host\n");

307 i‡(
ªcvd°addr
 && 
udp
) {

308 #ifdef 
IP_RECVDSTADDR


309 
›ti⁄
 = 1;

310 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
,

311 &
›ti⁄
, (option)) < 0)

312 
	`îr_sys
("IP_RECVDSTADDR setsockoptÉrror");

314 
›ti⁄
 = 0;

315 
›éí
 = (
›ti⁄
);

316 i‡(
	`gësock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_RECVDSTADDR
,

317 &
›ti⁄
, &
›éí
) < 0)

318 
	`îr_sys
("IP_RECVDSTADDR getsockoptÉrror");

319 i‡(
›ti⁄
 == 0)

320 
	`îr_quô
("IP_RECVDSTADDRÇŸ së (%d)", 
›ti⁄
);

322 i‡(
vîbo£
)

323 
	`Ârötf
(
°dîr
, "IP_RECVDSTADDR set\n");

325 
	`Ârötf
(
°dîr
, "warning: IP_RECVDSTADDRÇot supported by host\n");

329 i‡(
sigio
) {

330 #ifdef 
FIOASYNC


331 
	`sigio_func
();

339 
	`sig«l
(
SIGIO
, 
sigio_func
);

341 i‡(
	`f˙é
(
sockfd
, 
F_SETOWN
, 
	`gëpid
()) < 0)

342 
	`îr_sys
("fcntl F_SETOWNÉrror");

344 
›ti⁄
 = 1;

345 i‡(
	`io˘l
(
sockfd
, 
FIOASYNC
, (*Ë&
›ti⁄
) < 0)

346 
	`îr_sys
("ioctl FIOASYNCÉrror");

348 i‡(
vîbo£
)

349 
	`Ârötf
(
°dîr
, "FIOASYNC set\n");

351 
	`Ârötf
(
°dîr
, "warning: FIOASYNCÇot supported by host\n");

354 
	}
}

357 
	$sigio_func
(
signo
)

359 
	`Ârötf
(
°dîr
, "SIGIO\n");

361 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sourceroute.c

10 
	~"sock.h
"

11 
	~<√töë/ö_sy°m.h
>

12 
	~<√töë/ù.h
>

27 
u_ch¨
 
	g§ouã_›t
[44];

29 
u_ch¨
 *
	g›å
;

41 
	$§ouã_do›t
(
°ri˘
, *
¨g±r
)

43 
ö_addr
 
öaddr
;

44 
ho°ít
 *
hp
;

46 i‡(
§ouã_˙t
 >= 9)

47 
	`îr_quô
("toÿm™y sour˚Ñouã†wôh: %s", 
¨g±r
);

49 i‡(
§ouã_˙t
 == 0) {

50 
	`bzîo
(
§ouã_›t
, (sroute_opt));

51 
›å
 = 
§ouã_›t
;

52 *
›å
++ = 
°ri˘
 ? 
IPOPT_SSRR
 : 
IPOPT_LSRR
;

53 
›å
++;

54 *
›å
++ = 4;

57 i‡(
	`öë_©⁄
(
¨g±r
, &
öaddr
) == 1) {

58 
	`mem˝y
(
›å
, &
öaddr
, (
u_l⁄g
));

59 i‡(
vîbo£
)

60 
	`Ârötf
(
°dîr
, "sour˚ÑouãÅÿ%s\n", 
	`öë_¡ﬂ
(
öaddr
));

61 } i‡–(
hp
 = 
	`gëho°by«me
(
¨g±r
)Ë!
NULL
) {

62 
	`mem˝y
(
›å
, 
hp
->
h_addr
, (
u_l⁄g
));

63 i‡(
vîbo£
)

64 
	`Ârötf
(
°dîr
, "sourceÑouteÅo %s\n",

65 
	`öë_¡ﬂ
(*((
ö_addr
 *Ë
hp
->
h_addr
)));

67 
	`îr_quô
("unknow¿ho°: %s\n", 
¨g±r
);

69 
›å
 +(
u_l⁄g
);

70 
§ouã_˙t
++;

71 
	}
}

80 
	$§ouã_£t
(
sockfd
)

82 
§ouã_˙t
++;

83 
§ouã_›t
[1] = 3 + (
§ouã_˙t
 * 4);

86 
	`mem˝y
(
›å
, &
£rvaddr
.
sö_addr
, (
u_l⁄g
));

87 
›å
 +(
u_l⁄g
);

88 i‡(
vîbo£
) {

89 
	`Ârötf
(
°dîr
, "sour˚ÑouãÅÿ%s\n", 
	`öë_¡ﬂ
(
£rvaddr
.
sö_addr
));

90 
	`Ârötf
(
°dîr
, "sour˚Ñouã sizê%d byãs\n", 
§ouã_›t
[1]);

102 (
›å
 - 
§ouã_›t
) & 3)

103 
›å
++;

105 i‡(
	`£tsock›t
(
sockfd
, 
IPPROTO_IP
, 
IP_OPTIONS
,

106 
§ouã_›t
, 
›å
 - sroute_opt) < 0)

107 
	`îr_sys
("setsockoptÉrror for IP_OPTIONS");

109 
§ouã_˙t
 = 0;

110 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sourcesink.c

10 
	~"sock.h
"

11 
	~<˘y≥.h
>

13 
∑âîn
(*
±r
, 
Àn
);

16 
	$sök
(
sockfd
)

18 
i
, 
n
;

19 
oob
;

21 i‡(
˛õ¡
) {

22 
	`∑âîn
(
wbuf
, 
wrôñí
);

24 i‡(
∑u£öô
)

25 
	`¶ìp
(
∑u£öô
);

27 
i
 = 1; i <
nbuf
; i++) {

28 i‡(
urgwrôe
 =
i
) {

29 
oob
 = 
urgwrôe
;

30 i‡–(
n
 = 
	`£nd
(
sockfd
, &
oob
, 1, 
MSG_OOB
)) != 1)

31 
	`îr_sys
("send of MSG_OOBÑeturned %d,Éxpected %d",

32 
n
, 
wrôñí
);

33 i‡(
vîbo£
)

34 
	`Ârötf
(
°dîr
, "wrŸê%d byã o‡urgíàd©a\n", 
n
);

37 i‡–(
n
 = 
	`wrôe
(
sockfd
, 
wbuf
, 
wrôñí
)) != writelen)

38 
	`îr_sys
("wrôêªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

39 i‡(
vîbo£
)

40 
	`Ârötf
(
°dîr
, "wrŸê%d byãs\n", 
n
);

42 i‡(
∑u£rw
)

43 
	`¶ìp
(
∑u£rw
);

48 i‡(
∑u£öô
)

49 
	`¶ìp
(
∑u£öô
);

52 i‡–(
n
 = 
	`ªad
(
sockfd
, 
rbuf
, 
ªadÀn
)) < 0) {

53 
	`îr_sys
("readÉrror");

55 } i‡(
n
 == 0) {

58 } i‡(
n
 !
ªadÀn
)

59 
	`îr_quô
("ªadÑëu∫ed %d,Éx≥˘ed %d", 
n
, 
ªadÀn
);

61 i‡(
vîbo£
)

62 
	`Ârötf
(
°dîr
, "ª˚ived %d byãs\n", 
n
);

64 i‡(
∑u£rw
)

65 
	`¶ìp
(
∑u£rw
);

69 i‡(
∑u£˛o£
) {

70 i‡(
vîbo£
)

71 
	`Ârötf
(
°dîr
, "pausing before close\n");

72 
	`¶ìp
(
∑u£˛o£
);

75 i‡(
	`˛o£
(
sockfd
) < 0)

76 
	`îr_sys
("closeÉrror");

77 
	}
}

80 
	$∑âîn
(*
±r
, 
Àn
)

82 
c
;

84 
c
 = 0;

85 
Àn
-- > 0) {

86 
	`i•röt
((
c
 & 0x7F)) == 0)

87 
c
++;

88 *
±r
++ = (
c
++ & 0x7F);

90 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sourcetcp.c

10 
	~"sock.h
"

13 
	$sour˚_t˝
(
sockfd
)

15 
i
, 
n
, 
›ti⁄
;

16 
sockÀn_t
 
›éí
;

17 
oob
;

19 
	`∑âîn
(
wbuf
, 
wrôñí
);

21 i‡(
∑u£öô
)

22 
	`¶ìp_us
(
∑u£öô
*1000);

24 
i
 = 1; i <
nbuf
; i++) {

25 i‡(
urgwrôe
 =
i
) {

26 
oob
 = 
urgwrôe
;

27 i‡–(
n
 = 
	`£nd
(
sockfd
, &
oob
, 1, 
MSG_OOB
)) != 1)

28 
	`îr_sys
("send of MSG_OOBÑeturned %d,Éxpected %d",

29 
n
, 
wrôñí
);

30 i‡(
vîbo£
)

31 
	`Ârötf
(
°dîr
, "wrŸê%d byã o‡urgíàd©a\n", 
n
);

34 i‡–(
n
 = 
	`wrôe
(
sockfd
, 
wbuf
, 
wrôñí
)) != writelen) {

35 i‡(
ign‹ewîr
) {

36 
	`îr_ªt
("wrôêªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

38 
›éí
 = (
›ti⁄
);

39 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_ERROR
,

40 &
›ti⁄
, &
›éí
) < 0)

41 
	`îr_sys
("SO_ERROR getsockoptÉrror");

43 
	`îr_sys
("wrôêªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

45 } i‡(
vîbo£
)

46 
	`Ârötf
(
°dîr
, "wrŸê%d byãs\n", 
n
);

48 i‡(
∑u£rw
)

49 
	`¶ìp_us
(
∑u£rw
*1000);

52 i‡(
∑u£˛o£
) {

53 i‡(
vîbo£
)

54 
	`Ârötf
(
°dîr
, "pausing before close\n");

55 
	`¶ìp_us
(
∑u£˛o£
*1000);

58 i‡(
	`˛o£
(
sockfd
) < 0)

59 
	`îr_sys
("closeÉrror");

60 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/sourceudp.c

10 
	~"sock.h
"

13 
	$sour˚_udp
(
sockfd
)

15 
i
, 
n
, 
›ti⁄
;

16 
sockÀn_t
 
›éí
;

18 
	`∑âîn
(
wbuf
, 
wrôñí
);

20 i‡(
∑u£öô
)

21 
	`¶ìp_us
(
∑u£öô
*1000);

23 
i
 = 1; i <
nbuf
; i++) {

24 i‡(
c⁄√˘udp
) {

25 i‡–(
n
 = 
	`wrôe
(
sockfd
, 
wbuf
, 
wrôñí
)) != writelen) {

26 i‡(
ign‹ewîr
) {

27 
	`îr_ªt
("wrôêªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

29 
›éí
 = (
›ti⁄
);

30 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_ERROR
,

31 &
›ti⁄
, &
›éí
) < 0)

32 
	`îr_sys
("SO_ERROR getsockoptÉrror");

34 
	`îr_sys
("wrôêªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

37 i‡–(
n
 = 
	`£ndto
(
sockfd
, 
wbuf
, 
wrôñí
, 0,

38 (
sockaddr
 *Ë&
£rvaddr
,

39 (
£rvaddr
))Ë!
wrôñí
) {

40 i‡(
ign‹ewîr
) {

41 
	`îr_ªt
("£ndtÿªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

43 
›éí
 = (
›ti⁄
);

44 i‡(
	`gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_ERROR
,

45 &
›ti⁄
, &
›éí
) < 0)

46 
	`îr_sys
("SO_ERROR getsockoptÉrror");

48 
	`îr_sys
("£ndtÿªtu∫ed %d,Éx≥˘ed %d", 
n
, 
wrôñí
);

52 i‡(
vîbo£
)

53 
	`Ârötf
(
°dîr
, "wrŸê%d byãs\n", 
n
);

55 i‡(
∑u£rw
)

56 
	`¶ìp_us
(
∑u£rw
*1000);

59 i‡(
∑u£˛o£
) {

60 i‡(
vîbo£
)

61 
	`Ârötf
(
°dîr
, "pausing before close\n");

62 
	`¶ìp_us
(
∑u£˛o£
*1000);

65 i‡(
	`˛o£
(
sockfd
) < 0)

66 
	`îr_sys
("closeÉrror");

67 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/strerror.c

1 
	~<°dio.h
>

3 c⁄° *c⁄° 
sys_îæi°
[];

4 
sys_√º
;

7 
	$°ªº‹
(
îr‹
)

9 
mesg
[30];

11 i‡(
îr‹
 >0 &&Éº‹ <
sys_√º
)

12 (
sys_îæi°
[
îr‹
]);

14 
	`¢¥ötf
(
mesg
, (mesg), "Unknow¿îr‹ (%d)", 
îr‹
);

15 (
mesg
);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/tellwait.c

1 
	~<sig«l.h
>

2 
	~"ourhdr.h
"

4 vﬁ©ûê
sig_©omic_t
 
	gsigÊag
;

6 
sig£t_t
 
	g√wmask
, 
	gﬁdmask
, 
	gzîomask
;

9 
	$sig_u§
(
signo
)

11 
sigÊag
 = 1;

13 
	}
}

16 
	$TELL_WAIT
()

18 i‡(
	`sig«l
(
SIGUSR1
, 
sig_u§
Ë=
SIG_ERR
)

19 
	`îr_sys
("signal(SIGINT)Érror");

20 i‡(
	`sig«l
(
SIGUSR2
, 
sig_u§
Ë=
SIG_ERR
)

21 
	`îr_sys
("signal(SIGQUIT)Érror");

23 
	`sigem±y£t
(&
zîomask
);

25 
	`sigem±y£t
(&
√wmask
);

26 
	`sigadd£t
(&
√wmask
, 
SIGUSR1
);

27 
	`sigadd£t
(&
√wmask
, 
SIGUSR2
);

29 i‡(
	`sig¥ocmask
(
SIG_BLOCK
, &
√wmask
, &
ﬁdmask
) < 0)

30 
	`îr_sys
("SIG_BLOCKÉrror");

31 
	}
}

34 
	$TELL_PARENT
(
pid_t
 
pid
)

36 
	`kûl
(
pid
, 
SIGUSR2
);

37 
	}
}

40 
	$WAIT_PARENT
()

42 
sigÊag
 == 0)

43 
	`sigsu•íd
(&
zîomask
);

45 
sigÊag
 = 0;

47 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

48 
	`îr_sys
("SIG_SETMASKÉrror");

49 
	}
}

52 
	$TELL_CHILD
(
pid_t
 
pid
)

54 
	`kûl
(
pid
, 
SIGUSR1
);

55 
	}
}

58 
	$WAIT_CHILD
()

60 
sigÊag
 == 0)

61 
	`sigsu•íd
(&
zîomask
);

63 
sigÊag
 = 0;

65 i‡(
	`sig¥ocmask
(
SIG_SETMASK
, &
ﬁdmask
, 
NULL
) < 0)

66 
	`îr_sys
("SIG_SETMASKÉrror");

67 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/write.c

10 
	~"sock.h
"

11 
	~<sys/uio.h
>

13 #i‚def 
UIO_MAXIOV


14 
	#UIO_MAXIOV
 16

	)

17 
ssize_t


18 
	$dowrôe
(
fd
, c⁄° *
v±r
, 
size_t
 
nbyãs
)

20 
iovec
 
iov
[
UIO_MAXIOV
];

21 c⁄° *
±r
;

22 
chunksize
, 
i
, 
n
, 
∆e·
, 
nwrôãn
, 
¡ŸÆ
;

24 i‡(
chunkwrôe
 =0 && 
u£wrôev
 == 0)

25 (
	`wrôe
(
fd
, 
v±r
, 
nbyãs
));

32 
chunksize
 = 
nbyãs
 / 
UIO_MAXIOV
;

33 i‡(
chunksize
 <= 0)

34 
chunksize
 = 1;

35 i‡((
nbyãs
 % 
UIO_MAXIOV
) != 0)

36 
chunksize
++;

38 
±r
 = 
v±r
;

39 
∆e·
 = 
nbyãs
;

40 
i
 = 0; i < 
UIO_MAXIOV
; i++) {

41 
iov
[
i
].
iov_ba£
 = 
±r
;

42 
n
 = (
∆e·
 >
chunksize
) ? chunksize :Çleft;

43 
iov
[
i
].
iov_Àn
 = 
n
;

44 i‡(
vîbo£
)

45 
	`Ârötf
(
°dîr
, "iov[%2d].iov_base = %x, iov[%2d].iov_len = %d\n",

46 
i
, 
iov
[i].
iov_ba£
, i, iov[i].
iov_Àn
);

47 
±r
 +
n
;

48 i‡((
∆e·
 -
n
) == 0)

51 i‡(
i
 =
UIO_MAXIOV
)

52 
	`îr_quô
("i == UIO_MAXIOV");

54 i‡(
u£wrôev
)

55 (
	`wrôev
(
fd
, 
iov
, 
i
+1));

57 
¡ŸÆ
 = 0;

58 
n
 = 0;Ç <
i
;Ç++) {

59 
nwrôãn
 = 
	`wrôe
(
fd
, 
iov
[
n
].
iov_ba£
, iov[n].
iov_Àn
);

60 i‡(
nwrôãn
 !
iov
[
n
].
iov_Àn
)

62 
¡ŸÆ
 +
nwrôãn
;

64 (
¡ŸÆ
);

66 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sock/writen.c

1 
	~"ourhdr.h
"

3 
ssize_t


4 
	$wrôí
(
fd
, c⁄° *
v±r
, 
size_t
 
n
)

6 
size_t
 
∆e·
, 
nwrôãn
;

7 c⁄° *
±r
;

9 
±r
 = 
v±r
;

10 
∆e·
 = 
n
;

11 
∆e·
 > 0) {

12 i‡–(
nwrôãn
 = 
	`wrôe
(
fd
, 
±r
, 
∆e·
)) <= 0)

13 (
nwrôãn
);

15 
∆e·
 -
nwrôãn
;

16 
±r
 +
nwrôãn
;

18 (
n
);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sockopt/checkopts.c

3 
	~"u≈.h
"

4 
	~<√töë/t˝.h
>

6 
	uvÆ
 {

7 
	mi_vÆ
;

8 
	ml_vÆ
;

9 
lögî
 
	mlögî_vÆ
;

10 
timevÆ
 
	mtimevÆ_vÆ
;

11 } 
	gvÆ
;

13 *
sock_°r_Êag
(
vÆ
 *, );

14 *
sock_°r_öt
(
vÆ
 *, );

15 *
sock_°r_lögî
(
vÆ
 *, );

16 *
sock_°r_timevÆ
(
vÆ
 *, );

18 
	ssock_›ts
 {

19 c⁄° *
	m›t_°r
;

20 
	m›t_Àvñ
;

21 
	m›t_«me
;

22 *(*
	m›t_vÆ_°r
)(
	mvÆ
 *, );

23 } 
	gsock_›ts
[] = {

24 { "SO_BROADCAST", 
SOL_SOCKET
, 
SO_BROADCAST
, 
sock_°r_Êag
 },

25 { "SO_DEBUG", 
SOL_SOCKET
, 
SO_DEBUG
, 
sock_°r_Êag
 },

26 { "SO_DONTROUTE", 
SOL_SOCKET
, 
SO_DONTROUTE
, 
sock_°r_Êag
 },

27 { "SO_ERROR", 
SOL_SOCKET
, 
SO_ERROR
, 
sock_°r_öt
 },

28 { "SO_KEEPALIVE", 
SOL_SOCKET
, 
SO_KEEPALIVE
, 
sock_°r_Êag
 },

29 { "SO_LINGER", 
SOL_SOCKET
, 
SO_LINGER
, 
sock_°r_lögî
 },

30 { "SO_OOBINLINE", 
SOL_SOCKET
, 
SO_OOBINLINE
, 
sock_°r_Êag
 },

31 { "SO_RCVBUF", 
SOL_SOCKET
, 
SO_RCVBUF
, 
sock_°r_öt
 },

32 { "SO_SNDBUF", 
SOL_SOCKET
, 
SO_SNDBUF
, 
sock_°r_öt
 },

33 { "SO_RCVLOWAT", 
SOL_SOCKET
, 
SO_RCVLOWAT
, 
sock_°r_öt
 },

34 { "SO_SNDLOWAT", 
SOL_SOCKET
, 
SO_SNDLOWAT
, 
sock_°r_öt
 },

35 { "SO_RCVTIMEO", 
SOL_SOCKET
, 
SO_RCVTIMEO
, 
sock_°r_timevÆ
 },

36 { "SO_SNDTIMEO", 
SOL_SOCKET
, 
SO_SNDTIMEO
, 
sock_°r_timevÆ
 },

37 { "SO_REUSEADDR", 
SOL_SOCKET
, 
SO_REUSEADDR
, 
sock_°r_Êag
 },

38 #ifdef 
SO_REUSEPORT


39 { "SO_REUSEPORT", 
SOL_SOCKET
, 
SO_REUSEPORT
, 
sock_°r_Êag
 },

41 { "SO_REUSEPORT", 0, 0, 
NULL
 },

43 { "SO_TYPE", 
SOL_SOCKET
, 
SO_TYPE
, 
sock_°r_öt
 },

44 { "SO_USELOOPBACK", 
SOL_SOCKET
, 
SO_USELOOPBACK
, 
sock_°r_Êag
 },

45 { "IP_TOS", 
IPPROTO_IP
, 
IP_TOS
, 
sock_°r_öt
 },

46 { "IP_TTL", 
IPPROTO_IP
, 
IP_TTL
, 
sock_°r_öt
 },

47 #ifdef 
IPV6_DONTFRAG


48 { "IPV6_DONTFRAG", 
IPPROTO_IPV6
,
IPV6_DONTFRAG
, 
sock_°r_Êag
 },

50 { "IPV6_DONTFRAG", 0, 0, 
NULL
 },

52 #ifdef 
IPV6_UNICAST_HOPS


53 { "IPV6_UNICAST_HOPS", 
IPPROTO_IPV6
,
IPV6_UNICAST_HOPS
,
sock_°r_öt
 },

55 { "IPV6_UNICAST_HOPS", 0, 0, 
NULL
 },

57 #ifdef 
IPV6_V6ONLY


58 { "IPV6_V6ONLY", 
IPPROTO_IPV6
,
IPV6_V6ONLY
, 
sock_°r_Êag
 },

60 { "IPV6_V6ONLY", 0, 0, 
NULL
 },

62 { "TCP_MAXSEG", 
IPPROTO_TCP
,
TCP_MAXSEG
, 
sock_°r_öt
 },

63 { "TCP_NODELAY", 
IPPROTO_TCP
,
TCP_NODELAY
, 
sock_°r_Êag
 },

64 #ifdef 
SCTP_AUTOCLOSE


65 { "SCTP_AUTOCLOSE", 
IPPROTO_SCTP
,
SCTP_AUTOCLOSE
,
sock_°r_öt
 },

67 { "SCTP_AUTOCLOSE", 0, 0, 
NULL
 },

69 #ifdef 
SCTP_MAXBURST


70 { "SCTP_MAXBURST", 
IPPROTO_SCTP
,
SCTP_MAXBURST
, 
sock_°r_öt
 },

72 { "SCTP_MAXBURST", 0, 0, 
NULL
 },

74 #ifdef 
SCTP_MAXSEG


75 { "SCTP_MAXSEG", 
IPPROTO_SCTP
,
SCTP_MAXSEG
, 
sock_°r_öt
 },

77 { "SCTP_MAXSEG", 0, 0, 
NULL
 },

79 #ifdef 
SCTP_NODELAY


80 { "SCTP_NODELAY", 
IPPROTO_SCTP
,
SCTP_NODELAY
, 
sock_°r_Êag
 },

82 { "SCTP_NODELAY", 0, 0, 
NULL
 },

84 { 
NULL
, 0, 0, NULL }

91 
	$maö
(
¨gc
, **
¨gv
)

93 
fd
;

94 
sockÀn_t
 
Àn
;

95 
sock_›ts
 *
±r
;

97 
±r
 = 
sock_›ts
;Öå->
›t_°r
 !
NULL
;Ötr++) {

98 
	`¥ötf
("%s: ", 
±r
->
›t_°r
);

99 i‡(
±r
->
›t_vÆ_°r
 =
NULL
)

100 
	`¥ötf
("(undefined)\n");

102 
±r
->
›t_Àvñ
) {

103 
SOL_SOCKET
:

104 
IPPROTO_IP
:

105 
IPPROTO_TCP
:

106 
fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

108 #ifdef 
IPV6


109 
IPPROTO_IPV6
:

110 
fd
 = 
	`Sockë
(
AF_INET6
, 
SOCK_STREAM
, 0);

113 #ifdef 
IPPROTO_SCTP


114 
IPPROTO_SCTP
:

115 
fd
 = 
	`Sockë
(
AF_INET
, 
SOCK_SEQPACKET
, 
IPPROTO_SCTP
);

119 
	`îr_quô
("C™'à¸óã fd f‹Üevñ %d\n", 
±r
->
›t_Àvñ
);

122 
Àn
 = (
vÆ
);

123 i‡(
	`gësock›t
(
fd
, 
±r
->
›t_Àvñ
,Öå->
›t_«me
,

124 &
vÆ
, &
Àn
) == -1) {

125 
	`îr_ªt
("getsockoptÉrror");

127 
	`¥ötf
("deÁu… = %s\n", (*
±r
->
›t_vÆ_°r
)(&
vÆ
, 
Àn
));

129 
	`˛o£
(
fd
);

132 
	`exô
(0);

133 
	}
}

137 
	g°ºes
[128];

140 
	$sock_°r_Êag
(
vÆ
 *
±r
, 
Àn
)

143 i‡(
Àn
 != ())

144 
	`¢¥ötf
(
°ºes
, (°ºes), "sizê(%dËnŸ sizeof(öt)", 
Àn
);

146 
	`¢¥ötf
(
°ºes
, (strres),

147 "%s", (
±r
->
i_vÆ
 == 0) ? "off" : "on");

148 (
°ºes
);

150 
	}
}

154 
	$sock_°r_öt
(
vÆ
 *
±r
, 
Àn
)

156 i‡(
Àn
 != ())

157 
	`¢¥ötf
(
°ºes
, (°ºes), "sizê(%dËnŸ sizeof(öt)", 
Àn
);

159 
	`¢¥ötf
(
°ºes
, (°ºes), "%d", 
±r
->
i_vÆ
);

160 (
°ºes
);

161 
	}
}

164 
	$sock_°r_lögî
(
vÆ
 *
±r
, 
Àn
)

166 
lögî
 *
Õå
 = &
±r
->
lögî_vÆ
;

168 i‡(
Àn
 !(
lögî
))

169 
	`¢¥ötf
(
°ºes
, (strres),

170 "sizê(%dËnŸ sizeof(°ru˘Üögî)", 
Àn
);

172 
	`¢¥ötf
(
°ºes
, (strres), "l_onoff = %d,Ü_linger = %d",

173 
Õå
->
l_⁄off
,Ü±r->
l_lögî
);

174 (
°ºes
);

175 
	}
}

178 
	$sock_°r_timevÆ
(
vÆ
 *
±r
, 
Àn
)

180 
timevÆ
 *
tv±r
 = &
±r
->
timevÆ_vÆ
;

182 i‡(
Àn
 !(
timevÆ
))

183 
	`¢¥ötf
(
°ºes
, (strres),

184 "sizê(%dËnŸ sizeof(°ru˘ÅimevÆ)", 
Àn
);

186 
	`¢¥ötf
(
°ºes
, (strres), "%d sec, %d usec",

187 
tv±r
->
tv_£c
,Åv±r->
tv_u£c
);

188 (
°ºes
);

189 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sockopt/prdefaults.c

1 
	~"u≈.h
"

3 
doô
(, const *);

6 
	$maö
()

8 
t˝sock
, 
udpsock
;

9 
sockaddr_ö
 
£rvaddr
;

11 i‡–(
t˝sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

12 
	`îr_sys
("TCP socketÉrror");

14 #ifde‡
nŸdef


15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(9);

18 i‡(
	`ascii2addr
(
AF_INET
, "127.0.0.1", &
£rvaddr
.
sö_addr
) != 4)

19 
	`îr_quô
("ascii2addrÉrror");

21 i‡(
	`c⁄√˘
(
t˝sock
, (
SA
 *Ë&
£rvaddr
, (servaddr)) < 0)

22 
	`îr_sys
("connectÉrror");

25 
	`doô
(
t˝sock
, "tcp");

27 i‡–(
udpsock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0)

28 
	`îr_sys
("UDP socketÉrror");

30 
	`doô
(
udpsock
, "udp");

31 
	`exô
(0);

32 
	}
}

35 
	$doô
(
fd
, c⁄° *
«me
)

37 
vÆ
;

38 
sockÀn_t
 
›éí
;

40 
›éí
 = (
vÆ
);

41 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
vÆ
, &
›éí
) < 0)

42 
	`îr_sys
("SO_SNDBUF getsockoptÉrror");

43 
	`¥ötf
("%†£nd buf„∏sizê%d\n", 
«me
, 
vÆ
);

45 
›éí
 = (
vÆ
);

46 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
vÆ
, &
›éí
) < 0)

47 
	`îr_sys
("SO_RCVBUF getsockoptÉrror");

48 
	`¥ötf
("%†ªcv buf„∏sizê%d\n", 
«me
, 
vÆ
);

50 
›éí
 = (
vÆ
);

51 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_SNDLOWAT
, &
vÆ
, &
›éí
) < 0)

52 
	`îr_sys
("SO_SNDLOWAT getsockoptÉrror");

53 
	`¥ötf
("%†£ndÜow-w©î m¨k = %d\n", 
«me
, 
vÆ
);

55 
›éí
 = (
vÆ
);

56 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_RCVLOWAT
, &
vÆ
, &
›éí
) < 0)

57 
	`îr_sys
("SO_RCVLOWAT getsockoptÉrror");

58 
	`¥ötf
("%†ª˚ivêlow-w©î m¨k sizê%d\n", 
«me
, 
vÆ
);

59 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sockopt/rcvbuf.c

1 
	~"u≈.h
"

2 
	~<√töë/t˝.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
, 
rcvbuf
, 
mss
;

8 
sockÀn_t
 
Àn
;

9 
sockaddr_ö
 
£rvaddr
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:Ñcvbuf <IPaddress>");

14 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

16 
Àn
 = (
rcvbuf
);

17 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, &
Àn
);

18 
Àn
 = (
mss
);

19 
	`Gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
, &
mss
, &
Àn
);

20 
	`¥ötf
("deÁu…s: SO_RCVBUF = %d, MSS = %d\n", 
rcvbuf
, 
mss
);

22 
	`bzîo
(&
£rvaddr
, (servaddr));

23 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

24 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

25 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

27 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

29 
Àn
 = (
rcvbuf
);

30 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, &
Àn
);

31 
Àn
 = (
mss
);

32 
	`Gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
, &
mss
, &
Àn
);

33 
	`¥ötf
("a·î c⁄√˘: SO_RCVBUF = %d, MSS = %d\n", 
rcvbuf
, 
mss
);

35 
	`exô
(0);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sockopt/rcvbufset.c

1 
	~"u≈.h
"

2 
	~<√töë/t˝.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
, 
rcvbuf
, 
mss
;

8 
sockÀn_t
 
Àn
;

9 
sockaddr_ö
 
£rvaddr
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:Ñcvbufset <IPaddress>");

14 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

16 
Àn
 = (
rcvbuf
);

17 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, &
Àn
);

18 
Àn
 = (
mss
);

19 
	`Gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
, &
mss
, &
Àn
);

20 
	`¥ötf
("deÁu…s: SO_RCVBUF = %d, MSS = %d\n", 
rcvbuf
, 
mss
);

22 
rcvbuf
 = 9973;

23 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, (rcvbuf));

24 
Àn
 = (
rcvbuf
);

25 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, &
Àn
);

26 
	`¥ötf
("SO_RCVBUF = %d (a·î sëtög iàtÿ9973)\n", 
rcvbuf
);

28 
	`bzîo
(&
£rvaddr
, (servaddr));

29 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

30 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

31 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

33 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

35 
Àn
 = (
rcvbuf
);

36 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
rcvbuf
, &
Àn
);

37 
Àn
 = (
mss
);

38 
	`Gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
, &
mss
, &
Àn
);

39 
	`¥ötf
("a·î c⁄√˘: SO_RCVBUF = %d, MSS = %d\n", 
rcvbuf
, 
mss
);

42 
	`exô
(0);

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sockopt/sockopt.c

1 
	~"u≈.h
"

2 
	~<√töë/t˝.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
, 
mss
, 
£ndbuff
;

8 
sockÀn_t
 
›éí
;

10 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

13 
›éí
 = (
mss
);

14 
	`Gësock›t
(
sockfd
, 
IPPROTO_TCP
, 
TCP_MAXSEG
, &
mss
, &
›éí
);

15 
	`¥ötf
("TCP ms†%d\n", 
mss
);

18 
£ndbuff
 = 65536;

19 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
£ndbuff
, (sendbuff));

21 
›éí
 = (
£ndbuff
);

22 
	`Gësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
£ndbuff
, &
›éí
);

23 
	`¥ötf
("£nd buf„∏sizê%d\n", 
£ndbuff
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/sparc64-unknown-freebsd5.1/config.h

5 
	#CPU_VENDOR_OS
 "•¨c64-unknown-‰ìbsd5.1"

	)

8 
	#HAVE_ADDRINFO_STRUCT
 1

	)

11 
	#HAVE_ARPA_INET_H
 1

	)

14 
	#HAVE_BZERO
 1

	)

26 
	#HAVE_ERRNO_H
 1

	)

29 
	#HAVE_FCNTL_H
 1

	)

32 
	#HAVE_GETADDRINFO
 1

	)

35 
	#HAVE_GETADDRINFO_PROTO
 1

	)

38 
	#HAVE_GETHOSTBYNAME2
 1

	)

44 
	#HAVE_GETHOSTNAME
 1

	)

47 
	#HAVE_GETHOSTNAME_PROTO
 1

	)

50 
	#HAVE_GETNAMEINFO
 1

	)

53 
	#HAVE_GETNAMEINFO_PROTO
 1

	)

56 
	#HAVE_GETRUSAGE_PROTO
 1

	)

59 
	#HAVE_HSTRERROR
 1

	)

62 
	#HAVE_HSTRERROR_PROTO
 1

	)

65 
	#HAVE_IF_NAMEINDEX_STRUCT
 1

	)

68 
	#HAVE_IF_NAMETOINDEX
 1

	)

71 
	#HAVE_IF_NAMETOINDEX_PROTO
 1

	)

74 
	#HAVE_INET_ATON
 1

	)

77 
	#HAVE_INET_ATON_PROTO
 1

	)

80 
	#HAVE_INET_PTON
 1

	)

83 
	#HAVE_INET_PTON_PROTO
 1

	)

86 
	#HAVE_KEVENT
 1

	)

89 
	#HAVE_KQUEUE
 1

	)

107 
	#HAVE_MKSTEMP
 1

	)

110 
	#HAVE_MSGHDR_MSG_CONTROL
 1

	)

113 
	#HAVE_NETCONFIG_H
 1

	)

116 
	#HAVE_NETDB_H
 1

	)

122 
	#HAVE_NETINET_IN_H
 1

	)

125 
	#HAVE_NET_IF_DL_H
 1

	)

128 
	#HAVE_POLL
 1

	)

131 
	#HAVE_POLL_H
 1

	)

134 
	#HAVE_PSELECT
 1

	)

137 
	#HAVE_PSELECT_PROTO
 1

	)

140 
	#HAVE_PTHREAD_H
 1

	)

143 
	#HAVE_SIGNAL_H
 1

	)

146 
	#HAVE_SNPRINTF
 1

	)

149 
	#HAVE_SNPRINTF_PROTO
 1

	)

152 
	#HAVE_SOCKADDR_DL_STRUCT
 1

	)

155 
	#HAVE_SOCKADDR_SA_LEN
 1

	)

158 
	#HAVE_SOCKATMARK
 1

	)

161 
	#HAVE_SOCKATMARK_PROTO
 1

	)

164 
	#HAVE_STDIO_H
 1

	)

167 
	#HAVE_STDLIB_H
 1

	)

170 
	#HAVE_STRINGS_H
 1

	)

173 
	#HAVE_STRING_H
 1

	)

179 
	#HAVE_STRUCT_IFREQ_IFR_MTU
 1

	)

182 
	#HAVE_STRUCT_SOCKADDR_STORAGE
 1

	)

185 
	#HAVE_SYS_EVENT_H
 1

	)

188 
	#HAVE_SYS_FILIO_H
 1

	)

191 
	#HAVE_SYS_IOCTL_H
 1

	)

194 
	#HAVE_SYS_SELECT_H
 1

	)

197 
	#HAVE_SYS_SOCKET_H
 1

	)

200 
	#HAVE_SYS_SOCKIO_H
 1

	)

203 
	#HAVE_SYS_STAT_H
 1

	)

206 
	#HAVE_SYS_SYSCTL_H
 1

	)

209 
	#HAVE_SYS_TIME_H
 1

	)

212 
	#HAVE_SYS_TYPES_H
 1

	)

215 
	#HAVE_SYS_UIO_H
 1

	)

218 
	#HAVE_SYS_UN_H
 1

	)

221 
	#HAVE_SYS_WAIT_H
 1

	)

224 
	#HAVE_TIMESPEC_STRUCT
 1

	)

227 
	#HAVE_TIME_H
 1

	)

230 
	#HAVE_UNISTD_H
 1

	)

233 
	#HAVE_VSNPRINTF
 1

	)

242 
	#IPV4
 1

	)

245 
	#IPV6
 1

	)

248 
	#IPv4
 1

	)

251 
	#IPv6
 1

	)

254 
	#MCAST
 1

	)

260 
	#STDC_HEADERS
 1

	)

263 
	#TIME_WITH_SYS_TIME
 1

	)

266 
	#UNIXDOMAIN
 1

	)

269 
	#UNIXdomaö
 1

	)

293 
	#t_sˇœr_t
 
öt32_t


	)

296 
	#t_usˇœr_t
 
uöt32_t


	)

	@/media/sf_ddrive/progs/network/unpv13e/ssntp/main.c

1 
	~"¢ç.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
buf
[
MAXLINE
];

8 
ssize_t
 
n
;

9 
sockÀn_t
 
ßÀn
, 
Àn
;

10 
ifi_öfo
 *
ifi
;

11 
sockaddr
 *
mˇ°ß
, *
wûd
, *
‰om
;

12 
timevÆ
 
now
;

14 i‡(
¨gc
 != 2)

15 
	`îr_quô
("usage: ssntp <IPaddress>");

17 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1], "¡p", (**Ë&
mˇ°ß
, &
ßÀn
);

19 
wûd
 = 
	`MÆloc
(
ßÀn
);

20 
	`mem˝y
(
wûd
, 
mˇ°ß
, 
ßÀn
);

21 
	`sock_£t_wûd
(
wûd
, 
ßÀn
);

22 
	`Böd
(
sockfd
, 
wûd
, 
ßÀn
);

24 #ifdef 
MCAST


26 
ifi
 = 
	`Gë_ifi_öfo
(
mˇ°ß
->
ß_Ámûy
, 1); ifò!
NULL
;

27 
ifi
 = ifi->
ifi_√xt
) {

28 i‡(
ifi
->
ifi_Êags
 & 
IFF_MULTICAST
) {

29 
	`Mˇ°_joö
(
sockfd
, 
mˇ°ß
, 
ßÀn
, 
ifi
->
ifi_«me
, 0);

30 
	`¥ötf
("joined %s on %s\n",

31 
	`Sock_¡›
(
mˇ°ß
, 
ßÀn
), 
ifi
->
ifi_«me
);

36 
‰om
 = 
	`MÆloc
(
ßÀn
);

38 
Àn
 = 
ßÀn
;

39 
n
 = 
	`Recv‰om
(
sockfd
, 
buf
, (buf), 0, 
‰om
, &
Àn
);

40 
	`Gëtimeofday
(&
now
, 
NULL
);

41 
	`¢ç_¥oc
(
buf
, 
n
, &
now
);

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/ssntp/ntp.h

1 
	#JAN_1970
 2208988800UL

	)

3 
	sl_fixed±
 {

4 
uöt32_t
 
	möt_∑π
;

5 
uöt32_t
 
	m‰a˘i⁄
;

8 
	ss_fixed±
 {

9 
uöt16_t
 
	möt_∑π
;

10 
uöt16_t
 
	m‰a˘i⁄
;

13 
	s¡pd©a
 {

14 
u_ch¨
 
	m°©us
;

15 
u_ch¨
 
	m°øtum
;

16 
u_ch¨
 
	mµﬁl
;

17 
	m¥ecisi⁄
:8;

18 
s_fixed±
 
	mdi°™˚
;

19 
s_fixed±
 
	mdi•îsi⁄
;

20 
uöt32_t
 
	mªfid
;

21 
l_fixed±
 
	mª·ime
;

22 
l_fixed±
 
	m‹g
;

23 
l_fixed±
 
	mªc
;

24 
l_fixed±
 
	mxmt
;

27 
	#VERSION_MASK
 0x38

	)

28 
	#MODE_MASK
 0x07

	)

30 
	#MODE_CLIENT
 3

	)

31 
	#MODE_SERVER
 4

	)

32 
	#MODE_BROADCAST
 5

	)

	@/media/sf_ddrive/progs/network/unpv13e/ssntp/sntp.h

1 
	~"u≈ifi.h
"

2 
	~"¡p.h
"

4 
¢ç_¥oc
(*, 
ssize_t
, 
timevÆ
 *);

	@/media/sf_ddrive/progs/network/unpv13e/ssntp/sntp_proc.c

1 
	~"¢ç.h
"

4 
	$¢ç_¥oc
(*
buf
, 
ssize_t
 
n
, 
timevÆ
 *
now±r
)

6 
vîsi⁄
, 
mode
;

7 
uöt32_t
 
n£c
, 
u£ci
;

8 
u£cf
;

9 
timevÆ
 
diff
;

10 
¡pd©a
 *
¡p
;

12 i‡(
n
 < (
ssize_t
)(
¡pd©a
)) {

13 
	`¥ötf
("\≈ackëÅoÿsmÆl: %d byãs\n", 
n
);

17 
¡p
 = (
¡pd©a
 *Ë
buf
;

18 
vîsi⁄
 = (
¡p
->
°©us
 & 
VERSION_MASK
) >> 3;

19 
mode
 = 
¡p
->
°©us
 & 
MODE_MASK
;

20 
	`¥ötf
("\nv%d, modê%d, så© %d, ", 
vîsi⁄
, 
mode
, 
¡p
->
°øtum
);

21 i‡(
mode
 =
MODE_CLIENT
) {

22 
	`¥ötf
("client\n");

26 
n£c
 = 
	`¡ohl
(
¡p
->
xmt
.
öt_∑π
Ë- 
JAN_1970
;

27 
u£ci
 = 
	`¡ohl
(
¡p
->
xmt
.
‰a˘i⁄
);

28 
u£cf
 = 
u£ci
;

29 
u£cf
 /= 4294967296.0;

30 
u£ci
 = 
u£cf
 * 1000000.0;

32 
diff
.
tv_£c
 = 
now±r
->tv_£¯- 
n£c
;

33 i‡–(
diff
.
tv_u£c
 = 
now±r
->tv_u£¯- 
u£ci
) < 0) {

34 
diff
.
tv_u£c
 += 1000000;

35 
diff
.
tv_£c
--;

37 
u£ci
 = (
diff
.
tv_£c
 * 1000000Ë+ diff.
tv_u£c
;

38 
	`¥ötf
("˛ock dif„ªn˚ = %d u£c\n", 
u£ci
);

39 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/client.c

1 
	~<°dio.h
>

2 
	~<sys/ty≥s.h
>

3 
	~<sys/f˙é.h
>

5 
	~<sys/sockë.h
>

6 
	~<√töë/ö.h
>

8 
î∫o
;

10 
	#SERV_HOST_ADDR
 "128.220.101.4"

	)

11 
	#SERV_TCP_PORT
 6000

	)

13 
	$maö
()

15 
fd
;

16 
sockaddr_ö
 
my_addr
;

17 
sockaddr_ö
 
£rv_addr
;

18 
buf
[128];

19 
	`echo_drivî
(, 
sockaddr_ö
 *);

21 i‡((
fd
 = 
	`√t_›í
 ("/dev/udp", 
O_RDWR
)) < 0)

23 
	`Ârötf
 (
°dîr
, "open failed.\n");

24 
	`exô
 (-1);

29 
	`bzîo
((*Ë&
my_addr
, (my_addr));

30 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

31 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
 (
INADDR_ANY
);

32 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(0);

34 
fd
 = 
	`√t_böd
 (fd, &
my_addr
,  (
sockaddr_ö
));

39 
	`bzîo
((*Ë&
£rv_addr
, (serv_addr));

40 
£rv_addr
.
sö_Ámûy
 = 
AF_INET
;

41 
£rv_addr
.
sö_addr
.
s_addr
 = 
	`öë_addr
 (
SERV_HOST_ADDR
);

42 
£rv_addr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_TCP_PORT
);

44 
	`echo_drivî
 (
fd
, &
£rv_addr
);

45 
	`˛o£
 (
fd
);

47 
	`exô
 (0);

48 
	}
}

51 
	$echo_drivî
(
fd
, 
sockaddr_ö
 *
£rv_addr
)

53 
buf
[512];

54 
n
;

55 
sockaddr_ö
 
fm_addr
;

57 (
n
 = 
	`ªad
 (0, 
buf
,  (buf))) != 0)

59 
	`√t_£nd
 (
fd
, 
buf
, 
n
, 
£rv_addr
,  (
sockaddr_ö
));

61 
n
 = 
	`√t_ªcv
 (
fd
, 
buf
,  (buf), &
fm_addr
,  (
sockaddr_ö
));

63 
	`wrôe
 (1, 
buf
, 
n
);

66 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/net_stream.c

1 
	~<°dio.h
>

2 
	~<sys/ty≥s.h
>

3 
	~<sys/f˙é.h
>

4 
	~<sys/î∫o.h
>

6 
	~<sys/°ªam.h
>

7 
	~<sys/°r›ts.h
>

8 
	~<sys/tihdr.h
>

11 
î∫o
;

14 
	$√t_›í
 (*
∑th
, 
oÊags
, *
addr
, 
addæí
)

16 
fd
;

17 
Êags
;

19 i‡((
fd
 = 
	`›í
 (
∑th
, 
oÊags
)) < 0)

21 
	`≥º‹
 ("open");

24  (
fd
);

25 
	}
}

28 
	$√t_böd
 (
fd
, *
addr
, 
addæí
)

31 
T_böd_ªq
 
msg_hdr
;

32 
addr
[128];

33 } 
böd_ªq
;

34 
°rbuf
 
˘lbuf
;

35 
T_¥imôives
 
rcvbuf
;

36 
T_îr‹_ack
 *
îr‹_ack
;

37 
Êags
;

39 i‡(
addr
 =
NULL
 || 
addæí
 == 0)

41 
	`Ârötf
 (
°dîr
, "Noáddress\n");

45 
böd_ªq
.
msg_hdr
.
PRIM_ty≥
 = 
T_BIND_REQ
;

46 
böd_ªq
.
msg_hdr
.
ADDR_Àngth
 = 
addæí
;

47 
böd_ªq
.
msg_hdr
.
ADDR_off£t
 =  (
T_böd_ªq
);

48 
böd_ªq
.
msg_hdr
.
CONIND_numbî
 = 5;

49 
	`bc›y
 (
addr
, 
böd_ªq
.addr, 
addæí
);

51 
˘lbuf
.
Àn
 =  (
T_böd_ªq
Ë+ 
addæí
;

52 
˘lbuf
.
buf
 = (*Ë&
böd_ªq
;

54 i‡(
	`putmsg
 (
fd
, &
˘lbuf
, 
NULL
, 0) < 0)

61 
˘lbuf
.
maxÀn
 =  (
T_¥imôives
);

62 
˘lbuf
.
Àn
 = 0;

63 
˘lbuf
.
buf
 = (*Ë&
rcvbuf
;

64 
Êags
 = 
RS_HIPRI
;

65 i‡(
	`gëmsg
 (
fd
, &
˘lbuf
, 
NULL
, &
Êags
) < 0)

67 
	`≥º‹
 ("getmsg");

71 i‡(
˘lbuf
.
Àn
 <  ())

73 
	`Ârötf
 (
°dîr
, "BadÜength from getmsg.\n");

74 
î∫o
 = 
EPROTO
;

77 
rcvbuf
.
ty≥
)

79 
T_BIND_ACK
:

80  (
fd
);

81 
T_ERROR_ACK
:

82 i‡(
˘lbuf
.
Àn
 <  (
T_îr‹_ack
))

84 
î∫o
 = 
EPROTO
;

87 
îr‹_ack
 = (
T_îr‹_ack
 *Ë&
rcvbuf
;

88 
	`Ârötf
 (
°dîr
, "Erroráck from bind (%d %d %d)\n",

89 
îr‹_ack
->
ERROR_¥im
,

90 
îr‹_ack
->
TLI_îr‹
,

91 
îr‹_ack
->
UNIX_îr‹
);

92 
î∫o
 = 
îr‹_ack
->
UNIX_îr‹
;

95 
	`Ârötf
 (
°dîr
, "Noáck from bind?\n");

96 
î∫o
 = 
EPROTO
;

100 
	}
}

102 
	$√t_£nd
 (
fd
, *
buf
, 
Àn
, *
to_addr
, 
addæí
)

104 
°rbuf
 
˘lbuf
;

105 
°rbuf
 
d©abuf
;

107 
T_unôd©a_ªq
 
unôd©a_ªq
;

108 
buf
[128];

109 } 
√td©a
;

111 
	`bc›y
 (
to_addr
, 
√td©a
.
buf
, 
addæí
);

112 
√td©a
.
unôd©a_ªq
.
PRIM_ty≥
 = 
T_UNITDATA_REQ
;

113 
√td©a
.
unôd©a_ªq
.
DEST_Àngth
 = 
addæí
;

114 
√td©a
.
unôd©a_ªq
.
DEST_off£t
 =  (
T_unôd©a_ªq
);

118 
√td©a
.
unôd©a_ªq
.
OPT_Àngth
 = 0;

119 
√td©a
.
unôd©a_ªq
.
OPT_off£t
 = 0;

121 
˘lbuf
.
Àn
 =  (
T_unôd©a_ªq
Ë+ 
addæí
;

122 
˘lbuf
.
buf
 = (*Ë&
√td©a
;

124 
d©abuf
.
Àn
 =Üen;

125 
d©abuf
.
buf
 = buf;

127 i‡(
	`putmsg
 (
fd
, &
˘lbuf
, &
d©abuf
, 0) < 0)

129 
	`‰ì
 (
√td©a
.
buf
);

130  (
Àn
);

131 
	}
}

134 
	$√t_ªcv
 (
fd
, *
buf
, 
Àn
, *
‰om_addr
, 
addæí
)

136 
°rbuf
 
˘lbuf
;

137 
°rbuf
 
d©abuf
;

139 
T_unôd©a_öd
 
unôd©a_öd
;

140 
buf
[128];

141 } 
√td©a
;

142 *
c
;

143 
ªtvÆ
;

144 
Êags
;

146 
˘lbuf
.
maxÀn
 =  (
√td©a
);

147 
˘lbuf
.
buf
 = (*Ë&
√td©a
;

149 
d©abuf
.
maxÀn
 = 
Àn
;

150 
d©abuf
.
Àn
 = 0;

151 
d©abuf
.
buf
 = buf;

153 
Êags
 = 0;

155 i‡((
ªtvÆ
 = 
	`gëmsg
 (
fd
, &
˘lbuf
, &
d©abuf
, &
Êags
)) < 0)

158 i‡(
√td©a
.
unôd©a_öd
.
PRIM_ty≥
 !
T_UNITDATA_IND
)

160 
	`Ârötf
 (
°dîr
, "√t_ªcv: GŸ %d\n", 
√td©a
.
unôd©a_öd
.
PRIM_ty≥
);

161 
î∫o
 = 
EPROTO
;

164 i‡(
ªtvÆ
)

166 
î∫o
 = 
EIO
;

172 i‡(
√td©a
.
unôd©a_öd
.
SRC_Àngth
 < 
addæí
)

173 
addæí
 = 
√td©a
.
unôd©a_öd
.
SRC_Àngth
;

175 
c
 = (*Ë&
√td©a
;

176 
	`bc›y
 (&(
c
[
√td©a
.
unôd©a_öd
.
SRC_off£t
]),

177 
‰om_addr
,

178 
addæí
);

180  (
d©abuf
.
Àn
);

181 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/server.c

1 
	~<°dio.h
>

2 
	~<sys/ty≥s.h
>

3 
	~<sys/f˙é.h
>

4 
	~<sys/î∫o.h
>

6 
	~<sys/sockë.h
>

7 
	~<√töë/ö.h
>

9 
î∫o
;

11 
	#SERV_TCP_PORT
 6000

	)

13 
	$maö
()

15 
fd
;

16 
sockaddr_ö
 
my_addr
;

17 
	`echo_£rv
 ();

19 
	`bzîo
((*Ë&
my_addr
, (my_addr));

20 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

21 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
 (
INADDR_ANY
);

22 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_TCP_PORT
);

24 
fd
 = 
	`√t_›í
 ("/dev/udp", 
O_RDWR
);

25 
fd
 = 
	`√t_böd
 (fd, &
my_addr
,  (
sockaddr_ö
));

27 
	`echo_£rv
 (
fd
);

28 
	`exô
 (0);

29 
	}
}

32 
	$echo_£rv
 (
fd
)

34 
sockaddr_ö
 
fm_addr
;

35 
buf
[512];

36 
n
;

40 
n
 = 
	`√t_ªcv
 (
fd
, 
buf
,  (buf),

41 &
fm_addr
,  (
sockaddr_ö
));

43 
	`√t_£nd
 (
fd
, 
buf
, 
n
,

44 &
fm_addr
,  (
sockaddr_ö
));

46 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/strlist_sock.c

1 
	~"u≈.h
"

2 
	~<°r›ts.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
fd
, 
i
, 
nmods
;

8 
°r_li°
 
li°
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out {Åcp | udp }");

13 
fd
 = 
	`Sockë
(
AF_INET
, (
	`°rcmp
(
¨gv
[1], "tcp") == 0)

14 ? 
SOCK_STREAM
 : 
SOCK_DGRAM
, 0);

15 i‡(
	`iß°ªam
(
fd
) == 0)

16 
	`îr_quô
("%†i†nŸá såóm", 
¨gv
[1]);

18 
li°
.
¶_nmods
 = 
nmods
 = 
	`Io˘l
(
fd
, 
I_LIST
, (*) 0);

19 
	`¥ötf
("%d moduÀs\n", 
nmods
);

20 
li°
.
¶_modli°
 = 
	`CÆloc
(
nmods
, (
°r_mli°
));

22 
	`Io˘l
(
fd
, 
I_LIST
, &
li°
);

24 
i
 = 1; i <
nmods
; i++)

25 
	`¥ötf
(" %s: %s\n", (
i
 =
nmods
) ? "driver" : "module",

26 
li°
.
¶_modli°
++);

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/strlist_xti.c

1 
	~"u≈xti.h
"

2 
	~<°r›ts.h
>

5 
	$maö
(
¨gc
, *
¨gv
[])

7 
fd
, 
i
, 
nmods
;

8 
°r_li°
 
li°
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:á.out <pathname>");

13 
fd
 = 
	`T_›í
(
¨gv
[1], 
O_RDWR
, 
NULL
);

14 i‡(
	`iß°ªam
(
fd
) == 0)

15 
	`îr_quô
("%†i†nŸá såóm", 
¨gv
[1]);

17 
li°
.
¶_nmods
 = 
nmods
 = 
	`Io˘l
(
fd
, 
I_LIST
, (*) 0);

18 
	`¥ötf
("%d moduÀs\n", 
nmods
);

19 
li°
.
¶_modli°
 = 
	`CÆloc
(
nmods
, (
°r_mli°
));

21 
	`Io˘l
(
fd
, 
I_LIST
, &
li°
);

23 
i
 = 1; i <
nmods
; i++)

24 
	`¥ötf
(" %s: %s\n", (
i
 =
nmods
) ? "driver" : "module",

25 
li°
.
¶_modli°
++);

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_bind.c

1 
	~"çi_daytime.h
"

4 
	$çi_böd
(
fd
, c⁄° *
addr
, 
size_t
 
addæí
)

7 
T_böd_ªq
 
msg_hdr
;

8 
addr
[128];

9 } 
böd_ªq
;

11 
T_böd_ack
 
msg_hdr
;

12 
addr
[128];

13 } 
böd_ack
;

14 
°rbuf
 
˘lbuf
;

15 
T_îr‹_ack
 *
îr‹_ack
;

16 
Êags
;

18 
böd_ªq
.
msg_hdr
.
PRIM_ty≥
 = 
T_BIND_REQ
;

19 
böd_ªq
.
msg_hdr
.
ADDR_Àngth
 = 
addæí
;

20 
böd_ªq
.
msg_hdr
.
ADDR_off£t
 = (
T_böd_ªq
);

21 
böd_ªq
.
msg_hdr
.
CONIND_numbî
 = 0;

22 
	`mem˝y
(
böd_ªq
.
addr
,áddr, 
addæí
);

24 
˘lbuf
.
Àn
 = (
T_böd_ªq
Ë+ 
addæí
;

25 
˘lbuf
.
buf
 = (*Ë&
böd_ªq
;

26 
	`Putmsg
(
fd
, &
˘lbuf
, 
NULL
, 0);

28 
˘lbuf
.
maxÀn
 = (
böd_ack
);

29 
˘lbuf
.
Àn
 = 0;

30 
˘lbuf
.
buf
 = (*Ë&
böd_ack
;

31 
Êags
 = 
RS_HIPRI
;

32 
	`Gëmsg
(
fd
, &
˘lbuf
, 
NULL
, &
Êags
);

35 i‡(
˘lbuf
.
Àn
 < () ())

36 
	`îr_quô
("badÜength from getmsg");

39 
böd_ack
.
msg_hdr
.
PRIM_ty≥
) {

40 
T_BIND_ACK
:

43 
T_ERROR_ACK
:

45 i‡(
˘lbuf
.
Àn
 < (Ë(
T_îr‹_ack
))

46 
	`îr_quô
("badÜength for T_ERROR_ACK");

47 
îr‹_ack
 = (
T_îr‹_ack
 *Ë&
böd_ack
.
msg_hdr
;

48 
	`îr_quô
("T_ERROR_ACK from bind (%d, %d)",

49 
îr‹_ack
->
TLI_îr‹
,Éº‹_ack->
UNIX_îr‹
);

53 
	`îr_quô
("u√x≥˘ed mesßgêty≥: %d", 
böd_ack
.
msg_hdr
.
PRIM_ty≥
);

55 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_close.c

1 
	~"çi_daytime.h
"

4 
	$çi_˛o£
(
fd
)

6 
T_‹dªl_ªq
 
‹dªl_ªq
;

7 
°rbuf
 
˘lbuf
;

9 
‹dªl_ªq
.
PRIM_ty≥
 = 
T_ORDREL_REQ
;

11 
˘lbuf
.
Àn
 = (
T_‹dªl_ªq
);

12 
˘lbuf
.
buf
 = (*Ë&
‹dªl_ªq
;

13 
	`Putmsg
(
fd
, &
˘lbuf
, 
NULL
, 0);

15 
	`Clo£
(
fd
);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_connect.c

1 
	~"çi_daytime.h
"

4 
	$çi_c⁄√˘
(
fd
, c⁄° *
addr
, 
size_t
 
addæí
)

7 
T_c⁄n_ªq
 
msg_hdr
;

8 
addr
[128];

9 } 
c⁄n_ªq
;

11 
T_c⁄n_c⁄
 
msg_hdr
;

12 
addr
[128];

13 } 
c⁄n_c⁄
;

14 
°rbuf
 
˘lbuf
;

15 
T_¥imôives
 
rcvbuf
;

16 
T_îr‹_ack
 *
îr‹_ack
;

17 
T_disc⁄_öd
 *
disc⁄_öd
;

18 
Êags
;

20 
c⁄n_ªq
.
msg_hdr
.
PRIM_ty≥
 = 
T_CONN_REQ
;

21 
c⁄n_ªq
.
msg_hdr
.
DEST_Àngth
 = 
addæí
;

22 
c⁄n_ªq
.
msg_hdr
.
DEST_off£t
 = (
T_c⁄n_ªq
);

23 
c⁄n_ªq
.
msg_hdr
.
OPT_Àngth
 = 0;

24 
c⁄n_ªq
.
msg_hdr
.
OPT_off£t
 = 0;

25 
	`mem˝y
(
c⁄n_ªq
.
addr
,áddr, 
addæí
);

27 
˘lbuf
.
Àn
 = (
T_c⁄n_ªq
Ë+ 
addæí
;

28 
˘lbuf
.
buf
 = (*Ë&
c⁄n_ªq
;

29 
	`Putmsg
(
fd
, &
˘lbuf
, 
NULL
, 0);

31 
˘lbuf
.
maxÀn
 = (
T_¥imôives
);

32 
˘lbuf
.
Àn
 = 0;

33 
˘lbuf
.
buf
 = (*Ë&
rcvbuf
;

34 
Êags
 = 
RS_HIPRI
;

35 
	`Gëmsg
(
fd
, &
˘lbuf
, 
NULL
, &
Êags
);

38 i‡(
˘lbuf
.
Àn
 < () ())

39 
	`îr_quô
("tpi_connect: badÜength from getmsg");

42 
rcvbuf
.
ty≥
) {

43 
T_OK_ACK
:

46 
T_ERROR_ACK
:

48 i‡(
˘lbuf
.
Àn
 < (Ë(
T_îr‹_ack
))

49 
	`îr_quô
("tpi_connect: badÜength for T_ERROR_ACK");

50 
îr‹_ack
 = (
T_îr‹_ack
 *Ë&
rcvbuf
;

51 
	`îr_quô
("tpi_connect: T_ERROR_ACK from conn (%d, %d)",

52 
îr‹_ack
->
TLI_îr‹
,Éº‹_ack->
UNIX_îr‹
);

56 
	`îr_quô
("çi_c⁄√˘: u√x≥˘ed mesßgêty≥: %d", 
rcvbuf
.
ty≥
);

59 
˘lbuf
.
maxÀn
 = (
c⁄n_c⁄
);

60 
˘lbuf
.
Àn
 = 0;

61 
˘lbuf
.
buf
 = (*Ë&
c⁄n_c⁄
;

62 
Êags
 = 0;

63 
	`Gëmsg
(
fd
, &
˘lbuf
, 
NULL
, &
Êags
);

66 i‡(
˘lbuf
.
Àn
 < () ())

67 
	`îr_quô
("tpi_connect2: badÜength from getmsg");

70 
c⁄n_c⁄
.
msg_hdr
.
PRIM_ty≥
) {

71 
T_CONN_CON
:

74 
T_DISCON_IND
:

76 i‡(
˘lbuf
.
Àn
 < (Ë(
T_disc⁄_öd
))

77 
	`îr_quô
("tpi_connect2: badÜength for T_DISCON_IND");

78 
disc⁄_öd
 = (
T_disc⁄_öd
 *Ë&
c⁄n_c⁄
.
msg_hdr
;

79 
	`îr_quô
("tpi_connect2: T_DISCON_IND from conn (%d)",

80 
disc⁄_öd
->
DISCON_ªas⁄
);

84 
	`îr_quô
("tpi_connect2: unexpected messageÅype: %d",

85 
c⁄n_c⁄
.
msg_hdr
.
PRIM_ty≥
);

87 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_daytime.c

1 
	~"çi_daytime.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
fd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockaddr_ö
 
myaddr
, 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åpi_daytime <IPaddress>");

13 
fd
 = 
	`O≥n
(
XTI_TCP
, 
O_RDWR
, 0);

16 
	`bzîo
(&
myaddr
, (myaddr));

17 
myaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
myaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

19 
myaddr
.
sö_p‹t
 = 
	`ht⁄s
(0);

21 
	`çi_böd
(
fd
, &
myaddr
, (
sockaddr_ö
));

24 
	`bzîo
(&
£rvaddr
, (servaddr));

25 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

26 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

27 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

29 
	`çi_c⁄√˘
(
fd
, &
£rvaddr
, (
sockaddr_ö
));

32 i‡–(
n
 = 
	`çi_ªad
(
fd
, 
ªcvlöe
, 
MAXLINE
)) <= 0) {

33 i‡(
n
 == 0)

36 
	`îr_sys
("tpi_readÉrror");

38 
ªcvlöe
[
n
] = 0;

39 
	`Âuts
(
ªcvlöe
, 
°dout
);

41 
	`çi_˛o£
(
fd
);

42 
	`exô
(0);

43 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_daytime.h

1 
	~"u≈xti.h
"

2 
	~<sys/°ªam.h
>

3 
	~<sys/tihdr.h
>

5 
çi_böd
(, c⁄° *, 
size_t
);

6 
çi_c⁄√˘
(, c⁄° *, 
size_t
);

7 
ssize_t
 
çi_ªad
(, *, 
size_t
);

8 
çi_˛o£
();

	@/media/sf_ddrive/progs/network/unpv13e/streams/tpi_read.c

1 
	~"çi_daytime.h
"

3 
ssize_t


4 
	$çi_ªad
(
fd
, *
buf
, 
size_t
 
Àn
)

6 
°rbuf
 
˘lbuf
;

7 
°rbuf
 
d©buf
;

8 
T_¥imôives
 
rcvbuf
;

9 
Êags
;

11 
˘lbuf
.
maxÀn
 = (
T_¥imôives
);

12 
˘lbuf
.
buf
 = (*Ë&
rcvbuf
;

14 
d©buf
.
maxÀn
 = 
Àn
;

15 
d©buf
.
buf
 = buf;

16 
d©buf
.
Àn
 = 0;

18 
Êags
 = 0;

19 
	`Gëmsg
(
fd
, &
˘lbuf
, &
d©buf
, &
Êags
);

21 i‡(
˘lbuf
.
Àn
 >= () ()) {

22 i‡(
rcvbuf
.
ty≥
 =
T_DATA_IND
)

23 (
d©buf
.
Àn
);

24 i‡(
rcvbuf
.
ty≥
 =
T_ORDREL_IND
)

27 
	`îr_quô
("çi_ªad: u√x≥˘edÅy≥ %d", 
rcvbuf
.
ty≥
);

28 } i‡(
˘lbuf
.
Àn
 == -1)

29 (
d©buf
.
Àn
);

31 
	`îr_quô
("tpi_read: badÜength from getmsg");

32 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/streams/unpxti.h

2 #i‚def 
__u≈_xti_h


3 
	#__u≈_xti_h


	)

5 
	~"u≈.h
"

7 
	~<xti.h
>

8 #ifdef 
HAVE_XTI_INET_H


9 
	~<xti_öë.h
>

11 #ifdef 
HAVE_NETCONFIG_H


12 
	~<√tc⁄fig.h
>

14 #ifdef 
HAVE_NETDIR_H


15 
	~<√tdú.h
>

18 #ifdef 
INFTIM_UNPH


19 #unde‡
INFTIM


22 
	~<°r›ts.h
>

27 #i‚def 
T_INET_TCP


28 
	#T_INET_TCP
 
INET_TCP


	)

32 #i‚def 
T_INET_UDP


33 
	#T_INET_UDP
 
INET_UDP


	)

35 #i‚def 
T_INET_IP


36 
	#T_INET_IP
 
INET_IP


	)

38 #i‚def 
T_TCP_NODELAY


39 
	#T_TCP_NODELAY
 
TCP_NODELAY


	)

41 #i‚def 
T_TCP_MAXSEG


42 
	#T_TCP_MAXSEG
 
TCP_MAXSEG


	)

44 #i‚def 
T_TCP_KEEPALIVE


45 
	#T_TCP_KEEPALIVE
 
TCP_KEEPALIVE


	)

47 #i‚def 
T_UDP_CHECKSUM


48 
	#T_UDP_CHECKSUM
 
UDP_CHECKSUM


	)

50 #i‚def 
T_IP_OPTIONS


51 
	#T_IP_OPTIONS
 
IP_OPTIONS


	)

53 #i‚def 
T_IP_TOS


54 
	#T_IP_TOS
 
IP_TOS


	)

56 #i‚def 
T_IP_TTL


57 
	#T_IP_TTL
 
IP_TTL


	)

59 #i‚def 
T_IP_REUSEADDR


60 
	#T_IP_REUSEADDR
 
IP_REUSEADDR


	)

62 #i‚def 
T_IP_DONTROUTE


63 
	#T_IP_DONTROUTE
 
IP_DONTROUTE


	)

66 #i‚def 
T_IP_BROADCAST


67 
	#T_IP_BROADCAST
 
IP_BROADCAST


	)

72 #ifdef 
HAVE_DEV_TCP


73 
	#XTI_TCP
 "/dev/t˝"

	)

74 
	#XTI_UDP
 "/dev/udp"

	)

76 #ifdef 
HAVE_DEV_XTI_TCP


77 
	#XTI_TCP
 "/dev/xti/t˝"

	)

78 
	#XTI_UDP
 "/dev/xti/udp"

	)

80 #ifdef 
HAVE_DEV_STREAMS_XTISO_TCP


81 
	#XTI_TCP
 "/dev/°ªams/xtiso/t˝+"

	)

82 
	#XTI_UDP
 "/dev/°ªams/xtiso/udp+"

	)

87 
xti_£rv_dev
[];

90 
îr_xti
(c⁄° *
fmt
, ...);

91 
îr_xti_ªt
(c⁄° *
fmt
, ...);

93 
Gëmsg
(, 
°rbuf
 *, strbuf *, *);

94 
Putmsg
(, c⁄° 
°rbuf
 *, const strbuf *, );

96 #ifdef 
HAVE_NETCONFIG_H


97 *
Së√tc⁄fig
();

98 *
Së√ç©h
();

101 *
T_Æloc
(, , );

102 
T_ac˚±
(, , 
t_ˇŒ
 *);

103 
T_böd
(, c⁄° 
t_böd
 *, t_bind *);

104 
T_˛o£
();

105 
T_c⁄√˘
(, c⁄° 
t_ˇŒ
 *, t_call *);

106 
T_‰ì
(*, );

107 
T_gë¥Ÿaddr
(, 
t_böd
 *, t_bind *);

108 
T_gë°©e
();

109 
T_li°í
(, 
t_ˇŒ
 *);

110 
T_look
();

111 
T_›í
(c⁄° *, , 
t_öfo
 *);

112 
T_›tmgmt
(, c⁄° 
t_›tmgmt
 *, t_optmgmt *);

113 
T_rcv
(, *, , *);

114 
T_rcvdis
(, 
t_disc⁄
 *);

115 
T_rcvªl
();

116 
T_rcvud©a
(, 
t_unôd©a
 *, *);

117 
T_rcvudîr
(, 
t_udîr
 *);

118 
T_¢d
(, *, , );

119 
T_¢dªl
();

120 
T_¢dud©a
(, 
t_unôd©a
 *);

122 
xti_ac˚±
(, 
√tbuf
 *, );

123 
xti_gë›t
(, , , *, 
sockÀn_t
 *);

124 *
xti_Êags_°r
();

125 *
xti_éook_°r
();

126 *
xti_¡›
(c⁄° 
√tbuf
 *);

127 *
xti_¡›_ho°
(c⁄° 
√tbuf
 *);

128 
xti_rdwr
();

129 
xti_£t›t
(, , , *, 
sockÀn_t
);

131 
Xti_ac˚±
(, 
√tbuf
 *, );

132 
Xti_gë›t
(, , , *, 
sockÀn_t
 *);

133 *
Xti_Êags_°r
();

134 *
Xti_éook_°r
();

135 *
Xti_¡›
(c⁄° 
√tbuf
 *);

136 *
Xti_¡›_ho°
(c⁄° 
√tbuf
 *);

137 
Xti_rdwr
();

138 
Xti_£t›t
(, , , *, 
sockÀn_t
);

140 *
xti_°r_Ànd
(
t_›thdr
 *);

141 *
xti_°r_usˇœrd
(
t_›thdr
 *);

142 *
xti_°r_uch¨d
(
t_›thdr
 *);

143 *
xti_°r_uch¨x
(
t_›thdr
 *);

144 *
xti_°r_yn
(
t_usˇœr_t
);

145 *
xti_°r_syng
(
t_sˇœr_t
);

146 *
xti_°r_uiyn
(
t_›thdr
 *);

147 *
xti_°r_usyn
(
t_›thdr
 *);

148 *
xti_°r_lögî
(
t_›thdr
 *);

149 *
xti_°r_k∑live
(
t_›thdr
 *);

150 *
xti_°r_Êags
(
t_sˇœr_t
);

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sigchldwait.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9 
pid
 = 
	`waô
(&
°©
);

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

12 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sigchldwaitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0)

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

12 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli08.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

8 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

10 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

12 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0)

13 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

15 
	`Fputs
(
ªcvlöe
, 
°dout
);

17 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli09.c

1 
	~"u≈.h
"

2 
	~"sum.h
"

5 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

7 
£ndlöe
[
MAXLINE
];

8 
¨gs
árgs;

9 
ªsu…
Ñesult;

11 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

13 i‡(
	`ssˇnf
(
£ndlöe
, "%ld%ld", &
¨gs
.
¨g1
, &¨gs.
¨g2
) != 2) {

14 
	`¥ötf
("övÆid i≈ut: %s", 
£ndlöe
);

17 
	`Wrôí
(
sockfd
, &
¨gs
, (args));

19 i‡(
	`Ródn
(
sockfd
, &
ªsu…
, (result)) == 0)

20 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

22 
	`¥ötf
("%ld\n", 
ªsu…
.
sum
);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli11.c

1 
	~"u≈.h
"

4 
	$°r_˛i
(
FILE
 *
Â
, 
sockfd
)

6 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE];

8 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

10 
	`Wrôí
(
sockfd
, 
£ndlöe
, 1);

11 
	`¶ìp
(1);

12 
	`Wrôí
(
sockfd
, 
£ndlöe
+1, 
	`°æí
(sendline)-1);

14 i‡(
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) == 0)

15 
	`îr_quô
("str_cli: serverÅerminatedÖrematurely");

17 
	`Fputs
(
ªcvlöe
, 
°dout
);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_echo08.c

1 
	~"u≈.h
"

4 
	$°r_echo
(
sockfd
)

6 
¨g1
, 
¨g2
;

7 
ssize_t
 
n
;

8 
löe
[
MAXLINE
];

11 i‡–(
n
 = 
	`Ródlöe
(
sockfd
, 
löe
, 
MAXLINE
)) == 0)

14 i‡(
	`ssˇnf
(
löe
, "%ld%ld", &
¨g1
, &
¨g2
) == 2)

15 
	`¢¥ötf
(
löe
, ÷öe), "%ld\n", 
¨g1
 + 
¨g2
);

17 
	`¢¥ötf
(
löe
, (line), "inputÉrror\n");

19 
n
 = 
	`°æí
(
löe
);

20 
	`Wrôí
(
sockfd
, 
löe
, 
n
);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_echo09.c

1 
	~"u≈.h
"

2 
	~"sum.h
"

5 
	$°r_echo
(
sockfd
)

7 
ssize_t
 
n
;

8 
¨gs
árgs;

9 
ªsu…
Ñesult;

12 i‡–(
n
 = 
	`Ródn
(
sockfd
, &
¨gs
, (args))) == 0)

15 
ªsu…
.
sum
 = 
¨gs
.
¨g1
 +árgs.
¨g2
;

16 
	`Wrôí
(
sockfd
, &
ªsu…
, (result));

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sum.h

1 
	s¨gs
 {

2 
	m¨g1
;

3 
	m¨g2
;

6 
	sªsu…
 {

7 
	msum
;

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
i
, 
sockfd
[5];

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
i
 = 0; i < 5; i++) {

13 
sockfd
[
i
] = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
[
i
], (
SA
 *Ë&
£rvaddr
, (servaddr));

23 
	`°r_˛i
(
°dö
, 
sockfd
[0]);

25 
	`exô
(0);

26 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli05.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli06.c

4 
	~"u≈.h
"

7 
	$maö
(
¨gc
, **
¨gv
)

9 
sockfd
;

10 
sockaddr_ö
 
£rvaddr
;

12 i‡(
¨gc
 != 2)

13 
	`îr_quô
("usage:Åcpcli <IPaddress>");

15 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

17 
	`bzîo
(&
£rvaddr
, (servaddr));

18 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

19 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

20 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

22 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

24 
	`Wrôí
(
sockfd
, "foo", 3);

25 
	`¶ìp
(30);

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli07.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
	`sig_Ærm
();

8 
ôimîvÆ
 
vÆ
;

9 
sockaddr_ö
 
£rvaddr
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:Åcpcli <IPaddress>");

14 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

16 
	`bzîo
(&
£rvaddr
, (servaddr));

17 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

18 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

22 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

23 
vÆ
.
ô_öãrvÆ
.
tv_£c
 = 0;

24 
vÆ
.
ô_öãrvÆ
.
tv_u£c
 = 0;

25 
vÆ
.
ô_vÆue
.
tv_£c
 = 0;

26 
vÆ
.
ô_vÆue
.
tv_u£c
 = 50000;

27 i‡(
	`£tôimî
(
ITIMER_REAL
, &
vÆ
, 
NULL
) == -1)

28 
	`îr_sys
("setitimerÉrror");

30 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

32 
	`°r_˛i
(
°dö
, 
sockfd
);

34 
	`exô
(0);

35 
	}
}

38 
	$sig_Ærm
(
signo
)

40 
	`exô
(0);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli08.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli09.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage:Åcpcli <IPaddress>");

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

17 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`°r_˛i
(
°dö
, 
sockfd
);

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli10.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
lögî
 
lög
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
lög
.
l_⁄off
 = 1;

25 
lög
.
l_lögî
 = 0;

26 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_LINGER
, &
lög
, (ling));

28 
	`exô
(0);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli11.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
sockfd
;

8 
sockaddr_ö
 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage:Åcpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
	`°r_˛i
(
°dö
, 
sockfd
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

11 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

13 
	`bzîo
(&
£rvaddr
, (servaddr));

14 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

15 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

20 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
˛ûí
 = (
˛üddr
);

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

26 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

27 
	`Clo£
(
li°ífd
);

28 
	`°r_echo
(
c⁄nfd
);

29 
	`exô
(0);

31 
	`Clo£
(
c⁄nfd
);

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

29 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

30 
	`Clo£
(
li°ífd
);

31 
	`°r_echo
(
c⁄nfd
);

32 
	`exô
(0);

34 
	`Clo£
(
c⁄nfd
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv08.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv09.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpservpoll01.c

2 
	~"u≈.h
"

3 
	~<limôs.h
>

6 
	$maö
(
¨gc
, **
¨gv
)

8 
i
, 
maxi
, 
li°ífd
, 
c⁄nfd
, 
sockfd
;

9 
ƒódy
;

10 
ssize_t
 
n
;

11 
buf
[
MAXLINE
];

12 
sockÀn_t
 
˛ûí
;

13 
pﬁlfd
 
˛õ¡
[
OPEN_MAX
];

14 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

16 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

18 
	`bzîo
(&
£rvaddr
, (servaddr));

19 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

20 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

21 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

23 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

25 
	`Li°í
(
li°ífd
, 
LISTENQ
);

27 
˛õ¡
[0].
fd
 = 
li°ífd
;

28 
˛õ¡
[0].
evíts
 = 
POLLRDNORM
;

29 
i
 = 1; i < 
OPEN_MAX
; i++)

30 
˛õ¡
[
i
].
fd
 = -1;

31 
maxi
 = 0;

36 
ƒódy
 = 
	`Pﬁl
(
˛õ¡
, 
maxi
+1, 
INFTIM
);

38 i‡(
˛õ¡
[0].
ªvíts
 & 
POLLRDNORM
) {

39 
˛ûí
 = (
˛üddr
);

40 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

41 #ifdef 
NOTDEF


42 
	`¥ötf
("√w clõ¡: %s\n", 
	`Sock_¡›
((
SA
 *Ë&
˛üddr
, 
˛ûí
));

45 
i
 = 1; i < 
OPEN_MAX
; i++)

46 i‡(
˛õ¡
[
i
].
fd
 < 0) {

47 
˛õ¡
[
i
].
fd
 = 
c⁄nfd
;

50 i‡(
i
 =
OPEN_MAX
)

51 
	`îr_quô
("too many clients");

53 
˛õ¡
[
i
].
evíts
 = 
POLLRDNORM
;

54 i‡(
i
 > 
maxi
)

55 
maxi
 = 
i
;

57 i‡(--
ƒódy
 <= 0)

61 
i
 = 1; i <
maxi
; i++) {

62 i‡–(
sockfd
 = 
˛õ¡
[
i
].
fd
) < 0)

64 i‡(
˛õ¡
[
i
].
ªvíts
 & (
POLLRDNORM
 | 
POLLERR
)) {

65 i‡–(
n
 = 
	`ªad
(
sockfd
, 
buf
, 
MAXLINE
)) < 0) {

66 i‡(
î∫o
 =
ECONNRESET
) {

68 #ifdef 
NOTDEF


69 
	`¥ötf
("˛õ¡[%d]áb‹ãd c⁄√˘i⁄\n", 
i
);

71 
	`Clo£
(
sockfd
);

72 
˛õ¡
[
i
].
fd
 = -1;

74 
	`îr_sys
("readÉrror");

75 } i‡(
n
 == 0) {

77 #ifdef 
NOTDEF


78 
	`¥ötf
("˛õ¡[%d] clo£d c⁄√˘i⁄\n", 
i
);

80 
	`Clo£
(
sockfd
);

81 
˛õ¡
[
i
].
fd
 = -1;

83 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

85 i‡(--
ƒódy
 <= 0)

90 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpservselect01.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
, 
maxi
, 
maxfd
, 
li°ífd
, 
c⁄nfd
, 
sockfd
;

8 
ƒódy
, 
˛õ¡
[
FD_SETSIZE
];

9 
ssize_t
 
n
;

10 
fd_£t
 
r£t
, 
Æl£t
;

11 
buf
[
MAXLINE
];

12 
sockÀn_t
 
˛ûí
;

13 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

15 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

17 
	`bzîo
(&
£rvaddr
, (servaddr));

18 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

19 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

20 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

22 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

24 
	`Li°í
(
li°ífd
, 
LISTENQ
);

26 
maxfd
 = 
li°ífd
;

27 
maxi
 = -1;

28 
i
 = 0; i < 
FD_SETSIZE
; i++)

29 
˛õ¡
[
i
] = -1;

30 
	`FD_ZERO
(&
Æl£t
);

31 
	`FD_SET
(
li°ífd
, &
Æl£t
);

36 
r£t
 = 
Æl£t
;

37 
ƒódy
 = 
	`Sñe˘
(
maxfd
+1, &
r£t
, 
NULL
, NULL, NULL);

39 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

40 
˛ûí
 = (
˛üddr
);

41 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

42 #ifdef 
NOTDEF


43 
	`¥ötf
("new client: %s,Öort %d\n",

44 
	`I√t_¡›
(
AF_INET
, &
˛üddr
.
sö_addr
, 4, 
NULL
),

45 
	`¡ohs
(
˛üddr
.
sö_p‹t
));

48 
i
 = 0; i < 
FD_SETSIZE
; i++)

49 i‡(
˛õ¡
[
i
] < 0) {

50 
˛õ¡
[
i
] = 
c⁄nfd
;

53 i‡(
i
 =
FD_SETSIZE
)

54 
	`îr_quô
("too many clients");

56 
	`FD_SET
(
c⁄nfd
, &
Æl£t
);

57 i‡(
c⁄nfd
 > 
maxfd
)

58 
maxfd
 = 
c⁄nfd
;

59 i‡(
i
 > 
maxi
)

60 
maxi
 = 
i
;

62 i‡(--
ƒódy
 <= 0)

66 
i
 = 0; i <
maxi
; i++) {

67 i‡–(
sockfd
 = 
˛õ¡
[
i
]) < 0)

69 i‡(
	`FD_ISSET
(
sockfd
, &
r£t
)) {

70 i‡–(
n
 = 
	`Ród
(
sockfd
, 
buf
, 
MAXLINE
)) == 0) {

72 
	`Clo£
(
sockfd
);

73 
	`FD_CLR
(
sockfd
, &
Æl£t
);

74 
˛õ¡
[
i
] = -1;

76 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

78 i‡(--
ƒódy
 <= 0)

83 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tsigpipe.c

1 
	~"u≈.h
"

4 
	$sig_pùe
(
signo
)

6 
	`¥ötf
("SIGPIPEÑeceived\n");

8 
	}
}

11 
	$maö
(
¨gc
, **
¨gv
)

13 
sockfd
;

14 
sockaddr_ö
 
£rvaddr
;

16 i‡(
¨gc
 != 2)

17 
	`îr_quô
("usage:Åcpcli <IPaddress>");

19 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

21 
	`bzîo
(&
£rvaddr
, (servaddr));

22 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

23 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(13);

24 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

26 
	`Sig«l
(
SIGPIPE
, 
sig_pùe
);

28 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

30 
	`¶ìp
(2);

31 
	`Wrôe
(
sockfd
, "hello", 5);

32 
	`¶ìp
(2);

33 
	`Wrôe
(
sockfd
, "world", 5);

35 
	`exô
(0);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/accept_eintr.c

1 
	~"u≈.h
"

6 
	$sig_öt
(
signo
)

8 
	`¥ötf
("received SIGINT\n");

10 
	}
}

13 
	$maö
(
¨gc
, **
¨gv
)

15 
li°ífd
, 
c⁄nfd
;

16 
sockÀn_t
 
˛ûí
;

17 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

19 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

21 
	`bzîo
(&
£rvaddr
, (servaddr));

22 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

23 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

24 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

26 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

28 
	`Li°í
(
li°ífd
, 
LISTENQ
);

30 
	`Sig«l
(
SIGINT
, 
sig_öt
);

33 
˛ûí
 = (
˛üddr
);

34 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
);

37 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/funcs.c

1 
	~"ã°.h
"

8 
	$T˝SockByAddr
(*
ùaddr
, 
p‹t
 )

10 
sockfd
;

12 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

14 
	`bzîo
(&
£rvaddr
, (servaddr));

15 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

16 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

17 
	`I√t_±⁄
(
AF_INET
, 
ùaddr
, &
£rvaddr
.
sö_addr
);

19 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 (
sockfd
);

22 
	}
}

30 
	$UdpSockByAddr
(*
ùaddr
, 
p‹t
 )

32 
sockfd
;

34 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

36 
	`bzîo
(&
£rvaddr
, (servaddr));

37 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

38 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

39 
	`I√t_±⁄
(
AF_INET
, 
ùaddr
, &
£rvaddr
.
sö_addr
);

41 (
sockfd
);

42 
	}
}

49 
	$UdpC⁄nSockByAddr
(*
ùaddr
, 
p‹t
 )

51 
sockfd
;

53 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

55 
	`bzîo
(&
£rvaddr
, (servaddr));

56 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

57 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

58 
	`I√t_±⁄
(
AF_INET
, 
ùaddr
, &
£rvaddr
.
sö_addr
);

60 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

62 (
sockfd
);

63 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/readline.h

2 
	mªad_fd
;

3 *
	mªad_±r
;

4 
size_t
 
	mªad_maxÀn
;

6 
	mæ_˙t
;

7 *
	mæ_buÂå
;

8 
	mæ_buf
[
MAXLINE
];

9 } 
	tRlöe
;

11 
ªadlöe_röô
(, *, 
size_t
, 
Rlöe
 *);

12 
ssize_t
 
ªadlöe_r
(
Rlöe
 *);

	@/media/sf_ddrive/progs/network/unpv13e/test/readline1.c

2 
	~"u≈.h
"

5 
ssize_t


6 
	$ªadlöe
(
fd
, *
v±r
, 
size_t
 
maxÀn
)

8 
ssize_t
 
n
, 
rc
;

9 
c
, *
±r
;

11 
±r
 = 
v±r
;

12 
n
 = 1;Ç < 
maxÀn
;Ç++) {

13 
agaö
:

14 i‡–(
rc
 = 
	`ªad
(
fd
, &
c
, 1)) == 1) {

15 *
±r
++ = 
c
;

16 i‡(
c
 == '\n')

18 } i‡(
rc
 == 0) {

19 *
±r
 = 0;

20 (
n
 - 1);

22 i‡(
î∫o
 =
EINTR
)

23 
agaö
;

28 *
±r
 = 0;

29 (
n
);

30 
	}
}

33 
ssize_t


34 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

36 
ssize_t
 
n
;

38 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) < 0)

39 
	`îr_sys
("readlineÉrror");

40 (
n
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/readline2.c

2 
	~"u≈.h
"

4 
ssize_t


5 
	$my_ªad
(
fd
, *
±r
)

7 
ªad_˙t
 = 0;

8 *
ªad_±r
;

9 
ªad_buf
[
MAXLINE
];

11 i‡(
ªad_˙t
 <= 0) {

12 i‡–(
ªad_˙t
 = 
	`ªad
(
fd
, 
ªad_buf
, (read_buf))) < 0)

13 
	`îr_sys
("readÉrror");

14 i‡(
ªad_˙t
 == 0)

16 
ªad_±r
 = 
ªad_buf
;

19 
ªad_˙t
--;

20 *
±r
 = *
ªad_±r
++ & 255;

22 
	}
}

24 
ssize_t


25 
	$ªadlöe
(
fd
, *
v±r
, 
size_t
 
maxÀn
)

27 
n
, 
rc
;

28 
c
, *
±r
;

30 
±r
 = 
v±r
;

31 
n
 = 1;Ç < 
maxÀn
;Ç++) {

32 i‡–(
rc
 = 
	`my_ªad
(
fd
, &
c
)) == 1) {

33 *
±r
++ = 
c
;

34 i‡(
c
 == '\n')

36 } i‡(
rc
 == 0) {

37 *
±r
 = 0;

38 (
n
 - 1);

43 *
±r
 = 0;

44 (
n
);

45 
	}
}

48 
ssize_t


49 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

51 
ssize_t
 
n
;

53 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) == -1)

54 
	`îr_sys
("readlineÉrror");

55 (
n
);

56 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/readline3.c

2 
	~"u≈.h
"

3 
	~"ªadlöe.h
"

5 
ssize_t


6 
	$my_ªad
(
Rlöe
 *
Ωå
, *
±r
)

8 i‡(
Ωå
->
æ_˙t
 <= 0) {

9 
agaö
:

10 
Ωå
->
æ_˙t
 = 
	`ªad
‘±r->
ªad_fd
,Ñ±r->
æ_buf
, (rptr->rl_buf));

11 i‡(
Ωå
->
æ_˙t
 < 0) {

12 i‡(
î∫o
 =
EINTR
)

13 
agaö
;

17 i‡(
Ωå
->
æ_˙t
 == 0)

19 
Ωå
->
æ_buÂå
 =Ñ±r->
æ_buf
;

22 
Ωå
->
æ_˙t
--;

23 *
±r
 = *
Ωå
->
æ_buÂå
++ & 255;

25 
	}
}

28 
	$ªadlöe_röô
(
fd
, *
±r
, 
size_t
 
maxÀn
, 
Rlöe
 *
Ωå
)

30 
Ωå
->
ªad_fd
 = 
fd
;

31 
Ωå
->
ªad_±r
 = 
±r
;

32 
Ωå
->
ªad_maxÀn
 = 
maxÀn
;

34 
Ωå
->
æ_˙t
 = 0;

35 
Ωå
->
æ_buÂå
 =Ñ±r->
æ_buf
;

36 
	}
}

38 
ssize_t


39 
	$ªadlöe_r
(
Rlöe
 *
Ωå
)

41 
n
, 
rc
;

42 
c
, *
±r
;

44 
±r
 = 
Ωå
->
ªad_±r
;

45 
n
 = 1;Ç < 
Ωå
->
ªad_maxÀn
;Ç++) {

46 i‡–(
rc
 = 
	`my_ªad
(
Ωå
, &
c
)) == 1) {

47 *
±r
++ = 
c
;

48 i‡(
c
 == '\n')

50 } i‡(
rc
 == 0) {

51 *
±r
 = 0;

52 (
n
 - 1);

57 *
±r
 = 0;

58 (
n
);

59 
	}
}

62 
ssize_t


63 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

65 
ssize_t
 
n
;

67 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) == -1)

68 
	`îr_sys
("readlineÉrror");

69 (
n
);

70 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/test.h

1 
	~"u≈.h
"

4 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

5 
buff
[8192];

6 
vîbo£
;

8 
T˝SockByAddr
(*, );

9 
UdpSockByAddr
(*, );

10 
UdpC⁄nSockByAddr
(*, );

	@/media/sf_ddrive/progs/network/unpv13e/test/test1.c

1 
	~"ã°.h
"

12 
sockaddr_ö
 
	g£rvaddr
, 
	g˛üddr
;

13 
	gbuff
[8192];

14 
	gvîbo£
;

21 
	$hódî_Êags
()

25 #i‚def 
MSG_DONTROUTE


26 
	`¥ötf
("+ MSG_DONTROUTEÇot defined\n");

29 #i‚def 
MSG_OOB


30 
	`¥ötf
("+ MSG_OOBÇot defined\n");

33 #i‚def 
MSG_PEEK


34 
	`¥ötf
("+ MSG_PEEKÇot defined\n");

37 #i‚def 
MSG_WAITALL


38 
	`¥ötf
("+ MSG_WAITALLÇot defined\n");

40 
	}
}

49 
	$£ndto_01
()

51 
sockfd
, 
n
;

52 
sockÀn_t
 
Àn
;

54 
sockfd
 = 
	`T˝SockByAddr
("140.252.13.34", 7);

61 
	`Sídto
(
sockfd
, "hñlo", 5, 0, 
NULL
, NULL);

63 i‡–(
n
 = 
	`Recv‰om
(
sockfd
, 
buff
, (buff), 0, 
NULL
, NULL)) != 5)

64 
	`îr_quô
("! RecvfromÉxpected 5");

72 
	`Sídto
(
sockfd
, "w‹ld", 5, 0, 
NULL
, NULL);

74 
Àn
 = (
£rvaddr
) * 2;

75 i‡–(
n
 = 
	`Recv‰om
(
sockfd
, 
buff
, (buff), 0,

76 (
SA
 *Ë&
£rvaddr
, &
Àn
)) != 5)

77 
	`îr_quô
("! RecvfromÉxpected 5");

78 i‡(
Àn
 != 0) {

79 
	`îr_msg
("+Ñecvfrom on TCP socketÑeturnsÜen = %d for sender'sáddr",

80 
Àn
);

81 i‡(
Àn
 =(
£rvaddr
))

82 
	`¥ötf
("Ñecvfrom from %s,Öort %d\n",

83 
	`öë_¡ﬂ
(
£rvaddr
.
sö_addr
), 
	`¡ohs
(£rvaddr.
sö_p‹t
));

86 
	`Clo£
(
sockfd
);

93 
sockfd
 = 
	`T˝SockByAddr
("140.252.13.34", 7);

96 
n
 = 
	`£ndto
(
sockfd
, "hñlo1", 6, 0, (
SA
 *Ë&
£rvaddr
, (servaddr));

97 i‡(
n
 < 0)

98 
	`îr_ªt
("sendto on TCP socket specifying destáddrÑeturnsÉrror");

99 i‡(
n
 == 6)

100 #ifdef 
MSG_EOF


101 
	`îr_msg
("+ sendto on TCP socket specifying destáddr OK (T/TCP supported)");

103 
	`îr_msg
("+ sendto on TCP socket specifying destáddr OK");

106 
	`îr_quô
("! sídtÿ⁄ TCP sockë s≥cifyög de°áddr,Ç = %d", 
n
);

108 
	`Clo£
(
sockfd
);

114 
sockfd
 = 
	`UdpSockByAddr
("140.252.13.34", 7);

117 i‡–(
n
 = 
	`£ndto
(
sockfd
, "hñlo12", 7, 0, (
SA
 *) 0, 0)) >= 0)

118 
	`îr_msg
("+ sídtÿ⁄ unc⁄√˘ed UDP wôhouàde°ádd∏OK,Ç = %d", 
n
);

119 i‡(
î∫o
 !
EDESTADDRREQ
)

120 
	`îr_ªt
("+ sendto on unconnected UDP without destáddr, unexpectedÉrrno");

123 i‡–(
n
 = 
	`wrôe
(
sockfd
, "hello", 7)) >= 0)

124 
	`îr_msg
("+ wrôê⁄ unc⁄√˘ed UDP OK,Ç = %d", 
n
);

125 i‡(
î∫o
 !
EDESTADDRREQ
)

126 
	`îr_ªt
("+ write on unconnected UDP, unexpectedÉrrno");

128 
	`Clo£
(
sockfd
);

134 
sockfd
 = 
	`UdpC⁄nSockByAddr
("140.252.13.34", 7);

137 i‡–(
n
 = 
	`wrôe
(
sockfd
, "hello123", 8)) < 0)

138 
	`îr_sys
("! wrôê⁄ c⁄√˘ed UDP,Ç = %d", 
n
);

139 i‡(
n
 != 8)

140 
	`îr_quô
("! wrôê⁄ c⁄√˘ed UDP,Ç = %d", 
n
);

143 i‡–(
n
 = 
	`£ndto
(
sockfd
, "hñlo1234", 9, 0, (
SA
 *) 0, 0)) < 0)

144 
	`îr_sys
("! sídtÿ⁄ c⁄√˘ed UDP wôhouàde°áddr,Ç = %d", 
n
);

145 i‡(
n
 != 9)

146 
	`îr_quô
("! sídtÿ⁄ c⁄√˘ed UDP wôhouàde°áddr,Ç = %d", 
n
);

149 
n
 = 
	`£ndto
(
sockfd
, "hñlo12345", 10, 0, (
SA
 *Ë&
£rvaddr
, (servaddr));

150 i‡(
n
 < 0 && 
î∫o
 !
EISCONN
)

151 
	`îr_ªt
("+ sendto on connected UDP with destáddr, unexpectedÉrrno");

152 i‡(
n
 >= 0)

153 
	`îr_msg
("+ sídtÿ⁄ c⁄√˘ed UDP wôh de°ádd∏OK,Ç = %d", 
n
);

155 
	`Clo£
(
sockfd
);

156 
	}
}

165 
	$udp_01
()

167 
	}
}

170 
	$ußge
(c⁄° *
msg
)

172 
	`îr_msg
(

176 i‡(
msg
[0] != 0)

177 
	`îr_quô
("%s", 
msg
);

178 
	`exô
(1);

179 
	}
}

182 
	$maö
(
¨gc
, **
¨gv
)

184 
c
;

186 
›ãº
 = 0;

187  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "v")) != -1) {

188 
c
) {

190 
vîbo£
 = 1;

194 
	`ußge
("unrecognized option");

198 i‡(
vîbo£
Ë
	`¥ötf
("header_flags\n");

199 
	`hódî_Êags
();

201 i‡(
vîbo£
Ë
	`¥ötf
("udp_01\n");

202 
	`udp_01
();

204 i‡(
vîbo£
Ë
	`¥ötf
("sendto_01\n");

205 
	`£ndto_01
();

206 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/test2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
ßÀn
;

8 
addröfo
 *
ªs
;

9 
sockaddr
 *
˛i
, *
£rv
;

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage:Åest2 <IPaddress>");

14 #ifdef 
nŸdef


15 
ªs
 = 
	`Ho°_£rv
(
¨gv
[1], "daytime", 
AF_UNSPEC
, 
SOCK_DGRAM
);

16 
	`¥ötf
("ªs->ai_addæí = %d\n", 
ªs
->
ai_addæí
);

17 
	`¥ötf
("ªs->ai_add∏%p\n", 
ªs
->
ai_addr
);

18 
	`¥ötf
("ªs->ai_√xà%p\n", 
ªs
->
ai_√xt
);

19 
	`¥ötf
("ªs->ai_addr->ß_Ámûy = %p\n", 
ªs
->
ai_addr
->
ß_Ámûy
);

21 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1], "13", (**Ë&
£rv
, &
ßÀn
);

22 
	`¥ötf
("sockfd = %d\n", 
sockfd
);

24 
	`exô
(0);

25 
	}
}

26 #ifdef 
nŸdef


28 
	$udp_˛õ¡
(c⁄° *
ho°
, c⁄° *
£rv
, **
ß±r
, 
sockÀn_t
 *
À≈
)

30 
sockfd
, 
n
;

31 
addröfo
 
höts
, *
ªs
, *
ªsßve
;

33 
	`bzîo
(&
höts
, (
addröfo
));

34 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

35 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

37 i‡–(
n
 = 
	`gëaddröfo
(
ho°
, 
£rv
, &
höts
, &
ªs
)) != 0)

38 
	`îr_quô
("udp_clientÉrror for %s, %s: %s",

39 
ho°
, 
£rv
, 
	`gai_°ªº‹
(
n
));

40 
ªsßve
 = 
ªs
;

43 
sockfd
 = 
	`sockë
(
ªs
->
ai_Ámûy
,Ñes->
ai_sockty≥
,Ñes->
ai_¥Ÿocﬁ
);

44 i‡(
sockfd
 >= 0)

46 }  (
ªs
 =Ñes->
ai_√xt
Ë!
NULL
);

48 i‡(
ªs
 =
NULL
)

49 
	`îr_sys
("udp_˛õ¡Éº‹ f‹ %s, %s", 
ho°
, 
£rv
);

51 *
ß±r
 = 
	`MÆloc
(
ªs
->
ai_addæí
);

52 
	`mem˝y
(*
ß±r
, 
ªs
->
ai_addr
,Ñes->
ai_addæí
);

53 *
À≈
 = 
ªs
->
ai_addæí
;

55 
	`‰ìaddröfo
(
ªsßve
);

57 (
sockfd
);

58 
	}
}

61 
	$Udp_˛õ¡
(c⁄° *
ho°
, c⁄° *
£rv
, **
ß±r
, 
sockÀn_t
 *
À≈å
)

63 (
	`udp_˛õ¡
(
ho°
, 
£rv
, 
ß±r
, 
À≈å
));

64 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/tisfdtype.c

1 
	~"u≈.h
"

3 
	$maö
()

5 
t˝sock
, 
udpsock
;

7 
	`¥ötf
("°dö: %d\n", 
	`Isfdty≥
(
STDIN_FILENO
, 
S_IFSOCK
));

8 
	`¥ötf
("°dout: %d\n", 
	`Isfdty≥
(
STDOUT_FILENO
, 
S_IFSOCK
));

9 
	`¥ötf
("°dîr: %d\n", 
	`Isfdty≥
(
STDERR_FILENO
, 
S_IFSOCK
));

11 
t˝sock
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

12 
	`¥ötf
("TCP sockë: %d\n", 
	`Isfdty≥
(
t˝sock
, 
S_IFSOCK
));

14 
udpsock
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

15 
	`¥ötf
("UDP sockë: %d\n", 
	`Isfdty≥
(
udpsock
, 
S_IFSOCK
));

17 
	`exô
(0);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/treadline1.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
cou¡
 = 0;

7 
ssize_t
 
n
;

8 
ªcvlöe
[
MAXLINE
];

10  ( 
n
 = 
	`ªadlöe
(
STDIN_FILENO
, 
ªcvlöe
, 
MAXLINE
)) > 0)

11 
cou¡
++;

12 
	`¥ötf
("%dÜöes\n", 
cou¡
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/treadline2.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
cou¡
 = 0;

7 
ssize_t
 
n
;

8 
ªcvlöe
[
MAXLINE
];

10  ( 
n
 = 
	`ªadlöe
(
STDIN_FILENO
, 
ªcvlöe
, 
MAXLINE
)) > 0)

11 
cou¡
++;

12 
	`¥ötf
("%dÜöes\n", 
cou¡
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/treadline3.c

1 
	~"u≈.h
"

2 
	~"ªadlöe.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
cou¡
 = 0;

8 
ssize_t
 
n
;

9 
ªcvlöe
[
MAXLINE
];

10 
Rlöe
 
æöe
;

12 
	`ªadlöe_röô
(
STDIN_FILENO
, 
ªcvlöe
, 
MAXLINE
, &
æöe
);

13  (
n
 = 
	`ªadlöe_r
(&
æöe
)) > 0)

14 
cou¡
++;

15 
	`¥ötf
("%dÜöes\n", 
cou¡
);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/tshutdown.c

1 
	~"u≈.h
"

3 
	#BUFF
 100000

	)

4 
	gbuff
[
BUFF
];

7 
	$maö
(
¨gc
, **
¨gv
)

9 
sockfd
, 
nbyãs
;

10 
ssize_t
 
n
;

12 i‡(
¨gc
 != 3)

13 
	`îr_quô
("usage:Åshutdown <hostname> <service>");

15 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

16 
	`Ârötf
(
°dîr
, "connected\n");

18  (
n
 = 
	`Ród
(
STDIN_FILENO
, 
buff
, 
BUFF
)) > 0) {

19 
	`Wrôí
(
sockfd
, 
buff
, 
n
);

21 
	`Clo£
(
STDIN_FILENO
);

24 
nbyãs
 = 0;

25  (
n
 = 
	`Ród
(
sockfd
, 
buff
, 
BUFF
)) > 0) {

27 
	`Wrôe
(
STDOUT_FILENO
, 
buff
, 
n
);

28 
nbyãs
 +
n
;

30 
	`Ârötf
(
°dîr
, "tŸÆ: %d byã†ªad from sockë\n", 
nbyãs
);

31 
	`Clo£
(
STDOUT_FILENO
);

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/test/tsnprintf.c

13 
	~"u≈.h
"

16 
	$maö
(
¨gc
, **
¨gv
)

18 
n
;

19 
buf
[1024];

21 
n
 = 
	`¢¥ötf
(
buf
, 4, "%d", 9999);

22 i‡(
n
 > 3)

23 
	`¥ötf
("îr‹: s≈röt‡ovîÊowed buf„r,Ç = %d\n", 
n
);

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/example01.c

1 
	~"u≈thªad.h
"

3 
	#NLOOP
 5000

	)

5 
	gcou¡î
;

7 *
doô
(*);

10 
	$maö
(
¨gc
, **
¨gv
)

12 
±hªad_t
 
tidA
, 
tidB
;

14 
	`Pthªad_¸óã
(&
tidA
, 
NULL
, &
doô
, NULL);

15 
	`Pthªad_¸óã
(&
tidB
, 
NULL
, &
doô
, NULL);

18 
	`Pthªad_joö
(
tidA
, 
NULL
);

19 
	`Pthªad_joö
(
tidB
, 
NULL
);

21 
	`exô
(0);

22 
	}
}

25 
	$doô
(*
v±r
)

27 
i
, 
vÆ
;

34 
i
 = 0; i < 
NLOOP
; i++) {

35 
vÆ
 = 
cou¡î
;

36 
	`¥ötf
("%d: %d\n", 
	`±hªad_£lf
(), 
vÆ
 + 1);

37 
cou¡î
 = 
vÆ
 + 1;

40 (
NULL
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/example02.c

1 
	~"u≈thªad.h
"

3 
	#NLOOP
 5000

	)

5 
	gcou¡î
;

6 
±hªad_muãx_t
 
	gcou¡î_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

8 *
doô
(*);

11 
	$maö
(
¨gc
, **
¨gv
)

13 
±hªad_t
 
tidA
, 
tidB
;

15 
	`Pthªad_¸óã
(&
tidA
, 
NULL
, &
doô
, NULL);

16 
	`Pthªad_¸óã
(&
tidB
, 
NULL
, &
doô
, NULL);

19 
	`Pthªad_joö
(
tidA
, 
NULL
);

20 
	`Pthªad_joö
(
tidB
, 
NULL
);

22 
	`exô
(0);

23 
	}
}

26 
	$doô
(*
v±r
)

28 
i
, 
vÆ
;

35 
i
 = 0; i < 
NLOOP
; i++) {

36 
	`Pthªad_muãx_lock
(&
cou¡î_muãx
);

38 
vÆ
 = 
cou¡î
;

39 
	`¥ötf
("%d: %d\n", 
	`±hªad_£lf
(), 
vÆ
 + 1);

40 
cou¡î
 = 
vÆ
 + 1;

42 
	`Pthªad_muãx_u∆ock
(&
cou¡î_muãx
);

45 (
NULL
);

46 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/example03.c

1 
	~"u≈thªad.h
"

3 
	#Pthªad_muãx_lock
(
m±r
) \

4 { 
n
; \

5 i‡–(
n
 = 
	`±hªad_muãx_lock
(
m±r
)) != 0) \

6 { 
î∫o
 = 
n
; 
	`îr_sys
("pthread_mutex_lockÉrror"); } \

7 }

	)

8 
	#Pthªad_muãx_u∆ock
(
m±r
) \

9 { 
n
; \

10 i‡–(
n
 = 
	`±hªad_muãx_u∆ock
(
m±r
)) != 0) \

11 { 
î∫o
 = 
n
; 
	`îr_sys
("pthread_mutex_unlockÉrror"); } \

12 }

	)

13 
	#Pthªad_c⁄d_waô
(
˝å
,
m±r
) \

14 { 
n
; \

15 i‡–(
n
 = 
	`±hªad_c⁄d_waô
(
˝å
,
m±r
)) != 0) \

16 { 
î∫o
 = 
n
; 
	`îr_sys
("pthread_cond_waitÉrror"); } \

17 }

	)

18 
	#Pthªad_c⁄d_sig«l
(
˝å
) \

19 { 
n
; \

20 i‡–(
n
 = 
	`±hªad_c⁄d_sig«l
(
˝å
)) != 0) \

21 { 
î∫o
 = 
n
; 
	`îr_sys
("pthread_cond_signalÉrror"); } \

22 }

	)

24 
	#NLOOP
 50

	)

25 
	#BUFFSIZE
 10

	)

27 
	sbuf_t
 {

28 
	mb_buf
[
BUFFSIZE
];

29 
	mb_nôems
;

30 
	mb_√xtgë
;

31 
	mb_√xçut
;

32 
±hªad_muãx_t
 
	mb_muãx
;

33 
±hªad_c⁄d_t
 
	mb_c⁄d_c⁄sumî
;

34 
±hªad_c⁄d_t
 
	mb_c⁄d_¥odu˚r
;

35 } 
	gbuf_t
;

37 *
¥odu˚_lo›
(*);

38 *
c⁄sume_lo›
(*);

41 
	$maö
(
¨gc
, **
¨gv
)

43 
n
;

44 
±hªad_t
 
tidA
, 
tidB
;

46 
	`¥ötf
("main,áddr(stack) = %x,áddr(global) = %x,áddr(func) = %x\n",

47 &
n
, &
buf_t
, &
¥odu˚_lo›
);

48 i‡–(
n
 = 
	`±hªad_¸óã
(&
tidA
, 
NULL
, &
¥odu˚_lo›
, NULL)) != 0)

49 
î∫o
 = 
n
, 
	`îr_sys
("pthread_createÉrror for A");

50 i‡–(
n
 = 
	`±hªad_¸óã
(&
tidB
, 
NULL
, &
c⁄sume_lo›
, NULL)) != 0)

51 
î∫o
 = 
n
, 
	`îr_sys
("pthread_createÉrror for B");

54 i‡–(
n
 = 
	`±hªad_joö
(
tidA
, 
NULL
)) != 0)

55 
î∫o
 = 
n
, 
	`îr_sys
("pthread_joinÉrror for A");

56 i‡–(
n
 = 
	`±hªad_joö
(
tidB
, 
NULL
)) != 0)

57 
î∫o
 = 
n
, 
	`îr_sys
("pthread_joinÉrror for B");

59 
	`exô
(0);

60 
	}
}

63 
	$¥odu˚
(
buf_t
 *
b±r
, 
vÆ
)

65 
	`Pthªad_muãx_lock
(&
b±r
->
b_muãx
);

67 
b±r
->
b_nôems
 >
BUFFSIZE
)

68 
	`Pthªad_c⁄d_waô
(&
b±r
->
b_c⁄d_¥odu˚r
, &b±r->
b_muãx
);

71 
	`¥ötf
("¥odu˚ %d\n", 
vÆ
);

72 
b±r
->
b_buf
[b±r->
b_√xçut
] = 
vÆ
;

73 i‡(++
b±r
->
b_√xçut
 >
BUFFSIZE
)

74 
b±r
->
b_√xçut
 = 0;

75 
b±r
->
b_nôems
++;

78 
	`Pthªad_c⁄d_sig«l
(&
b±r
->
b_c⁄d_c⁄sumî
);

79 
	`Pthªad_muãx_u∆ock
(&
b±r
->
b_muãx
);

80 
	}
}

83 
	$c⁄sume
(
buf_t
 *
b±r
)

85 
vÆ
;

87 
	`Pthªad_muãx_lock
(&
b±r
->
b_muãx
);

89 
b±r
->
b_nôems
 <= 0)

90 
	`Pthªad_c⁄d_waô
(&
b±r
->
b_c⁄d_c⁄sumî
, &b±r->
b_muãx
);

93 
vÆ
 = 
b±r
->
b_buf
[b±r->
b_√xtgë
];

94 
	`¥ötf
("c⁄sumê%d\n", 
vÆ
);

95 i‡(++
b±r
->
b_√xtgë
 >
BUFFSIZE
)

96 
b±r
->
b_√xtgë
 = 0;

97 
b±r
->
b_nôems
--;

100 
	`Pthªad_c⁄d_sig«l
(&
b±r
->
b_c⁄d_¥odu˚r
);

101 
	`Pthªad_muãx_u∆ock
(&
b±r
->
b_muãx
);

103 (
vÆ
);

104 
	}
}

107 
	$¥odu˚_lo›
(*
v±r
)

109 
i
;

111 
	`¥ötf
("¥odu˚_lo›Åhªad,áddr(°ackË%x\n", &
i
);

112 
i
 = 0; i < 
NLOOP
; i++) {

113 
	`¥odu˚
(&
buf_t
, 
i
);

116 (
NULL
);

117 
	}
}

120 
	$c⁄sume_lo›
(*
v±r
)

122 
i
, 
vÆ
;

124 
	`¥ötf
("c⁄sume_lo›Åhªad,áddr(°ackË%x\n", &
i
);

125 
i
 = 0; i < 
NLOOP
; i++) {

126 
vÆ
 = 
	`c⁄sume
(&
buf_t
);

129 (
NULL
);

130 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/readline.c

2 
	~"u≈thªad.h
"

4 
±hªad_key_t
 
	gæ_key
;

5 
±hªad_⁄˚_t
 
	gæ_⁄˚
 = 
PTHREAD_ONCE_INIT
;

8 
	$ªadlöe_de°ru˘‹
(*
±r
)

10 
	`‰ì
(
±r
);

11 
	}
}

14 
	$ªadlöe_⁄˚
()

16 
	`Pthªad_key_¸óã
(&
æ_key
, 
ªadlöe_de°ru˘‹
);

17 
	}
}

20 
	mæ_˙t
;

21 *
	mæ_buÂå
;

22 
	mæ_buf
[
MAXLINE
];

23 } 
	tRlöe
;

27 
ssize_t


28 
	$my_ªad
(
Rlöe
 *
tsd
, 
fd
, *
±r
)

30 i‡(
tsd
->
æ_˙t
 <= 0) {

31 
agaö
:

32 i‡–(
tsd
->
æ_˙t
 = 
	`ªad
(
fd
,Åsd->
æ_buf
, 
MAXLINE
)) < 0) {

33 i‡(
î∫o
 =
EINTR
)

34 
agaö
;

36 } i‡(
tsd
->
æ_˙t
 == 0)

38 
tsd
->
æ_buÂå
 =Åsd->
æ_buf
;

41 
tsd
->
æ_˙t
--;

42 *
±r
 = *
tsd
->
æ_buÂå
++;

44 
	}
}

46 
ssize_t


47 
	$ªadlöe
(
fd
, *
v±r
, 
size_t
 
maxÀn
)

49 
size_t
 
n
, 
rc
;

50 
c
, *
±r
;

51 
Rlöe
 *
tsd
;

53 
	`Pthªad_⁄˚
(&
æ_⁄˚
, 
ªadlöe_⁄˚
);

54 i‡–(
tsd
 = 
	`±hªad_gë•ecific
(
æ_key
)Ë=
NULL
) {

55 
tsd
 = 
	`CÆloc
(1, (
Rlöe
));

56 
	`Pthªad_£t•ecific
(
æ_key
, 
tsd
);

59 
±r
 = 
v±r
;

60 
n
 = 1;Ç < 
maxÀn
;Ç++) {

61 i‡–(
rc
 = 
	`my_ªad
(
tsd
, 
fd
, &
c
)) == 1) {

62 *
±r
++ = 
c
;

63 i‡(
c
 == '\n')

65 } i‡(
rc
 == 0) {

66 *
±r
 = 0;

67 (
n
 - 1);

72 *
±r
 = 0;

73 (
n
);

74 
	}
}

77 
ssize_t


78 
	$Ródlöe
(
fd
, *
±r
, 
size_t
 
maxÀn
)

80 
ssize_t
 
n
;

82 i‡–(
n
 = 
	`ªadlöe
(
fd
, 
±r
, 
maxÀn
)) < 0)

83 
	`îr_sys
("readlineÉrror");

84 (
n
);

85 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/strclithread.c

1 
	~"u≈thªad.h
"

3 *
c›yto
(*);

5 
	gsockfd
;

6 
FILE
 *
	gÂ
;

9 
	$°r_˛i
(
FILE
 *
Â_¨g
, 
sockfd_¨g
)

11 
ªcvlöe
[
MAXLINE
];

12 
±hªad_t
 
tid
;

14 
sockfd
 = 
sockfd_¨g
;

15 
Â
 = 
Â_¨g
;

17 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
c›yto
, NULL);

19 
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) > 0)

20 
	`Fputs
(
ªcvlöe
, 
°dout
);

21 
	}
}

24 
	$c›yto
(*
¨g
)

26 
£ndlöe
[
MAXLINE
];

28 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
)

29 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

31 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

33 (
NULL
);

35 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/strclithread2.c

1 
	~"u≈thªad.h
"

3 *
c›yto
(*);

5 
	gsockfd
;

6 
FILE
 *
	gÂ
;

7 
	gd⁄e
;

10 
	$°r_˛i
(
FILE
 *
Â_¨g
, 
sockfd_¨g
)

12 
ªcvlöe
[
MAXLINE
];

13 
±hªad_t
 
tid
;

15 
sockfd
 = 
sockfd_¨g
;

16 
Â
 = 
Â_¨g
;

18 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
c›yto
, NULL);

20 
	`Ródlöe
(
sockfd
, 
ªcvlöe
, 
MAXLINE
) > 0)

21 
	`Fputs
(
ªcvlöe
, 
°dout
);

23 i‡(
d⁄e
 == 0)

24 
	`îr_quô
("serverÅerminatedÖrematurely");

25 
	}
}

28 
	$c›yto
(*
¨g
)

30 
£ndlöe
[
MAXLINE
];

32 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
)

33 
	`Wrôí
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

35 
	`Shutdown
(
sockfd
, 
SHUT_WR
);

37 
d⁄e
 = 1;

38 (
NULL
);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/tcpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpcli <hostname> <service>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`°r_˛i
(
°dö
, 
sockfd
);

15 
	`exô
(0);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/tcpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

8 i‡(
¨gc
 != 3)

9 
	`îr_quô
("usage:Åcpcli <hostname> <service>");

11 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

13 
	`°r_˛i
(
°dö
, 
sockfd
);

15 
	`exô
(0);

16 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/tcpserv01.c

1 
	~"u≈thªad.h
"

3 *
doô
(*);

6 
	$maö
(
¨gc
, **
¨gv
)

8 
li°ífd
, 
c⁄nfd
;

9 
±hªad_t
 
tid
;

10 
sockÀn_t
 
addæí
, 
Àn
;

11 
sockaddr
 *
˛üddr
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage:Åcpserv01 [ <host> ] <service orÖort>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
Àn
 = 
addæí
;

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

25 
	`Pthªad_¸óã
(&
tid
, 
NULL
, &
doô
, (*Ë
c⁄nfd
);

27 
	}
}

30 
	$doô
(*
¨g
)

32 
	`Pthªad_dëach
(
	`±hªad_£lf
());

33 
	`°r_echo
((Ë
¨g
);

34 
	`Clo£
((Ë
¨g
);

35 (
NULL
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/tcpserv02.c

1 
	~"u≈thªad.h
"

3 *
doô
(*);

6 
	$maö
(
¨gc
, **
¨gv
)

8 
li°ífd
, *
ùå
;

9 
thªad_t
 
tid
;

10 
sockÀn_t
 
addæí
, 
Àn
;

11 
sockaddr
 *
˛üddr
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage:Åcpserv01 [ <host> ] <service orÖort>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
Àn
 = 
addæí
;

24 
ùå
 = 
	`MÆloc
(());

25 *
ùå
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

26 
	`Pthªad_¸óã
(&
tid
, 
NULL
, &
doô
, 
ùå
);

28 
	}
}

31 
	$doô
(*
¨g
)

33 
c⁄nfd
;

35 
c⁄nfd
 = *((*Ë
¨g
);

36 
	`‰ì
(
¨g
);

38 
	`Pthªad_dëach
(
	`±hªad_£lf
());

39 
	`°r_echo
(
c⁄nfd
);

40 
	`Clo£
(
c⁄nfd
);

41 (
NULL
);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/test01.c

1 
	~"u≈thªad.h
"

4 
	$myfunc
(*
±r
)

6 
	`∑u£
();

7 
	}
}

10 
	$maö
(
¨gc
, **
¨gv
)

12 
±hªad_t
 
tid
;

13 
n
;

17 
î∫o
 = 0;

18 i‡–(
n
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
myfunc
, NULL)) != 0) {

19 
	`¥ötf
("±hªad_¸óãÑëu∫ed %d,Éºnÿ%d\n", 
n
, 
î∫o
);

21 
î∫o
 = 0;

22 
n
 = 
	`±hªad_joö
(777777, 
NULL
);

23 
	`¥ötf
("±hªad_joöÑëu∫ed %d,Éºnÿ%d\n", 
n
, 
î∫o
);

25 
	`exô
(0);

27 
	`¥ötf
("¸óãdÅid %d\n", 
tid
);

29 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/test02.c

1 
	~"u≈thªad.h
"

4 
	$myfunc
(*
±r
)

6 
vÆ
;

8 
	`¥ötf
("thªad ID o‡myfunc: %d\n", 
	`±hªad_£lf
());

10 
vÆ
 = *((*Ë
±r
);

11 
	`¥ötf
("vÆ = %d\n", 
vÆ
);

12 
	`¶ìp
(10);

13 
vÆ
 = *((*Ë
±r
);

14 
	`¥ötf
("vÆ = %d\n", 
vÆ
);

15 
	}
}

18 
	$maö
(
¨gc
, **
¨gv
)

20 
±hªad_t
 
tid
;

21 
n
, 
vÆ
;

23 
	`¥ötf
("thªad ID o‡maö: %d\n", 
	`±hªad_£lf
());

27 
vÆ
 = 123;

28 i‡–(
n
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
myfunc
, &
vÆ
)) != 0)

29 
î∫o
 = 
n
, 
	`îr_sys
("pthread_createÉrror");

30 
	`¶ìp
(5);

31 
vÆ
 = 789;

32 
	`¶ìp
(20);

33 
	`exô
(0);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/test03.c

3 
	~"u≈thªad.h
"

5 
	gnd⁄e
;

6 
±hªad_muãx_t
 
	gnd⁄e_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

7 
±hªad_c⁄d_t
 
	gnd⁄e_c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

10 
	$myfunc
(*
±r
)

12 
vÆ
;

14 
	`¶ìp
(100);

15 (
NULL
);

16 
	}
}

19 
	$maö
(
¨gc
, **
¨gv
)

21 
±hªad_t
 
tid
;

22 
n
, 
vÆ
;

23 
timevÆ
 
tv
;

24 
time•ec
 
ts
;

26 i‡–(
n
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, 
myfunc
, &
vÆ
)) != 0)

27 
î∫o
 = 
n
, 
	`îr_sys
("pthread_createÉrror");

29 i‡(
	`gëtimeofday
(&
tv
, 
NULL
) < 0)

30 
	`îr_sys
("gettimeofdayÉrror");

31 
ts
.
tv_£c
 = 
tv
.tv_sec + 5;

32 
ts
.
tv_n£c
 = 
tv
.
tv_u£c
 * 1000;

34 i‡–(
n
 = 
	`±hªad_muãx_lock
(&
nd⁄e_muãx
)) != 0)

35 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_lockÉrror");

36 
nd⁄e
 == 0)

37 i‡–(
n
 = 
	`±hªad_c⁄d_timedwaô
(&
nd⁄e_c⁄d
, &
nd⁄e_muãx
, &
ts
)) != 0){

38 i‡(
n
 =
ETIME
)

39 
	`îr_quô
("timewaitÅimed out");

40 
î∫o
 = 
n
, 
	`îr_sys
("pthread_cond_timedwaitÉrror");

43 i‡–(
n
 = 
	`±hªad_muãx_u∆ock
(&
nd⁄e_muãx
)) != 0)

44 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_unlockÉrror");

46 
	`exô
(0);

47 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/test04.c

3 
	~"u≈thªad.h
"

5 *
	göfûe
;

8 
	$myfunc
(*
±r
)

10 
i
, 
fdö
;

11 
buf
[
MAXLINE
];

12 
FILE
 *
Âout
;

14 
	`¢¥ötf
(
buf
, (buf), "ãmp.%d", 
	`±hªad_£lf
());

15 
Âout
 = 
	`F›í
(
buf
, "w+");

18 
i
 = 0; i < 5; i++) {

19 
fdö
 = 
	`O≥n
(
öfûe
, 
O_RDONLY
, 0);

21 
	`Ródlöe
(
fdö
, 
buf
, (buf)) > 0) {

22 
	`Âuts
(
buf
, 
Âout
);

24 
	`Clo£
(
fdö
);

26 
	`F˛o£
(
Âout
);

28 
	`¥ötf
("thªad %d d⁄e\n", 
	`±hªad_£lf
());

29 (
NULL
);

30 
	}
}

33 
	$maö
(
¨gc
, **
¨gv
)

35 
i
, 
¡hªads
;

36 
±hªad_t
 
tid
;

38 i‡(
¨gc
 != 3)

39 
	`îr_quô
("usage:Åest04 <input-file> <#threads>");

40 
öfûe
 = 
¨gv
[1];

41 
¡hªads
 = 
	`©oi
(
¨gv
[2]);

43 
i
 = 0; i < 
¡hªads
; i++) {

44 
	`Pthªad_¸óã
(&
tid
, 
NULL
, 
myfunc
, NULL);

47 
	`∑u£
();

49 
	`exô
(0);

50 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/test05.c

3 
	~"u≈thªad.h
"

5 
±hªad_key_t
 
	gmy_key
;

8 
	$maö
(
¨gc
, **
¨gv
)

10 *
ùå
;

12 
	`Pthªad_key_¸óã
(&
my_key
, 
NULL
);

13 
	`¥ötf
("fú° key = %d\n", 
my_key
);

15 
	`Pthªad_key_¸óã
(&
my_key
, 
NULL
);

16 
	`¥ötf
("£c⁄d key = %d\n", 
my_key
);

18 
	`Pthªad_key_¸óã
(&
my_key
, 
NULL
);

19 
	`¥ötf
("thúd key = %d\n", 
my_key
);

21 i‡–(
ùå
 = 
	`±hªad_gë•ecific
((
±hªad_key_t
Ë0)Ë=
NULL
)

22 
	`¥ötf
("key 0Öointer is NULL\n");

24 
	`¥ötf
("vÆuêö key 0 = %d\n", *
ùå
);

26 
î∫o
 = 67;

27 i‡–(
ùå
 = 
	`±hªad_gë•ecific
((
±hªad_key_t
Ë0)Ë=
NULL
)

28 
	`¥ötf
("key 0Öointer is NULL\n");

30 
	`¥ötf
("vÆuêö key 0 = %d\n", *
ùå
);

32 
	`exô
(0);

33 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/unpthread.h

4 #i‚def 
__u≈_±hªad_h


5 
	#__u≈_±hªad_h


	)

7 
	~"u≈.h
"

9 
Pthªad_¸óã
(
±hªad_t
 *, c⁄° 
±hªad_©å_t
 *,

11 
Pthªad_joö
(
±hªad_t
, **);

12 
Pthªad_dëach
(
±hªad_t
);

13 
Pthªad_kûl
(
±hªad_t
, );

15 
Pthªad_muãx©å_öô
(
±hªad_muãx©å_t
 *);

16 
Pthªad_muãx©å_£çsh¨ed
(
±hªad_muãx©å_t
 *, );

17 
Pthªad_muãx_öô
(
±hªad_muãx_t
 *, 
±hªad_muãx©å_t
 *);

18 
Pthªad_muãx_lock
(
±hªad_muãx_t
 *);

19 
Pthªad_muãx_u∆ock
(
±hªad_muãx_t
 *);

21 
Pthªad_c⁄d_brﬂdˇ°
(
±hªad_c⁄d_t
 *);

22 
Pthªad_c⁄d_sig«l
(
±hªad_c⁄d_t
 *);

23 
Pthªad_c⁄d_waô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *);

24 
Pthªad_c⁄d_timedwaô
(
±hªad_c⁄d_t
 *, 
±hªad_muãx_t
 *,

25 c⁄° 
time•ec
 *);

27 
Pthªad_key_¸óã
(
±hªad_key_t
 *, (*)(*));

28 
	`Pthªad_£t•ecific
(
±hªad_key_t
, const *);

29 
	`Pthªad_⁄˚
(
±hªad_⁄˚_t
 *, (*)());

	@/media/sf_ddrive/progs/network/unpv13e/threads/web01.c

2 
	~"u≈thªad.h
"

3 
	~<thªad.h
>

5 
	#MAXFILES
 20

	)

6 
	#SERV
 "80"

	)

8 
	sfûe
 {

9 *
	mf_«me
;

10 *
	mf_ho°
;

11 
	mf_fd
;

12 
	mf_Êags
;

13 
±hªad_t
 
	mf_tid
;

14 } 
	gfûe
[
MAXFILES
];

15 
	#F_CONNECTING
 1

	)

16 
	#F_READING
 2

	)

17 
	#F_DONE
 4

	)

19 
	#GET_CMD
 "GET %†HTTP/1.0\r\n\r\n"

	)

21 
	gnc⁄n
, 
	gnfûes
, 
	g∆e·toc⁄n
, 
	g∆e·t‹ód
;

23 *
do_gë_ªad
(*);

24 
home_∑ge
(const *, const *);

25 
wrôe_gë_cmd
(
fûe
 *);

28 
	$maö
(
¨gc
, **
¨gv
)

30 
i
, 
n
, 
maxnc⁄n
;

31 
±hªad_t
 
tid
;

32 
fûe
 *
Âå
;

34 i‡(
¨gc
 < 5)

35 
	`îr_quô
("usage: web <#conns> <IPaddr> <homepage> file1 ...");

36 
maxnc⁄n
 = 
	`©oi
(
¨gv
[1]);

38 
nfûes
 = 
	`mö
(
¨gc
 - 4, 
MAXFILES
);

39 
i
 = 0; i < 
nfûes
; i++) {

40 
fûe
[
i
].
f_«me
 = 
¨gv
[i + 4];

41 
fûe
[
i
].
f_ho°
 = 
¨gv
[2];

42 
fûe
[
i
].
f_Êags
 = 0;

44 
	`¥ötf
("nfûe†%d\n", 
nfûes
);

46 
	`home_∑ge
(
¨gv
[2],árgv[3]);

48 
∆e·t‹ód
 = 
∆e·toc⁄n
 = 
nfûes
;

49 
nc⁄n
 = 0;

52 
∆e·t‹ód
 > 0) {

53 
nc⁄n
 < 
maxnc⁄n
 && 
∆e·toc⁄n
 > 0) {

55 
i
 = 0 ; i < 
nfûes
; i++)

56 i‡(
fûe
[
i
].
f_Êags
 == 0)

58 i‡(
i
 =
nfûes
)

59 
	`îr_quô
("∆e·toc⁄¿%d buànŸhög found", 
∆e·toc⁄n
);

61 
fûe
[
i
].
f_Êags
 = 
F_CONNECTING
;

62 
	`Pthªad_¸óã
(&
tid
, 
NULL
, &
do_gë_ªad
, &
fûe
[
i
]);

63 
fûe
[
i
].
f_tid
 = 
tid
;

64 
nc⁄n
++;

65 
∆e·toc⁄n
--;

68 i‡–(
n
 = 
	`thr_joö
(0, &
tid
, (**Ë&
Âå
)) != 0)

69 
î∫o
 = 
n
, 
	`îr_sys
("thr_joinÉrror");

71 
nc⁄n
--;

72 
∆e·t‹ód
--;

73 
	`¥ötf
("thªad id %d f‹ %†d⁄e\n", 
tid
, 
Âå
->
f_«me
);

76 
	`exô
(0);

77 
	}
}

82 
	$do_gë_ªad
(*
v±r
)

84 
fd
, 
n
;

85 
löe
[
MAXLINE
];

86 
fûe
 *
Âå
;

88 
Âå
 = (
fûe
 *Ë
v±r
;

90 
fd
 = 
	`T˝_c⁄√˘
(
Âå
->
f_ho°
, 
SERV
);

91 
Âå
->
f_fd
 = 
fd
;

92 
	`¥ötf
("do_get_read for %s, fd %d,Åhread %d\n",

93 
Âå
->
f_«me
, 
fd
, f±r->
f_tid
);

95 
	`wrôe_gë_cmd
(
Âå
);

99 i‡–(
n
 = 
	`Ród
(
fd
, 
löe
, 
MAXLINE
)) == 0)

102 
	`¥ötf
("ªad %d byã†‰om %s\n", 
n
, 
Âå
->
f_«me
);

104 
	`¥ötf
("íd-of-fûê⁄ %s\n", 
Âå
->
f_«me
);

105 
	`Clo£
(
fd
);

106 
Âå
->
f_Êags
 = 
F_DONE
;

108 (
Âå
);

109 
	}
}

114 
	$wrôe_gë_cmd
(
fûe
 *
Âå
)

116 
n
;

117 
löe
[
MAXLINE
];

119 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
Âå
->
f_«me
);

120 
	`Wrôí
(
Âå
->
f_fd
, 
löe
, 
n
);

121 
	`¥ötf
("wrŸê%d byã†f‹ %s\n", 
n
, 
Âå
->
f_«me
);

123 
Âå
->
f_Êags
 = 
F_READING
;

124 
	}
}

129 
	$home_∑ge
(c⁄° *
ho°
, c⁄° *
‚ame
)

131 
fd
, 
n
;

132 
löe
[
MAXLINE
];

134 
fd
 = 
	`T˝_c⁄√˘
(
ho°
, 
SERV
);

136 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
‚ame
);

137 
	`Wrôí
(
fd
, 
löe
, 
n
);

140 i‡–(
n
 = 
	`Ród
(
fd
, 
löe
, 
MAXLINE
)) == 0)

143 
	`¥ötf
("ªad %d byã†o‡homê∑ge\n", 
n
);

146 
	`¥ötf
("end-of-file on homeÖage\n");

147 
	`Clo£
(
fd
);

148 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/web02.c

3 
	~"u≈thªad.h
"

4 
	~<thªad.h
>

6 
	#MAXFILES
 20

	)

7 
	#SERV
 "80"

	)

9 
	sfûe
 {

10 *
	mf_«me
;

11 *
	mf_ho°
;

12 
	mf_fd
;

13 
	mf_Êags
;

14 
±hªad_t
 
	mf_tid
;

15 } 
	gfûe
[
MAXFILES
];

16 
	#F_CONNECTING
 1

	)

17 
	#F_READING
 2

	)

18 
	#F_DONE
 4

	)

19 
	#F_JOINED
 8

	)

21 
	gnc⁄n
, 
	gnfûes
, 
	g∆e·toc⁄n
, 
	g∆e·t‹ód
;

22 
	ggë
[] = "GET / HTTP/1.0\r\n\r\n";

24 
	gnd⁄e
;

25 
±hªad_muãx_t
 
	gnd⁄e_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

27 *
do_gë_ªad
(*);

28 
home_∑ge
(const *, const *);

29 
wrôe_gë_cmd
(
fûe
 *);

32 
	$maö
(
¨gc
, **
¨gv
)

34 
i
, 
n
, 
maxnc⁄n
;

35 
±hªad_t
 
tid
;

36 
fûe
 *
Âå
;

38 i‡(
¨gc
 < 5)

39 
	`îr_quô
("usage: web <#conns> <IPaddr> <homepage> file1 ...");

40 
maxnc⁄n
 = 
	`©oi
(
¨gv
[1]);

42 
nfûes
 = 
	`mö
(
¨gc
 - 4, 
MAXFILES
);

43 
i
 = 0; i < 
nfûes
; i++) {

44 
fûe
[
i
].
f_«me
 = 
¨gv
[i + 4];

45 
fûe
[
i
].
f_ho°
 = 
¨gv
[2];

46 
fûe
[
i
].
f_Êags
 = 0;

48 
	`¥ötf
("nfûe†%d\n", 
nfûes
);

50 
	`home_∑ge
(
¨gv
[2],árgv[3]);

52 
∆e·t‹ód
 = 
∆e·toc⁄n
 = 
nfûes
;

53 
nc⁄n
 = 0;

54 
∆e·t‹ód
 > 0) {

56 
nc⁄n
 < 
maxnc⁄n
 && 
∆e·toc⁄n
 > 0) {

58 
i
 = 0 ; i < 
nfûes
; i++)

59 i‡(
fûe
[
i
].
f_Êags
 == 0)

61 i‡(
i
 =
nfûes
)

62 
	`îr_quô
("∆e·toc⁄¿%d buànŸhög found", 
∆e·toc⁄n
);

64 i‡–(
n
 = 
	`±hªad_¸óã
(&
tid
, 
NULL
, &
do_gë_ªad
, &
fûe
[
i
])) != 0)

65 
î∫o
 = 
n
, 
	`îr_sys
("pthread_createÉrror");

66 
	`¥ötf
("¸óãdÅhªad %d\n", 
tid
);

67 
fûe
[
i
].
f_tid
 = 
tid
;

68 
fûe
[
i
].
f_Êags
 = 
F_CONNECTING
;

69 
nc⁄n
++;

70 
∆e·toc⁄n
--;

72 
	`thr_yõld
();

75 i‡–(
n
 = 
	`±hªad_muãx_lock
(&
nd⁄e_muãx
)) != 0)

76 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_lockÉrror");

77 i‡(
nd⁄e
 > 0) {

78 
i
 = 0; i < 
nfûes
; i++) {

79 i‡(
fûe
[
i
].
f_Êags
 & 
F_DONE
) {

80 i‡–(
n
 = 
	`±hªad_joö
(
fûe
[
i
].
f_tid
, (**Ë&
Âå
)) != 0)

81 
î∫o
 = 
n
, 
	`îr_sys
("pthread_joinÉrror");

83 i‡(&
fûe
[
i
] !
Âå
)

84 
	`îr_quô
("file[i] != fptr");

85 
Âå
->
f_Êags
 = 
F_JOINED
;

86 
nd⁄e
--;

87 
nc⁄n
--;

88 
∆e·t‹ód
--;

89 
	`¥ötf
("thread id %d for %s done\n",

90 
fûe
[
i
].
f_tid
, 
Âå
->
f_«me
);

94 i‡–(
n
 = 
	`±hªad_muãx_u∆ock
(&
nd⁄e_muãx
)) != 0)

95 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_unlockÉrror");

98 
	`exô
(0);

99 
	}
}

102 
	$do_gë_ªad
(*
v±r
)

104 
fd
, 
n
;

105 
löe
[
MAXLINE
];

106 
fûe
 *
Âå
;

108 
Âå
 = (
fûe
 *Ë
v±r
;

110 
fd
 = 
	`T˝_c⁄√˘
(
Âå
->
f_ho°
, 
SERV
);

111 
Âå
->
f_fd
 = 
fd
;

112 
	`¥ötf
("do_get_read for %s, fd %d,Åhread %d\n",

113 
Âå
->
f_«me
, 
fd
, f±r->
f_tid
);

115 
	`wrôe_gë_cmd
(
Âå
);

119 i‡–(
n
 = 
	`ªad
(
fd
, 
löe
, 
MAXLINE
)) <= 0) {

120 i‡(
n
 == 0)

123 
	`îr_sys
("readÉrror");

125 
	`¥ötf
("ªad %d byã†‰om %s\n", 
n
, 
Âå
->
f_«me
);

127 
	`¥ötf
("íd-of-fûê⁄ %s\n", 
Âå
->
f_«me
);

128 
	`˛o£
(
fd
);

129 
Âå
->
f_Êags
 = 
F_DONE
;

131 i‡–(
n
 = 
	`±hªad_muãx_lock
(&
nd⁄e_muãx
)) != 0)

132 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_lockÉrror");

133 
nd⁄e
++;

134 i‡–(
n
 = 
	`±hªad_muãx_u∆ock
(&
nd⁄e_muãx
)) != 0)

135 
î∫o
 = 
n
, 
	`îr_sys
("pthread_mutex_unlockÉrror");

137 (
Âå
);

138 
	}
}

141 
	$wrôe_gë_cmd
(
fûe
 *
Âå
)

143 
n
;

144 
löe
[
MAXLINE
];

146 
	`°r˝y
(
löe
, "GET ");

147 
	`°rˇt
(
löe
, 
Âå
->
f_«me
);

148 
	`°rˇt
(
löe
, " HTTP/1.0\r\n\r\n");

149 
n
 = 
	`°æí
(
löe
);

150 i‡(
	`wrôí
(
Âå
->
f_fd
, 
löe
, 
n
) !=Ç)

151 
	`îr_sys
("writenÉrror");

152 
	`¥ötf
("wrŸê%d byã†f‹ %s\n", 
n
, 
Âå
->
f_«me
);

154 
Âå
->
f_Êags
 = 
F_READING
;

155 
	}
}

158 
	$home_∑ge
(c⁄° *
ho°
, c⁄° *
‚ame
)

160 
fd
, 
n
;

161 
löe
[
MAXLINE
];

163 
fd
 = 
	`T˝_c⁄√˘
(
ho°
, 
SERV
);

165 
	`°r˝y
(
löe
, "GET ");

166 
	`°rˇt
(
löe
, 
‚ame
);

167 
	`°rˇt
(
löe
, " HTTP/1.0\r\n\r\n");

168 
n
 = 
	`°æí
(
löe
);

169 i‡(
	`wrôí
(
fd
, 
löe
, 
n
) !=Ç)

170 
	`îr_sys
("writenÉrror");

173 i‡–(
n
 = 
	`ªad
(
fd
, 
löe
, 
MAXLINE
)) <= 0) {

174 i‡(
n
 == 0)

177 
	`îr_sys
("readÉrror");

179 
	`¥ötf
("ªad %d byã†o‡homê∑ge\n", 
n
);

182 
	`¥ötf
("end-of-file on homeÖage\n");

183 
	`˛o£
(
fd
);

184 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/threads/web03.c

1 
	~"u≈thªad.h
"

2 
	~<thªad.h
>

4 
	#MAXFILES
 20

	)

5 
	#SERV
 "80"

	)

7 
	sfûe
 {

8 *
	mf_«me
;

9 *
	mf_ho°
;

10 
	mf_fd
;

11 
	mf_Êags
;

12 
±hªad_t
 
	mf_tid
;

13 } 
	gfûe
[
MAXFILES
];

14 
	#F_CONNECTING
 1

	)

15 
	#F_READING
 2

	)

16 
	#F_DONE
 4

	)

17 
	#F_JOINED
 8

	)

19 
	#GET_CMD
 "GET %†HTTP/1.0\r\n\r\n"

	)

21 
	gnc⁄n
, 
	gnfûes
, 
	g∆e·toc⁄n
, 
	g∆e·t‹ód
;

23 
	gnd⁄e
;

24 
±hªad_muãx_t
 
	gnd⁄e_muãx
 = 
PTHREAD_MUTEX_INITIALIZER
;

25 
±hªad_c⁄d_t
 
	gnd⁄e_c⁄d
 = 
PTHREAD_COND_INITIALIZER
;

27 *
do_gë_ªad
(*);

28 
home_∑ge
(const *, const *);

29 
wrôe_gë_cmd
(
fûe
 *);

32 
	$maö
(
¨gc
, **
¨gv
)

34 
i
, 
maxnc⁄n
;

35 
±hªad_t
 
tid
;

36 
fûe
 *
Âå
;

38 i‡(
¨gc
 < 5)

39 
	`îr_quô
("usage: web <#conns> <IPaddr> <homepage> file1 ...");

40 
maxnc⁄n
 = 
	`©oi
(
¨gv
[1]);

42 
nfûes
 = 
	`mö
(
¨gc
 - 4, 
MAXFILES
);

43 
i
 = 0; i < 
nfûes
; i++) {

44 
fûe
[
i
].
f_«me
 = 
¨gv
[i + 4];

45 
fûe
[
i
].
f_ho°
 = 
¨gv
[2];

46 
fûe
[
i
].
f_Êags
 = 0;

48 
	`¥ötf
("nfûe†%d\n", 
nfûes
);

50 
	`home_∑ge
(
¨gv
[2],árgv[3]);

52 
∆e·t‹ód
 = 
∆e·toc⁄n
 = 
nfûes
;

53 
nc⁄n
 = 0;

55 
∆e·t‹ód
 > 0) {

56 
nc⁄n
 < 
maxnc⁄n
 && 
∆e·toc⁄n
 > 0) {

58 
i
 = 0 ; i < 
nfûes
; i++)

59 i‡(
fûe
[
i
].
f_Êags
 == 0)

61 i‡(
i
 =
nfûes
)

62 
	`îr_quô
("∆e·toc⁄¿%d buànŸhög found", 
∆e·toc⁄n
);

64 
fûe
[
i
].
f_Êags
 = 
F_CONNECTING
;

65 
	`Pthªad_¸óã
(&
tid
, 
NULL
, &
do_gë_ªad
, &
fûe
[
i
]);

66 
fûe
[
i
].
f_tid
 = 
tid
;

67 
nc⁄n
++;

68 
∆e·toc⁄n
--;

72 
	`Pthªad_muãx_lock
(&
nd⁄e_muãx
);

73 
nd⁄e
 == 0)

74 
	`Pthªad_c⁄d_waô
(&
nd⁄e_c⁄d
, &
nd⁄e_muãx
);

76 
i
 = 0; i < 
nfûes
; i++) {

77 i‡(
fûe
[
i
].
f_Êags
 & 
F_DONE
) {

78 
	`Pthªad_joö
(
fûe
[
i
].
f_tid
, (**Ë&
Âå
);

80 i‡(&
fûe
[
i
] !
Âå
)

81 
	`îr_quô
("file[i] != fptr");

82 
Âå
->
f_Êags
 = 
F_JOINED
;

83 
nd⁄e
--;

84 
nc⁄n
--;

85 
∆e·t‹ód
--;

86 
	`¥ötf
("thªad %d f‹ %†d⁄e\n", 
Âå
->
f_tid
, f±r->
f_«me
);

89 
	`Pthªad_muãx_u∆ock
(&
nd⁄e_muãx
);

92 
	`exô
(0);

93 
	}
}

97 
	$do_gë_ªad
(*
v±r
)

99 
fd
, 
n
;

100 
löe
[
MAXLINE
];

101 
fûe
 *
Âå
;

103 
Âå
 = (
fûe
 *Ë
v±r
;

105 
fd
 = 
	`T˝_c⁄√˘
(
Âå
->
f_ho°
, 
SERV
);

106 
Âå
->
f_fd
 = 
fd
;

107 
	`¥ötf
("do_get_read for %s, fd %d,Åhread %d\n",

108 
Âå
->
f_«me
, 
fd
, f±r->
f_tid
);

110 
	`wrôe_gë_cmd
(
Âå
);

114 i‡–(
n
 = 
	`Ród
(
fd
, 
löe
, 
MAXLINE
)) == 0)

117 
	`¥ötf
("ªad %d byã†‰om %s\n", 
n
, 
Âå
->
f_«me
);

119 
	`¥ötf
("íd-of-fûê⁄ %s\n", 
Âå
->
f_«me
);

120 
	`Clo£
(
fd
);

121 
Âå
->
f_Êags
 = 
F_DONE
;

123 
	`Pthªad_muãx_lock
(&
nd⁄e_muãx
);

124 
nd⁄e
++;

125 
	`Pthªad_c⁄d_sig«l
(&
nd⁄e_c⁄d
);

126 
	`Pthªad_muãx_u∆ock
(&
nd⁄e_muãx
);

128 (
Âå
);

129 
	}
}

132 
	$wrôe_gë_cmd
(
fûe
 *
Âå
)

134 
n
;

135 
löe
[
MAXLINE
];

137 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
Âå
->
f_«me
);

138 
	`Wrôí
(
Âå
->
f_fd
, 
löe
, 
n
);

139 
	`¥ötf
("wrŸê%d byã†f‹ %s\n", 
n
, 
Âå
->
f_«me
);

141 
Âå
->
f_Êags
 = 
F_READING
;

142 
	}
}

145 
	$home_∑ge
(c⁄° *
ho°
, c⁄° *
‚ame
)

147 
fd
, 
n
;

148 
löe
[
MAXLINE
];

150 
fd
 = 
	`T˝_c⁄√˘
(
ho°
, 
SERV
);

152 
n
 = 
	`¢¥ötf
(
löe
, ÷öe), 
GET_CMD
, 
‚ame
);

153 
	`Wrôí
(
fd
, 
löe
, 
n
);

156 i‡–(
n
 = 
	`Ród
(
fd
, 
löe
, 
MAXLINE
)) == 0)

159 
	`¥ötf
("ªad %d byã†o‡homê∑ge\n", 
n
);

162 
	`¥ötf
("end-of-file on homeÖage\n");

163 
	`Clo£
(
fd
);

164 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/icmpcode_v4.c

1 
	~"åa˚.h
"

4 
	$icmpcode_v4
(
code
)

6 
îrbuf
[100];

7 
code
) {

24 : 
	`•rötf
(
îrbuf
, "[unknow¿codê%d]", 
code
);

25  
îrbuf
;

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/icmpcode_v6.c

1 
	~"åa˚.h
"

4 
	$icmpcode_v6
(
code
)

6 #ifdef 
IPV6


7 
îrbuf
[100];

8 
code
) {

9 
ICMP6_DST_UNREACH_NOROUTE
:

11 
ICMP6_DST_UNREACH_ADMIN
:

13 
ICMP6_DST_UNREACH_NOTNEIGHBOR
:

15 
ICMP6_DST_UNREACH_ADDR
:

17 
ICMP6_DST_UNREACH_NOPORT
:

20 
	`•rötf
(
îrbuf
, "[unknow¿codê%d]", 
code
);

21  
îrbuf
;

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/main.c

1 
	~"åa˚.h
"

3 
¥Ÿo
 
	g¥Ÿo_v4
 = { 
icmpcode_v4
, 
ªcv_v4
, 
NULL
, NULL, NULL, NULL, 0,

4 
IPPROTO_ICMP
, 
IPPROTO_IP
, 
IP_TTL
 };

6 #ifdef 
IPV6


7 
¥Ÿo
 
	g¥Ÿo_v6
 = { 
icmpcode_v6
, 
ªcv_v6
, 
NULL
, NULL, NULL, NULL, 0,

8 
IPPROTO_ICMPV6
, 
IPPROTO_IPV6
, 
IPV6_UNICAST_HOPS
 };

11 
	gd©Æí
 = (
ªc
);

12 
	gmax_âl
 = 30;

13 
	g≈robes
 = 3;

14 
u_sh‹t
 
	gdp‹t
 = 32768 + 666;

17 
	$maö
(
¨gc
, **
¨gv
)

19 
c
;

20 
addröfo
 *
ai
;

21 *
h
;

23 
›ãº
 = 0;

24  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "m:v")) != -1) {

25 
c
) {

27 i‡–(
max_âl
 = 
	`©oi
(
›èrg
)) <= 1)

28 
	`îr_quô
("invalid -m value");

32 
vîbo£
++;

36 
	`îr_quô
("uƒecognized o±i⁄: %c", 
c
);

40 i‡(
›töd
 !
¨gc
-1)

41 
	`îr_quô
("usage:Åraceroute [ -m <maxttl> -v ] <hostname>");

42 
ho°
 = 
¨gv
[
›töd
];

44 
pid
 = 
	`gëpid
();

45 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

47 
ai
 = 
	`Ho°_£rv
(
ho°
, 
NULL
, 0, 0);

49 
h
 = 
	`Sock_¡›_ho°
(
ai
->
ai_addr
,ái->
ai_addæí
);

50 
	`¥ötf
("tracerouteÅo %s (%s): %d hops max, %d data bytes\n",

51 
ai
->
ai_ˇn⁄«me
 ?ái->ai_ˇn⁄«mê: 
h
,

52 
h
, 
max_âl
, 
d©Æí
);

55 i‡(
ai
->
ai_Ámûy
 =
AF_INET
) {

56 
¥
 = &
¥Ÿo_v4
;

57 #ifdef 
IPV6


58 } i‡(
ai
->
ai_Ámûy
 =
AF_INET6
) {

59 
¥
 = &
¥Ÿo_v6
;

60 i‡(
	`IN6_IS_ADDR_V4MAPPED
(&(((
sockaddr_ö6
 *)
ai
->
ai_addr
)->
sö6_addr
)))

61 
	`îr_quô
("cannotÅraceroute IPv4-mapped IPv6áddress");

64 
	`îr_quô
("unknow¿addªs†Ámûy %d", 
ai
->
ai_Ámûy
);

66 
¥
->
ß£nd
 = 
ai
->
ai_addr
;

67 
¥
->
ßªcv
 = 
	`CÆloc
(1, 
ai
->
ai_addæí
);

68 
¥
->
ßœ°
 = 
	`CÆloc
(1, 
ai
->
ai_addæí
);

69 
¥
->
ßböd
 = 
	`CÆloc
(1, 
ai
->
ai_addæí
);

70 
¥
->
ßÀn
 = 
ai
->
ai_addæí
;

72 
	`åa˚lo›
();

74 
	`exô
(0);

75 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/recv_v4.c

1 
	~"åa˚.h
"

3 
gŸÆ¨m
;

13 
	$ªcv_v4
(
£q
, 
timevÆ
 *
tv
)

15 
hÀn1
, 
hÀn2
, 
icm∂í
, 
ªt
;

16 
sockÀn_t
 
Àn
;

17 
ssize_t
 
n
;

18 
ù
 *ù, *
hù
;

19 
icmp
 *icmp;

20 
udphdr
 *
udp
;

22 
gŸÆ¨m
 = 0;

23 
	`Æ¨m
(3);

25 i‡(
gŸÆ¨m
)

27 
Àn
 = 
¥
->
ßÀn
;

28 
n
 = 
	`ªcv‰om
(
ªcvfd
, 
ªcvbuf
, ‘ecvbuf), 0, 
¥
->
ßªcv
, &
Àn
);

29 i‡(
n
 < 0) {

30 i‡(
î∫o
 =
EINTR
)

33 
	`îr_sys
("recvfromÉrror");

36 
ù
 = (ù *Ë
ªcvbuf
;

37 
hÀn1
 = 
ù
->
ù_hl
 << 2;

39 
icmp
 = (icm∞*Ë(
ªcvbuf
 + 
hÀn1
);

40 i‡–(
icm∂í
 = 
n
 - 
hÀn1
) < 8)

43 i‡(
icmp
->
icmp_ty≥
 =
ICMP_TIMXCEED
 &&

44 
icmp
->
icmp_code
 =
ICMP_TIMXCEED_INTRANS
) {

45 i‡(
icm∂í
 < 8 + (
ù
))

48 
hù
 = (
ù
 *Ë(
ªcvbuf
 + 
hÀn1
 + 8);

49 
hÀn2
 = 
hù
->
ù_hl
 << 2;

50 i‡(
icm∂í
 < 8 + 
hÀn2
 + 4)

53 
udp
 = (
udphdr
 *Ë(
ªcvbuf
 + 
hÀn1
 + 8 + 
hÀn2
);

54 i‡(
hù
->
ù_p
 =
IPPROTO_UDP
 &&

55 
udp
->
uh_•‹t
 =
	`ht⁄s
(
•‹t
) &&

56 
udp
->
uh_dp‹t
 =
	`ht⁄s
(
dp‹t
 + 
£q
)) {

57 
ªt
 = -2;

61 } i‡(
icmp
->
icmp_ty≥
 =
ICMP_UNREACH
) {

62 i‡(
icm∂í
 < 8 + (
ù
))

65 
hù
 = (
ù
 *Ë(
ªcvbuf
 + 
hÀn1
 + 8);

66 
hÀn2
 = 
hù
->
ù_hl
 << 2;

67 i‡(
icm∂í
 < 8 + 
hÀn2
 + 4)

70 
udp
 = (
udphdr
 *Ë(
ªcvbuf
 + 
hÀn1
 + 8 + 
hÀn2
);

71 i‡(
hù
->
ù_p
 =
IPPROTO_UDP
 &&

72 
udp
->
uh_•‹t
 =
	`ht⁄s
(
•‹t
) &&

73 
udp
->
uh_dp‹t
 =
	`ht⁄s
(
dp‹t
 + 
£q
)) {

74 i‡(
icmp
->
icmp_code
 =
ICMP_UNREACH_PORT
)

75 
ªt
 = -1;

77 
ªt
 = 
icmp
->
icmp_code
;

81 i‡(
vîbo£
) {

82 
	`¥ötf
(" (from %s:Åype = %d, code = %d)\n",

83 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

84 
icmp
->
icmp_ty≥
, icmp->
icmp_code
);

88 
	`Æ¨m
(0);

89 
	`Gëtimeofday
(
tv
, 
NULL
);

90 (
ªt
);

91 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/recv_v6.c

1 
	~"åa˚.h
"

3 
gŸÆ¨m
;

13 
	$ªcv_v6
(
£q
, 
timevÆ
 *
tv
)

15 #ifdef 
IPV6


16 
hÀn2
, 
icmp6Àn
, 
ªt
;

17 
ssize_t
 
n
;

18 
sockÀn_t
 
Àn
;

19 
ù6_hdr
 *
hù6
;

20 
icmp6_hdr
 *
icmp6
;

21 
udphdr
 *
udp
;

23 
gŸÆ¨m
 = 0;

24 
	`Æ¨m
(3);

26 i‡(
gŸÆ¨m
)

28 
Àn
 = 
¥
->
ßÀn
;

29 
n
 = 
	`ªcv‰om
(
ªcvfd
, 
ªcvbuf
, ‘ecvbuf), 0, 
¥
->
ßªcv
, &
Àn
);

30 i‡(
n
 < 0) {

31 i‡(
î∫o
 =
EINTR
)

34 
	`îr_sys
("recvfromÉrror");

37 
icmp6
 = (
icmp6_hdr
 *Ë
ªcvbuf
;

38 i‡––
icmp6Àn
 = 
n
 ) < 8)

41 i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_TIME_EXCEEDED
 &&

42 
icmp6
->
icmp6_code
 =
ICMP6_TIME_EXCEED_TRANSIT
) {

43 i‡(
icmp6Àn
 < 8 + (
ù6_hdr
) + 4)

46 
hù6
 = (
ù6_hdr
 *Ë(
ªcvbuf
 + 8);

47 
hÀn2
 = (
ù6_hdr
);

48 
udp
 = (
udphdr
 *Ë(
ªcvbuf
 + 8 + 
hÀn2
);

49 i‡(
hù6
->
ù6_nxt
 =
IPPROTO_UDP
 &&

50 
udp
->
uh_•‹t
 =
	`ht⁄s
(
•‹t
) &&

51 
udp
->
uh_dp‹t
 =
	`ht⁄s
(
dp‹t
 + 
£q
))

52 
ªt
 = -2;

55 } i‡(
icmp6
->
icmp6_ty≥
 =
ICMP6_DST_UNREACH
) {

56 i‡(
icmp6Àn
 < 8 + (
ù6_hdr
) + 4)

59 
hù6
 = (
ù6_hdr
 *Ë(
ªcvbuf
 + 8);

60 
hÀn2
 = (
ù6_hdr
);

61 
udp
 = (
udphdr
 *Ë(
ªcvbuf
 + 8 + 
hÀn2
);

62 i‡(
hù6
->
ù6_nxt
 =
IPPROTO_UDP
 &&

63 
udp
->
uh_•‹t
 =
	`ht⁄s
(
•‹t
) &&

64 
udp
->
uh_dp‹t
 =
	`ht⁄s
(
dp‹t
 + 
£q
)) {

65 i‡(
icmp6
->
icmp6_code
 =
ICMP6_DST_UNREACH_NOPORT
)

66 
ªt
 = -1;

68 
ªt
 = 
icmp6
->
icmp6_code
;

71 } i‡(
vîbo£
) {

72 
	`¥ötf
(" (from %s:Åype = %d, code = %d)\n",

73 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
),

74 
icmp6
->
icmp6_ty≥
, icmp6->
icmp6_code
);

78 
	`Æ¨m
(0);

79 
	`Gëtimeofday
(
tv
, 
NULL
);

80 (
ªt
);

82 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/sig_alrm.c

1 
	~"åa˚.h
"

3 
	ggŸÆ¨m
;

6 
	$sig_Ærm
(
signo
)

8 
gŸÆ¨m
 = 1;

10 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/trace.h

1 
	~"u≈.h
"

2 
	~<√töë/ö_sy°m.h
>

3 
	~<√töë/ù.h
>

4 
	~<√töë/ù_icmp.h
>

5 
	~<√töë/udp.h
>

7 
	#BUFSIZE
 1500

	)

9 
	sªc
 {

10 
u_sh‹t
 
	mªc_£q
;

11 
u_sh‹t
 
	mªc_âl
;

12 
timevÆ
 
	mªc_tv
;

16 
	gªcvbuf
[
BUFSIZE
];

17 
	g£ndbuf
[
BUFSIZE
];

19 
	gd©Æí
;

20 *
	gho°
;

21 
u_sh‹t
 
	g•‹t
, 
	gdp‹t
;

22 
	gn£¡
;

23 
pid_t
 
	gpid
;

24 
	g¥obe
, 
	g≈robes
;

25 
	g£ndfd
, 
	gªcvfd
;

26 
	gâl
, 
	gmax_âl
;

27 
	gvîbo£
;

30 c⁄° *
icmpcode_v4
();

31 c⁄° *
icmpcode_v6
();

32 
ªcv_v4
(, 
timevÆ
 *);

33 
ªcv_v6
(, 
timevÆ
 *);

34 
sig_Ærm
();

35 
åa˚lo›
();

36 
tv_sub
(
timevÆ
 *, timeval *);

38 
	s¥Ÿo
 {

39 c⁄° *(*
	micmpcode
)();

40 (*
	mªcv
)(, 
	mtimevÆ
 *);

41 
sockaddr
 *
	mß£nd
;

42 
sockaddr
 *
	mßªcv
;

43 
sockaddr
 *
	mßœ°
;

44 
sockaddr
 *
	mßböd
;

45 
sockÀn_t
 
	mßÀn
;

46 
	micmµrŸo
;

47 
	mâŒevñ
;

48 
	mâl›äame
;

49 } *
	g¥
;

51 #ifdef 
IPV6


53 
	~<√töë/ù6.h
>

54 
	~<√töë/icmp6.h
>

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/traceloop.c

1 
	~"åa˚.h
"

4 
	$åa˚lo›
()

6 
£q
, 
code
, 
d⁄e
;

7 
πt
;

8 
ªc
 *rec;

9 
timevÆ
 
tvªcv
;

11 
ªcvfd
 = 
	`Sockë
(
¥
->
ß£nd
->
ß_Ámûy
, 
SOCK_RAW
,Ör->
icmµrŸo
);

12 
	`£tuid
(
	`gëuid
());

14 #ifdef 
IPV6


15 i‡(
¥
->
ß£nd
->
ß_Ámûy
 =
AF_INET6
 && 
vîbo£
 == 0) {

16 
icmp6_fûãr
 
myfût
;

17 
	`ICMP6_FILTER_SETBLOCKALL
(&
myfût
);

18 
	`ICMP6_FILTER_SETPASS
(
ICMP6_TIME_EXCEEDED
, &
myfût
);

19 
	`ICMP6_FILTER_SETPASS
(
ICMP6_DST_UNREACH
, &
myfût
);

20 
	`£tsock›t
(
ªcvfd
, 
IPPROTO_IPV6
, 
ICMP6_FILTER
,

21 &
myfût
, (myfilt));

25 
£ndfd
 = 
	`Sockë
(
¥
->
ß£nd
->
ß_Ámûy
, 
SOCK_DGRAM
, 0);

27 
¥
->
ßböd
->
ß_Ámûy
 =Ör->
ß£nd
->sa_family;

28 
•‹t
 = (
	`gëpid
() & 0xffff) | 0x8000;

29 
	`sock_£t_p‹t
(
¥
->
ßböd
,Ör->
ßÀn
, 
	`ht⁄s
(
•‹t
));

30 
	`Böd
(
£ndfd
, 
¥
->
ßböd
,Ör->
ßÀn
);

32 
	`sig_Ærm
(
SIGALRM
);

34 
£q
 = 0;

35 
d⁄e
 = 0;

36 
âl
 = 1;Åé <
max_âl
 && 
d⁄e
 == 0;Åtl++) {

37 
	`Sësock›t
(
£ndfd
, 
¥
->
âŒevñ
,Ör->
âl›äame
, &
âl
, ());

38 
	`bzîo
(
¥
->
ßœ°
,Ör->
ßÀn
);

40 
	`¥ötf
("%2d ", 
âl
);

41 
	`fÊush
(
°dout
);

43 
¥obe
 = 0;Örobê< 
≈robes
;Örobe++) {

44 
ªc
 = (ª¯*Ë
£ndbuf
;

45 
ªc
->
ªc_£q
 = ++
£q
;

46 
ªc
->
ªc_âl
 = 
âl
;

47 
	`Gëtimeofday
(&
ªc
->
ªc_tv
, 
NULL
);

49 
	`sock_£t_p‹t
(
¥
->
ß£nd
,Ör->
ßÀn
, 
	`ht⁄s
(
dp‹t
 + 
£q
));

50 
	`Sídto
(
£ndfd
, 
£ndbuf
, 
d©Æí
, 0, 
¥
->
ß£nd
,Ör->
ßÀn
);

52 i‡–(
code
 = (*
¥
->
ªcv
)(
£q
, &
tvªcv
)) == -3)

53 
	`¥ötf
(" *");

55 
°r
[
NI_MAXHOST
];

57 i‡(
	`sock_cmp_addr
(
¥
->
ßªcv
,Ör->
ßœ°
,Ör->
ßÀn
) != 0) {

58 i‡(
	`gë«meöfo
(
¥
->
ßªcv
,Ör->
ßÀn
, 
°r
, (str),

59 
NULL
, 0, 0) == 0)

60 
	`¥ötf
(" %†(%s)", 
°r
,

61 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
));

63 
	`¥ötf
(" %s",

64 
	`Sock_¡›_ho°
(
¥
->
ßªcv
,Ör->
ßÀn
));

65 
	`mem˝y
(
¥
->
ßœ°
,Ör->
ßªcv
,Ör->
ßÀn
);

67 
	`tv_sub
(&
tvªcv
, &
ªc
->
ªc_tv
);

68 
πt
 = 
tvªcv
.
tv_£c
 * 1000.0 +Åvªcv.
tv_u£c
 / 1000.0;

69 
	`¥ötf
(" %.3‡ms", 
πt
);

71 i‡(
code
 == -1)

72 
d⁄e
++;

73 i‡(
code
 >= 0)

74 
	`¥ötf
(" (ICMP %s)", (*
¥
->
icmpcode
)(
code
));

76 
	`fÊush
(
°dout
);

78 
	`¥ötf
("\n");

80 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/traceroute/tv_sub.c

1 
	~"u≈.h
"

4 
	$tv_sub
(
timevÆ
 *
out
, timevÆ *
ö
)

6 i‡–(
out
->
tv_u£c
 -
ö
->tv_usec) < 0) {

7 --
out
->
tv_£c
;

8 
out
->
tv_u£c
 += 1000000;

10 
out
->
tv_£c
 -
ö
->tv_sec;

11 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/cleanup.c

1 
	~"udpcksum.h
"

5 
	$˛ónup
(
signo
)

7 
pˇp_°©
 
°©
;

9 
	`putc
('\n', 
°dout
);

11 i‡(
vîbo£
) {

12 i‡(
	`pˇp_°©s
(
pd
, &
°©
) < 0)

13 
	`îr_quô
("pˇp_°©s: %s\n", 
	`pˇp_gëîr
(
pd
));

14 
	`¥ötf
("%dÖackë†ª˚ived by fûãr\n", 
°©
.
ps_ªcv
);

15 
	`¥ötf
("%dÖackë†dr›≥d by kî√l\n", 
°©
.
ps_dr›
);

18 
	`exô
(0);

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/main.c

2 
	~"udpcksum.h
"

5 
sockaddr
 *
	gde°
, *
	gloˇl
;

6 
sockaddr_ö
 
	gloˇŒookup
;

7 
sockÀn_t
 
	gde°Àn
, 
	gloˇŒí
;

9 
	gd©Æök
;

10 *
	gdevi˚
;

11 
pˇp_t
 *
	gpd
;

12 
	gøwfd
;

13 
	g¢≠Àn
 = 200;

14 
	gvîbo£
;

15 
	gzîosum
;

17 
ußge
(const *);

20 
	$maö
(
¨gc
, *
¨gv
[])

22 
c
, 
l›t
=0;

23 *
±r
, 
loˇ ame
[1024], *
loˇÕ‹t
;

24 
addröfo
 *
aù
;

28 
›ãº
 = 0;

29  (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "0i:l:v")) != -1) {

30 
c
) {

33 
zîosum
 = 1;

37 
devi˚
 = 
›èrg
;

41 i‡–(
±r
 = 
	`°ºchr
(
›èrg
, '.')Ë=
NULL
)

42 
	`ußge
("invalid -l option");

44 *
±r
++ = 0;

45 
loˇÕ‹t
 = 
±r
;

46 
	`°∫˝y
(
loˇ ame
, 
›èrg
, (localname));

47 
l›t
 = 1;

51 
vîbo£
 = 1;

55 
	`ußge
("unrecognized option");

60 i‡(
›töd
 !
¨gc
-2)

61 
	`ußge
("missing <host>ánd/or <serv>");

64 
aù
 = 
	`Ho°_£rv
(
¨gv
[
›töd
],árgv[›töd+1], 
AF_INET
, 
SOCK_DGRAM
);

65 
de°
 = 
aù
->
ai_addr
;

66 
de°Àn
 = 
aù
->
ai_addæí
;

76 i‡(
l›t
) {

78 
aù
 = 
	`Ho°_£rv
(
loˇ ame
, 
loˇÕ‹t
, 
AF_INET
, 
SOCK_DGRAM
);

79 
loˇl
 = 
aù
->
ai_addr
;

80 
loˇŒí
 = 
aù
->
ai_addæí
;

82 
s
;

83 
s
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

84 
	`C⁄√˘
(
s
, 
de°
, 
de°Àn
);

86 
loˇŒí
 = (
loˇŒookup
);

87 
loˇl
 = (
sockaddr
 *)&
loˇŒookup
;

88 
	`Gësock«me
(
s
, 
loˇl
, &
loˇŒí
);

89 i‡(
loˇŒookup
.
sö_addr
.
s_addr
 =
	`ht⁄l
(
INADDR_ANY
))

90 
	`îr_quô
("Can't determineÜocaláddress - use -l\n");

91 
	`˛o£
(
s
);

94 
	`›í_ouçut
();

96 
	`›í_pˇp
();

98 
	`£tuid
(
	`gëuid
());

100 
	`Sig«l
(
SIGTERM
, 
˛ónup
);

101 
	`Sig«l
(
SIGINT
, 
˛ónup
);

102 
	`Sig«l
(
SIGHUP
, 
˛ónup
);

104 
	`ã°_udp
();

106 
	`˛ónup
(0);

107 
	}
}

111 
	$ußge
(c⁄° *
msg
)

113 
	`îr_msg
(

121 i‡(
msg
[0] != 0)

122 
	`îr_quô
("%s", 
msg
);

123 
	`exô
(1);

124 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/pcap.c

2 
	~"udpcksum.h
"

4 
	#CMD
 "ud∞™d sr¯ho° %†™d sr¯p‹à%d"

	)

7 
	$›í_pˇp
()

9 
uöt32_t
 
loˇ ë
, 
√tmask
;

10 
cmd
[
MAXLINE
], 
îrbuf
[
PCAP_ERRBUF_SIZE
],

11 
°r1
[
INET_ADDRSTRLEN
], 
°r2
[INET_ADDRSTRLEN];

12 
bpf_¥ogøm
 
fcode
;

14 i‡(
devi˚
 =
NULL
) {

15 i‡–(
devi˚
 = 
	`pˇp_lookupdev
(
îrbuf
)Ë=
NULL
)

16 
	`îr_quô
("pˇp_lookup: %s", 
îrbuf
);

18 
	`¥ötf
("devi˚ = %s\n", 
devi˚
);

21 i‡–(
pd
 = 
	`pˇp_›í_live
(
devi˚
, 
¢≠Àn
, 0, 500, 
îrbuf
)Ë=
NULL
)

22 
	`îr_quô
("pˇp_›í_live: %s", 
îrbuf
);

24 i‡(
	`pˇp_looku≤ë
(
devi˚
, &
loˇ ë
, &
√tmask
, 
îrbuf
) < 0)

25 
	`îr_quô
("pˇp_looku≤ë: %s", 
îrbuf
);

26 i‡(
vîbo£
)

27 
	`¥ötf
("localnet = %s,Çetmask = %s\n",

28 
	`I√t_¡›
(
AF_INET
, &
loˇ ë
, 
°r1
, (str1)),

29 
	`I√t_¡›
(
AF_INET
, &
√tmask
, 
°r2
, (str2)));

31 
	`¢¥ötf
(
cmd
, (cmd), 
CMD
,

32 
	`Sock_¡›_ho°
(
de°
, 
de°Àn
),

33 
	`¡ohs
(
	`sock_gë_p‹t
(
de°
, 
de°Àn
)));

34 i‡(
vîbo£
)

35 
	`¥ötf
("cmd = %s\n", 
cmd
);

36 i‡(
	`pˇp_compûe
(
pd
, &
fcode
, 
cmd
, 0, 
√tmask
) < 0)

37 
	`îr_quô
("pˇp_compûe: %s", 
	`pˇp_gëîr
(
pd
));

39 i‡(
	`pˇp_£tfûãr
(
pd
, &
fcode
) < 0)

40 
	`îr_quô
("pˇp_£tfûãr: %s", 
	`pˇp_gëîr
(
pd
));

42 i‡–(
d©Æök
 = 
	`pˇp_d©Æök
(
pd
)) < 0)

43 
	`îr_quô
("pˇp_d©Æök: %s", 
	`pˇp_gëîr
(
pd
));

44 i‡(
vîbo£
)

45 
	`¥ötf
("d©Æök = %d\n", 
d©Æök
);

46 
	}
}

51 
	$√xt_pˇp
(*
Àn
)

53 *
±r
;

54 
pˇp_pkthdr
 
hdr
;

57  (
±r
 = (*Ë
	`pˇp_√xt
(
pd
, &
hdr
)Ë=
NULL
)

60 *
Àn
 = 
hdr
.
ˇ∂í
;

61 (
±r
);

62 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/senddnsquery-libnet.c

1 
	~"udpcksum.h
"

2 
	~<lib√t.h
>

10 
lib√t_t
 *
	gl
;

13 
	$›í_ouçut
()

15 
îrbuf
[
LIBNET_ERRBUF_SIZE
];

18 
l
 = 
	`lib√t_öô
(
LIBNET_RAW4
, 
NULL
, 
îrbuf
);

19 i‡(
l
 =
NULL
) {

20 
	`îr_quô
("C™'àöôülizêlib√t: %s", 
îrbuf
);

22 
	}
}

27 
	$£nd_dns_quîy
()

29 
qbuf
[24], *
±r
;

30 
u_öt16_t
 
⁄e
;

31 
∑ckë_size
 = 
LIBNET_UDP_H
 + 
LIBNET_DNSV4_H
 + 24;

32 
lib√t_±ag_t
 
ù_èg
, 
udp_èg
, 
dns_èg
;

35 
±r
 = 
qbuf
;

36 
	`mem˝y
(
±r
, "\001a\014root-servers\003net\000", 20);

37 
±r
 += 20;

38 
⁄e
 = 
	`ht⁄s
(1);

39 
	`mem˝y
(
±r
, &
⁄e
, 2);

40 
±r
 += 2;

41 
	`mem˝y
(
±r
, &
⁄e
, 2);

44 
dns_èg
 = 
	`lib√t_buûd_dnsv4
(

49 
qbuf
 , 24 , 
l
, 
dns_èg
);

51 
udp_èg
 = 
	`lib√t_buûd_udp
(

52 ((
sockaddr_ö
 *Ë
loˇl
)->
sö_p‹t
 ,

53 ((
sockaddr_ö
 *Ë
de°
)->
sö_p‹t
 ,

54 
∑ckë_size
 , 0 ,

55 
NULL
 , 0 , 
l
, 
udp_èg
);

58 i‡(
zîosum
)

59 i‡(
	`lib√t_toggÀ_checksum
(
l
, 
udp_èg
, 
LIBNET_OFF
) < 0)

60 
	`îr_quô
("tu∫ög of‡checksums: %s\n", 
	`lib√t_gëîr‹
(
l
));

63 
ù_èg
 = 
	`lib√t_buûd_ùv4
(
∑ckë_size
 + 
LIBNET_IPV4_H
 ,

65 
TTL_OUT
 , 
IPPROTO_UDP
 ,

67 ((
sockaddr_ö
 *Ë
loˇl
)->
sö_addr
.
s_addr
 ,

68 ((
sockaddr_ö
 *Ë
de°
)->
sö_addr
.
s_addr
 ,

69 
NULL
 , 0 , 
l
, 
ù_èg
);

72 i‡(
	`lib√t_wrôe
(
l
) < 0) {

73 
	`îr_quô
("lib√t_wrôe: %s\n", 
	`lib√t_gëîr‹
(
l
));

75 i‡(
vîbo£
)

76 
	`¥ötf
("£¡: %d byã†o‡d©a\n", 
∑ckë_size
);

77 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/senddnsquery-raw.c

1 
	~"udpcksum.h
"

10 
	$£nd_dns_quîy
()

12 
size_t
 
nbyãs
;

13 *
buf
, *
±r
;

15 
buf
 = 
	`MÆloc
((
udpùhdr
) + 100);

16 
±r
 = 
buf
 + (
udpùhdr
);

18 *((
uöt16_t
 *Ë
±r
Ë
	`ht⁄s
(1234);

19 
±r
 += 2;

20 *((
uöt16_t
 *Ë
±r
Ë
	`ht⁄s
(0x0100);

21 
±r
 += 2;

22 *((
uöt16_t
 *Ë
±r
Ë
	`ht⁄s
(1);

23 
±r
 += 2;

24 *((
uöt16_t
 *Ë
±r
) = 0;

25 
±r
 += 2;

26 *((
uöt16_t
 *Ë
±r
) = 0;

27 
±r
 += 2;

28 *((
uöt16_t
 *Ë
±r
) = 0;

29 
±r
 += 2;

31 
	`mem˝y
(
±r
, "\001a\014root-servers\003net\000", 20);

32 
±r
 += 20;

33 *((
uöt16_t
 *Ë
±r
Ë
	`ht⁄s
(1);

34 
±r
 += 2;

35 *((
uöt16_t
 *Ë
±r
Ë
	`ht⁄s
(1);

36 
±r
 += 2;

38 
nbyãs
 = (
±r
 - 
buf
Ë- (
udpùhdr
);

39 
	`udp_wrôe
(
buf
, 
nbyãs
);

40 i‡(
vîbo£
)

41 
	`¥ötf
("£¡: %d byã†o‡d©a\n", 
nbyãs
);

42 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpcksum.c

2 
	~"udpcksum.h
"

3 
	~<£tjmp.h
>

5 
sigjmp_buf
 
	gjmpbuf
;

6 
	gˇnjump
;

9 
	$sig_Ærm
(
signo
)

11 i‡(
ˇnjump
 == 0)

13 
	`sigl⁄gjmp
(
jmpbuf
, 1);

14 
	}
}

19 
	$ã°_udp
()

21 vﬁ©ûê
n£¡
 = 0, 
timeout
 = 3;

22 
udpùhdr
 *
ui
;

24 
	`Sig«l
(
SIGALRM
, 
sig_Ærm
);

26 i‡(
	`sig£tjmp
(
jmpbuf
, 1)) {

27 i‡(
n£¡
 >= 3)

28 
	`îr_quô
("noÑesponse");

29 
	`¥ötf
("timeout\n");

30 
timeout
 *= 2;

32 
ˇnjump
 = 1;

34 
	`£nd_dns_quîy
();

35 
n£¡
++;

37 
	`Æ¨m
(
timeout
);

38 
ui
 = 
	`udp_ªad
();

39 
ˇnjump
 = 0;

40 
	`Æ¨m
(0);

42 i‡(
ui
->
ui_sum
 == 0)

43 
	`¥ötf
("UDP checksums off\n");

45 
	`¥ötf
("UDP checksums on\n");

46 i‡(
vîbo£
)

47 
	`¥ötf
("ª˚ived UDP checksum = %x\n", 
	`¡ohs
(
ui
->
ui_sum
));

48 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpcksum.h

1 
	~"u≈.h
"

2 
	~<pˇp.h
>

4 
	~<√töë/ö_sy°m.h
>

5 
	~<√töë/ö.h
>

6 
	~<√töë/ù.h
>

7 
	~<√töë/ù_v¨.h
>

8 
	~<√töë/udp.h
>

9 
	~<√töë/udp_v¨.h
>

10 
	~<√t/if.h
>

11 
	~<√töë/if_ëhî.h
>

13 
	#TTL_OUT
 64

	)

16 
sockaddr
 *
de°
, *
loˇl
;

17 
sockÀn_t
 
de°Àn
, 
loˇŒí
;

18 
d©Æök
;

19 *
devi˚
;

20 
pˇp_t
 *
pd
;

21 
øwfd
;

22 
¢≠Àn
;

23 
vîbo£
;

24 
zîosum
;

27 
˛ónup
();

28 *
√xt_pˇp
(*);

29 
›í_ouçut
();

30 
›í_pˇp
();

31 
£nd_dns_quîy
();

32 
ã°_udp
();

33 
udp_wrôe
(*, );

34 
udpùhdr
 *
udp_ªad
();

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpread.c

1 
	~"udpcksum.h
"

3 
udpùhdr
 *
udp_check
(*, );

11 
udpùhdr
 *

12 
	$udp_ªad
()

14 
Àn
;

15 *
±r
;

16 
ëhî_hódî
 *
ïå
;

19 
±r
 = 
	`√xt_pˇp
(&
Àn
);

21 
d©Æök
) {

22 
DLT_NULL
:

23 (
	`udp_check
(
±r
+4, 
Àn
-4));

25 
DLT_EN10MB
:

26 
ïå
 = (
ëhî_hódî
 *Ë
±r
;

27 i‡(
	`¡ohs
(
ïå
->
ëhî_ty≥
Ë!
ETHERTYPE_IP
)

28 
	`îr_quô
("Ethî√àty≥ %xÇŸ IP", 
	`¡ohs
(
ïå
->
ëhî_ty≥
));

29 (
	`udp_check
(
±r
+14, 
Àn
-14));

31 
DLT_SLIP
:

32 (
	`udp_check
(
±r
+24, 
Àn
-24));

34 
DLT_PPP
:

35 (
	`udp_check
(
±r
+24, 
Àn
-24));

38 
	`îr_quô
("unsuµ‹ãd d©Æök (%d)", 
d©Æök
);

41 
	}
}

52 
udpùhdr
 *

53 
	$udp_check
(*
±r
, 
Àn
)

55 
hÀn
;

56 
ù
 *ip;

57 
udpùhdr
 *
ui
;

60 i‡(
Àn
 < (
ù
Ë+ (
udphdr
))

61 
	`îr_quô
("À¿%d", 
Àn
);

65 
ù
 = (ù *Ë
±r
;

66 i‡(
ù
->
ù_v
 !
IPVERSION
)

67 
	`îr_quô
("ù_v = %d", 
ù
->
ù_v
);

68 
hÀn
 = 
ù
->
ù_hl
 << 2;

70 i‡(
hÀn
 < (
ù
))

71 
	`îr_quô
("ù_h»%d", 
ù
->
ù_hl
);

72 i‡(
Àn
 < 
hÀn
 + (
udphdr
))

73 
	`îr_quô
("À¿%d, hÀ¿%d", 
Àn
, 
hÀn
);

76 i‡–(
ù
->
ù_sum
 = 
	`ö_cksum
((
uöt16_t
 *Ëù, 
hÀn
)) != 0)

77 
	`îr_quô
("ip checksumÉrror");

79 i‡(
ù
->
ù_p
 =
IPPROTO_UDP
) {

80 
ui
 = (
udpùhdr
 *Ë
ù
;

81 (
ui
);

83 
	`îr_quô
("notá UDPÖacket");

84 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpwrite.c

1 
	~"udpcksum.h
"

4 
	gøwfd
;

7 
	$›í_ouçut
()

9 
⁄
=1;

16 
øwfd
 = 
	`Sockë
(
de°
->
ß_Ámûy
, 
SOCK_RAW
, 0);

18 
	`Sësock›t
(
øwfd
, 
IPPROTO_IP
, 
IP_HDRINCL
, &
⁄
, (on));

19 
	}
}

29 
	$udp_wrôe
(*
buf
, 
u£æí
)

31 
udpùhdr
 *
ui
;

32 
ù
 *ip;

35 
ù
 = (ù *Ë
buf
;

36 
ui
 = (
udpùhdr
 *Ë
buf
;

37 
	`bzîo
(
ui
, (*ui));

39 
ui
->
ui_Àn
 = 
	`ht⁄s
((
uöt16_t
Ë((
udphdr
Ë+ 
u£æí
));

41 
u£æí
 +(
udpùhdr
);

43 
ui
->
ui_¥
 = 
IPPROTO_UDP
;

44 
ui
->
ui_§c
.
s_addr
 = ((
sockaddr_ö
 *Ë
loˇl
)->
sö_addr
.s_addr;

45 
ui
->
ui_d°
.
s_addr
 = ((
sockaddr_ö
 *Ë
de°
)->
sö_addr
.s_addr;

46 
ui
->
ui_•‹t
 = ((
sockaddr_ö
 *Ë
loˇl
)->
sö_p‹t
;

47 
ui
->
ui_dp‹t
 = ((
sockaddr_ö
 *Ë
de°
)->
sö_p‹t
;

48 
ui
->
ui_uÀn
 = ui->
ui_Àn
;

49 i‡(
zîosum
 == 0) {

51 i‡–(
ui
->
ui_sum
 = 
	`ö_cksum
((
u_öt16_t
 *Ëui, 
u£æí
)) == 0)

52 
ui
->
ui_sum
 = 0xffff;

54 
ui
->
ui_sum
 = ui->
ui_Àn
;

60 
ù
->
ù_v
 = 
IPVERSION
;

61 
ù
->
ù_hl
 = (ip) >> 2;

62 
ù
->
ù_tos
 = 0;

63 #i‡
	`deföed
(
löux
Ë|| deföed(
__O≥nBSD__
)

64 
ù
->
ù_Àn
 = 
	`ht⁄s
(
u£æí
);

66 
ù
->
ù_Àn
 = 
u£æí
;

68 
ù
->
ù_id
 = 0;

69 
ù
->
ù_off
 = 0;

70 
ù
->
ù_âl
 = 
TTL_OUT
;

72 
	`Sídto
(
øwfd
, 
buf
, 
u£æí
, 0, 
de°
, 
de°Àn
);

73 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliaddr.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr
 *
¥ïly_addr
;

11 
¥ïly_addr
 = 
	`MÆloc
(
£rvÀn
);

13 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

17 
Àn
 = 
£rvÀn
;

18 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
¥ïly_addr
, &
Àn
);

19 i‡(
Àn
 !
£rvÀn
 || 
	`memcmp
(
p£rvaddr
, 
¥ïly_addr
,Üen) != 0) {

20 
	`¥ötf
("reply from %s (ignored)\n",

21 
	`Sock_¡›
(
¥ïly_addr
, 
Àn
));

25 
ªcvlöe
[
n
] = 0;

26 
	`Fputs
(
ªcvlöe
, 
°dout
);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgclibig.c

1 
	~"u≈.h
"

3 #unde‡
MAXLINE


4 
	#MAXLINE
 65507

	)

7 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

9 
size
;

10 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

11 
ssize_t
 
n
;

13 
size
 = 70000;

14 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
size
, (size));

15 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
size
, (size));

17 
	`Sídto
(
sockfd
, 
£ndlöe
, 
MAXLINE
, 0, 
p£rvaddr
, 
£rvÀn
);

19 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, 
NULL
, NULL);

21 
	`¥ötf
("ª˚ived %d byãs\n", 
n
);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliconnect.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

9 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë
p£rvaddr
, 
£rvÀn
);

11 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

13 
	`Wrôe
(
sockfd
, 
£ndlöe
, 
	`°æí
(sendline));

15 
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
);

17 
ªcvlöe
[
n
] = 0;

18 
	`Fputs
(
ªcvlöe
, 
°dout
);

20 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliinetaddr.c

1 
	~"u≈.h
"

4 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

6 
n
;

7 
£ndlöe
[
MAXLINE
], 
ªcvlöe
[MAXLINE + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr_ö
 *
ª∂yaddr
;

11 
ª∂yaddr
 = 
	`MÆloc
(
£rvÀn
);

13 
	`Fgës
(
£ndlöe
, 
MAXLINE
, 
Â
Ë!
NULL
) {

15 
	`Sídto
(
sockfd
, 
£ndlöe
, 
	`°æí
(£ndlöe), 0, 
p£rvaddr
, 
£rvÀn
);

17 
Àn
 = 
£rvÀn
;

18 
n
 = 
	`Recv‰om
(
sockfd
, 
ªcvlöe
, 
MAXLINE
, 0, (
SA
 *Ë
ª∂yaddr
, &
Àn
);

19 
	`¥ötf
("receivedÑeply from %s,Öort %d\n",

20 
	`öë_¡ﬂ
(
ª∂yaddr
->
sö_addr
), 
	`ht⁄s
‘ïlyaddr->
sö_p‹t
));

22 
ªcvlöe
[
n
] = 0;

23 
	`Fputs
(
ªcvlöe
, 
°dout
);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliloop1.c

1 
	~"u≈.h
"

3 
	#NDG
 2000

	)

4 
	#DGLEN
 1400

	)

7 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

9 
i
;

10 
£ndlöe
[
DGLEN
];

12 
i
 = 0; i < 
NDG
; i++) {

13 
	`Sídto
(
sockfd
, 
£ndlöe
, 
DGLEN
, 0, 
p£rvaddr
, 
£rvÀn
);

15 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliloop3.c

1 
	~"u≈.h
"

6 
	#NDG
 2000

	)

7 
	#DGLEN
 65507

	)

10 
	$dg_˛i
(
FILE
 *
Â
, 
sockfd
, c⁄° 
SA
 *
p£rvaddr
, 
sockÀn_t
 
£rvÀn
)

12 
i
, 
n
;

13 
£ndlöe
[
DGLEN
];

15 
n
 = 100 * 1024;

16 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_SNDBUF
, &
n
, (n));

18 
i
 = 0; i < 
NDG
; i++) {

19 
	`Sídto
(
sockfd
, 
£ndlöe
, 
DGLEN
, 0, 
p£rvaddr
, 
£rvÀn
);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgecholoop1.c

1 
	~"u≈.h
"

3 
ªcv‰om_öt
();

4 
	gcou¡
;

7 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

9 
sockÀn_t
 
Àn
;

10 
mesg
[
MAXLINE
];

12 
	`Sig«l
(
SIGINT
, 
ªcv‰om_öt
);

15 
Àn
 = 
˛ûí
;

16 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
p˛üddr
, &
Àn
);

18 
cou¡
++;

20 
	}
}

23 
	$ªcv‰om_öt
(
signo
)

25 
	`¥ötf
("\ƒe˚ived %d d©agøms\n", 
cou¡
);

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgecholoop2.c

1 
	~"u≈.h
"

3 
ªcv‰om_öt
();

4 
	gcou¡
;

7 
	$dg_echo
(
sockfd
, 
SA
 *
p˛üddr
, 
sockÀn_t
 
˛ûí
)

9 
n
;

10 
sockÀn_t
 
Àn
;

11 
mesg
[
MAXLINE
];

13 
	`Sig«l
(
SIGINT
, 
ªcv‰om_öt
);

15 
n
 = 220 * 1024;

16 
	`Sësock›t
(
sockfd
, 
SOL_SOCKET
, 
SO_RCVBUF
, &
n
, (n));

19 
Àn
 = 
˛ûí
;

20 
	`Recv‰om
(
sockfd
, 
mesg
, 
MAXLINE
, 0, 
p˛üddr
, &
Àn
);

22 
cou¡
++;

24 
	}
}

27 
	$ªcv‰om_öt
(
signo
)

29 
	`¥ötf
("\ƒe˚ived %d d©agøms\n", 
cou¡
);

30 
	`exô
(0);

31 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/sigchldwaitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0)

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

12 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 #ifdef 
HAVE_SOCKADDR_SA_LEN


14 
£rvaddr
.
sö_Àn
 = (servaddr);

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

22 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

24 
	`exô
(0);

25 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli03.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(7);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli04.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli05.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`bzîo
(&
˛üddr
, (cliaddr));

20 
˛üddr
.
sö_Ámûy
 = 
AF_INET
;

21 
˛üddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

22 
˛üddr
.
sö_p‹t
 = 
	`ht⁄s
(0);

23 
	`Böd
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

25 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

27 
	`exô
(0);

28 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli08.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
;

9 i‡(
¨gc
 != 2)

10 
	`îr_quô
("usage: udpcli <IPaddress>");

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(9);

15 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

17 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

19 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`exô
(0);

22 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli09.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
Àn
;

8 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage: udpcli <IPaddress>");

13 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

17 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

18 
	`I√t_±⁄
(
AF_INET
, 
¨gv
[1], &
£rvaddr
.
sö_addr
);

20 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

22 
Àn
 = (
˛üddr
);

23 
	`Gësock«me
(
sockfd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

24 
	`¥ötf
("loˇ»addªs†%s\n", 
	`Sock_¡›
((
SA
 *Ë&
˛üddr
, 
Àn
));

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli10.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
ßÀn
;

8 
sockaddr
 *
ß
;

10 i‡(
¨gc
 != 3)

11 
	`îr_quô
("usage: udpcli02 <hostname> <service>");

13 
sockfd
 = 
	`Udp_˛õ¡
(
¨gv
[1],árgv[2], (**Ë&
ß
, &
ßÀn
);

15 
	`dg_˛i
(
°dö
, 
sockfd
, 
ß
, 
ßÀn
);

17 
	`exô
(0);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv06.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv07.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_ö
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

13 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

14 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpservselect01.c

2 
	~"u≈.h
"

5 
	$maö
(
¨gc
, **
¨gv
)

7 
li°ífd
, 
c⁄nfd
, 
udpfd
, 
ƒódy
, 
maxfdp1
;

8 
mesg
[
MAXLINE
];

9 
pid_t
 
chûdpid
;

10 
fd_£t
 
r£t
;

11 
ssize_t
 
n
;

12 
sockÀn_t
 
Àn
;

13 c⁄° 
⁄
 = 1;

14 
sockaddr_ö
 
˛üddr
, 
£rvaddr
;

15 
	`sig_chld
();

18 
li°ífd
 = 
	`Sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

20 
	`bzîo
(&
£rvaddr
, (servaddr));

21 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

22 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

23 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

25 
	`Sësock›t
(
li°ífd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
, (on));

26 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

28 
	`Li°í
(
li°ífd
, 
LISTENQ
);

31 
udpfd
 = 
	`Sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

33 
	`bzîo
(&
£rvaddr
, (servaddr));

34 
£rvaddr
.
sö_Ámûy
 = 
AF_INET
;

35 
£rvaddr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_ANY
);

36 
£rvaddr
.
sö_p‹t
 = 
	`ht⁄s
(
SERV_PORT
);

38 
	`Böd
(
udpfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

42 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

44 
	`FD_ZERO
(&
r£t
);

45 
maxfdp1
 = 
	`max
(
li°ífd
, 
udpfd
) + 1;

47 
	`FD_SET
(
li°ífd
, &
r£t
);

48 
	`FD_SET
(
udpfd
, &
r£t
);

49 i‡–(
ƒódy
 = 
	`£À˘
(
maxfdp1
, &
r£t
, 
NULL
, NULL, NULL)) < 0) {

50 i‡(
î∫o
 =
EINTR
)

53 
	`îr_sys
("selectÉrror");

56 i‡(
	`FD_ISSET
(
li°ífd
, &
r£t
)) {

57 
Àn
 = (
˛üddr
);

58 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
Àn
);

60 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

61 
	`Clo£
(
li°ífd
);

62 
	`°r_echo
(
c⁄nfd
);

63 
	`exô
(0);

65 
	`Clo£
(
c⁄nfd
);

68 i‡(
	`FD_ISSET
(
udpfd
, &
r£t
)) {

69 
Àn
 = (
˛üddr
);

70 
n
 = 
	`Recv‰om
(
udpfd
, 
mesg
, 
MAXLINE
, 0, (
SA
 *Ë&
˛üddr
, &
Àn
);

72 
	`Sídto
(
udpfd
, 
mesg
, 
n
, 0, (
SA
 *Ë&
˛üddr
, 
Àn
);

75 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/daytimetcpcli.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
, 
n
;

7 
ªcvlöe
[
MAXLINE
 + 1];

8 
sockÀn_t
 
Àn
;

9 
sockaddr
 *
ß
;

11 i‡(
¨gc
 != 3)

12 
	`îr_quô
("usage: daytimetcpcli <hostname/IPaddress> <service/port#>");

14 
sockfd
 = 
	`T˝_c⁄√˘
(
¨gv
[1],árgv[2]);

16 
ß
 = 
	`MÆloc
((
sockaddr_°‹age
));

17 
Àn
 = (
sockaddr_°‹age
);

18 
	`Gë≥î«me
(
sockfd
, 
ß
, &
Àn
);

19 
	`¥ötf
("c⁄√˘edÅÿ%s\n", 
	`Sock_¡›_ho°
(
ß
, 
Àn
));

20 
	`¶ìp
(5);

22  (
n
 = 
	`Ród
(
sockfd
, 
ªcvlöe
, 
MAXLINE
)) > 0) {

23 
ªcvlöe
[
n
] = 0;

24 
	`¥ötf
("%d byãs: %s", 
n
, 
ªcvlöe
);

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/daytimetcpsrv2.c

1 
	~"u≈.h
"

2 
	~<time.h
>

5 
	$maö
(
¨gc
, **
¨gv
)

7 
i
, 
li°ífd
, 
c⁄nfd
;

8 
sockÀn_t
 
addæí
, 
Àn
;

9 
sockaddr
 *
˛üddr
;

10 
buff
[
MAXLINE
];

11 
time_t
 
ticks
;

13 i‡(
¨gc
 == 2)

14 
li°ífd
 = 
	`T˝_li°í
(
NULL
, 
¨gv
[1], &
addæí
);

15 i‡(
¨gc
 == 3)

16 
li°ífd
 = 
	`T˝_li°í
(
¨gv
[1],árgv[2], &
addæí
);

18 
	`îr_quô
("usage: daytimetcpsrv2 [ <host> ] <service orÖort>");

20 
˛üddr
 = 
	`MÆloc
(
addæí
);

23 
Àn
 = 
addæí
;

24 
c⁄nfd
 = 
	`Ac˚±
(
li°ífd
, 
˛üddr
, &
Àn
);

25 
	`¥ötf
("c⁄√˘i⁄ from %s\n", 
	`Sock_¡›
(
˛üddr
, 
Àn
));

27 
ticks
 = 
	`time
(
NULL
);

28 
	`¢¥ötf
(
buff
, (buff), "%.24s\r\n", 
	`˘ime
(&
ticks
));

29 
i
 = 0; i < 
	`°æí
(
buff
); i++)

30 
	`Síd
(
c⁄nfd
, &
buff
[
i
], 1, 
MSG_EOR
);

32 
	`Clo£
(
c⁄nfd
);

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/mycat.c

1 
	~"u≈.h
"

3 
my_›í
(const *, );

6 
	$maö
(
¨gc
, **
¨gv
)

8 
fd
, 
n
;

9 
buff
[
BUFFSIZE
];

11 i‡(
¨gc
 != 2)

12 
	`îr_quô
("usage: mycat <pathname>");

14 i‡–(
fd
 = 
	`my_›í
(
¨gv
[1], 
O_RDONLY
)) < 0)

15 
	`îr_sys
("ˇ¬Ÿ o≥¿%s", 
¨gv
[1]);

17  (
n
 = 
	`Ród
(
fd
, 
buff
, 
BUFFSIZE
)) > 0)

18 
	`Wrôe
(
STDOUT_FILENO
, 
buff
, 
n
);

20 
	`exô
(0);

21 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/myopen.c

1 
	~"u≈.h
"

4 
	$my_›í
(c⁄° *
∑th«me
, 
mode
)

6 
fd
, 
sockfd
[2], 
°©us
;

7 
pid_t
 
chûdpid
;

8 
c
, 
¨gsockfd
[10], 
¨gmode
[10];

10 
	`Sockë∑ú
(
AF_LOCAL
, 
SOCK_STREAM
, 0, 
sockfd
);

12 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

13 
	`Clo£
(
sockfd
[0]);

14 
	`¢¥ötf
(
¨gsockfd
, ◊rgsockfd), "%d", 
sockfd
[1]);

15 
	`¢¥ötf
(
¨gmode
, ◊rgmode), "%d", 
mode
);

16 
	`exe˛
("./›ífûe", "›ífûe", 
¨gsockfd
, 
∑th«me
, 
¨gmode
,

17 (*Ë
NULL
);

18 
	`îr_sys
("execlÉrror");

22 
	`Clo£
(
sockfd
[1]);

24 
	`Waôpid
(
chûdpid
, &
°©us
, 0);

25 i‡(
	`WIFEXITED
(
°©us
) == 0)

26 
	`îr_quô
("child didÇotÅerminate");

27 i‡–(
°©us
 = 
	`WEXITSTATUS
(status)) == 0)

28 
	`Ród_fd
(
sockfd
[0], &
c
, 1, &
fd
);

30 
î∫o
 = 
°©us
;

31 
fd
 = -1;

34 
	`Clo£
(
sockfd
[0]);

35 (
fd
);

36 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/openfile.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
fd
;

8 i‡(
¨gc
 != 4)

9 
	`îr_quô
("openfile <sockfd#> <filename> <mode>");

11 i‡–(
fd
 = 
	`›í
(
¨gv
[2], 
	`©oi
(argv[3]))) < 0)

12 
	`exô
–(
î∫o
 > 0) ?Érrno : 255 );

14 i‡(
	`wrôe_fd
(
	`©oi
(
¨gv
[1]), "", 1, 
fd
) < 0)

15 
	`exô
–(
î∫o
 > 0) ?Érrno : 255 );

17 
	`exô
(0);

18 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/readcred.c

1 
	~"u≈.h
"

3 
	#CONTROL_LEN
 ((
cmsghdr
Ë+ (
cmsg¸ed
))

	)

5 
ssize_t


6 
	$ªad_¸ed
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
cmsg¸ed
 *
cmsg¸ed±r
)

8 
msghdr
 
msg
;

9 
iovec
 
iov
[1];

10 
c⁄åﬁ
[
CONTROL_LEN
];

11 
n
;

13 
msg
.
msg_«me
 = 
NULL
;

14 
msg
.
msg_«mñí
 = 0;

15 
iov
[0].
iov_ba£
 = 
±r
;

16 
iov
[0].
iov_Àn
 = 
nbyãs
;

17 
msg
.
msg_iov
 = 
iov
;

18 
msg
.
msg_iovÀn
 = 1;

19 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ
;

20 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ
);

21 
msg
.
msg_Êags
 = 0;

23 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0)

24 (
n
);

26 
cmsg¸ed±r
->
cm¸ed_ngroups
 = 0;

27 i‡(
cmsg¸ed±r
 && 
msg
.
msg_c⁄åﬁÀn
 > 0) {

28 
cmsghdr
 *
cm±r
 = (cmsghd∏*Ë
c⁄åﬁ
;

30 i‡(
cm±r
->
cmsg_Àn
 < 
CONTROL_LEN
)

31 
	`îr_quô
("c⁄åﬁÜígth = %d", 
cm±r
->
cmsg_Àn
);

32 i‡(
cm±r
->
cmsg_Àvñ
 !
SOL_SOCKET
)

33 
	`îr_quô
("controlÜevel != SOL_SOCKET");

34 i‡(
cm±r
->
cmsg_ty≥
 !
SCM_CREDS
)

35 
	`îr_quô
("controlÅype != SCM_CREDS");

36 
	`mem˝y
(
cmsg¸ed±r
, 
	`CMSG_DATA
(
cm±r
), (
cmsg¸ed
));

39 (
n
);

40 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/sigchldwaitpid.c

1 
	~"u≈.h
"

4 
	$sig_chld
(
signo
)

6 
pid_t
 
pid
;

7 
°©
;

9  (
pid
 = 
	`waôpid
(-1, &
°©
, 
WNOHANG
)) > 0) {

10 
	`¥ötf
("chûd %dÅîmö©ed\n", 
pid
);

13 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/strecho.c

1 
	~"u≈.h
"

3 
ssize_t
 
ªad_¸ed
(, *, 
size_t
, 
cmsg¸ed
 *);

6 
	$°r_echo
(
sockfd
)

8 
ssize_t
 
n
;

9 
i
;

10 
buf
[
MAXLINE
];

11 
cmsg¸ed
 
¸ed
;

13 
agaö
:

14  (
n
 = 
	`ªad_¸ed
(
sockfd
, 
buf
, 
MAXLINE
, &
¸ed
)) > 0) {

15 i‡(
¸ed
.
cm¸ed_ngroups
 == 0) {

16 
	`¥ötf
("(no credentialsÑeturned)\n");

18 
	`¥ötf
("PID o‡£ndî = %d\n", 
¸ed
.
cm¸ed_pid
);

19 
	`¥ötf
("ªÆ u£∏ID = %d\n", 
¸ed
.
cm¸ed_uid
);

20 
	`¥ötf
("ªÆ grou∞ID = %d\n", 
¸ed
.
cm¸ed_gid
);

21 
	`¥ötf
("ef„˘ivêu£∏ID = %d\n", 
¸ed
.
cm¸ed_euid
);

22 
	`¥ötf
("%d groups:", 
¸ed
.
cm¸ed_ngroups
 - 1);

23 
i
 = 1; i < 
¸ed
.
cm¸ed_ngroups
; i++)

24 
	`¥ötf
(" %d", 
¸ed
.
cm¸ed_groups
[
i
]);

25 
	`¥ötf
("\n");

27 
	`Wrôí
(
sockfd
, 
buf
, 
n
);

30 i‡(
n
 < 0 && 
î∫o
 =
EINTR
)

31 
agaö
;

32 i‡(
n
 < 0)

33 
	`îr_sys
("str_echo:ÑeadÉrror");

34 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/testfcred.c

1 
	~"u≈.h
"

2 
	~<sys/∑øm.h
>

3 
	~<sys/u¸ed.h
>

5 
	$maö
()

7 
	`¥ötf
("sizeof(°ru˘ f¸edË%d\n", (
f¸ed
));

8 
	`¥ötf
("sizeof(°ru˘ cmsghdrË%d\n", (
cmsghdr
));

9 
	`exô
(0);

10 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/tfcred01.c

1 
	~"u≈.h
"

2 
	~<sys/∑øm.h
>

3 
	~<sys/u¸ed.h
>

5 
ssize_t
 
ªcv_¸ed
(, *, 
size_t
, 
f¸ed
 *);

7 
	$maö
()

9 
fd
[2], 
⁄
, 
n
;

10 
buf
[100];

11 
f¸ed
 
¸ed
;

13 i‡(
	`sockë∑ú
(
AF_LOCAL
, 
SOCK_STREAM
, 0, 
fd
) < 0)

14 
	`îr_sys
("socketpairÉrror");

17 
⁄
 = 1;

18 
	`Sësock›t
(
fd
[1], 0, 
LOCAL_CREDS
, &
⁄
, (on));

20 
	`Wrôe
(
fd
[0], "hello, world\n", 13);

22 i‡–(
n
 = 
	`ªcv_¸ed
(
fd
[1], 
buf
, (buf), &
¸ed
)) < 0)

23 
	`îr_sys
("recv_credÉrror");

24 i‡(
n
 == 0)

25 
	`îr_quô
("recv_cred, unexpected EOF");

27 
buf
[
n
] = 0;

28 
	`¥ötf
("d©a: %s", 
buf
);

30 i‡(
¸ed
.
fc_ngroups
 == 0)

31 
	`¥ötf
("(no credentialsÑeturned)\n");

33 
	`¥ötf
("ªÆ u£∏ID = %d\n", 
¸ed
.
fc_ruid
);

34 
	`¥ötf
("ªÆ grou∞ID = %d\n", 
¸ed
.
fc_rgid
);

35 
	`¥ötf
("logöÇamê%-*s\n", 
MAXLOGNAME
, 
¸ed
.
fc_logö
);

36 
	`¥ötf
("ef„˘ivêu£∏ID = %d\n", 
¸ed
.
fc_uid
);

37 
	`¥ötf
("ef„˘ivêgrou∞ID = %d\n", 
¸ed
.
fc_gid
);

38 
	`¥ötf
("%d suµÀmíèry groups:", 
¸ed
.
fc_ngroups
 - 1);

39 
n
 = 1;Ç < 
¸ed
.
fc_ngroups
;Ç++)

40 
	`¥ötf
(" %d", 
¸ed
.
fc_groups
[
n
]);

41 
	`¥ötf
("\n");

44 
	`exô
(0);

45 
	}
}

47 
	#CONTROL_LEN
 ((
cmsghdr
Ë+ (
f¸ed
))

	)

49 
ssize_t


50 
	$ªcv_¸ed
(
fd
, *
±r
, 
size_t
 
nbyãs
, 
f¸ed
 *
f¸ed±r
)

52 
msghdr
 
msg
;

53 
iovec
 
iov
[1];

54 
c⁄åﬁ
[
CONTROL_LEN
 + 20];

55 
n
;

57 
msg
.
msg_«me
 = 
NULL
;

58 
msg
.
msg_«mñí
 = 0;

59 
iov
[0].
iov_ba£
 = 
±r
;

60 
iov
[0].
iov_Àn
 = 
nbyãs
;

61 
msg
.
msg_iov
 = 
iov
;

62 
msg
.
msg_iovÀn
 = 1;

63 
msg
.
msg_c⁄åﬁ
 = 
c⁄åﬁ
;

64 
msg
.
msg_c⁄åﬁÀn
 = (
c⁄åﬁ
);

65 
msg
.
msg_Êags
 = 0;

67 i‡–(
n
 = 
	`ªcvmsg
(
fd
, &
msg
, 0)) < 0)

68 (
n
);

70 
f¸ed±r
->
fc_ngroups
 = 0;

71 i‡(
f¸ed±r
 && 
msg
.
msg_c⁄åﬁÀn
 > 0) {

72 
cmsghdr
 *
cm±r
 = (cmsghd∏*Ë
c⁄åﬁ
;

74 i‡(
cm±r
->
cmsg_Àn
 !(
cmsghdr
Ë+ (
f¸ed
))

75 
	`îr_quô
("c⁄åﬁÜígth = %d", 
cm±r
->
cmsg_Àn
);

76 i‡(
cm±r
->
cmsg_Àvñ
 !
SOL_SOCKET
)

77 
	`îr_quô
("controlÜevel != SOL_SOCKET");

78 i‡(
cm±r
->
cmsg_ty≥
 !
SCM_CREDS
)

79 
	`îr_quô
("controlÅype != SCM_CREDS");

80 
	`mem˝y
(
f¸ed±r
, 
	`CMSG_DATA
(
cm±r
), (
f¸ed
));

83 (
n
);

84 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixbind.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockÀn_t
 
Àn
;

8 
sockaddr_un
 
addr1
, 
addr2
;

10 i‡(
¨gc
 != 2)

11 
	`îr_quô
("usage: unixbind <pathname>");

13 
sockfd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_STREAM
, 0);

15 
	`u∆ök
(
¨gv
[1]);

17 
	`bzîo
(&
addr1
, (addr1));

18 
addr1
.
sun_Ámûy
 = 
AF_LOCAL
;

19 
	`°∫˝y
(
addr1
.
sun_∑th
, 
¨gv
[1], (addr1.sun_path)-1);

20 
	`Böd
(
sockfd
, (
SA
 *Ë&
addr1
, 
	`SUN_LEN
(&addr1));

22 
Àn
 = (
addr2
);

23 
	`Gësock«me
(
sockfd
, (
SA
 *Ë&
addr2
, &
Àn
);

24 
	`¥ötf
("boundÇamê%s,Ñëu∫edÜí = %d\n", 
addr2
.
sun_∑th
, 
Àn
);

26 
	`exô
(0);

27 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixdgcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_un
 
˛üddr
, 
£rvaddr
;

9 
sockfd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_DGRAM
, 0);

11 
	`bzîo
(&
˛üddr
, (cliaddr));

12 
˛üddr
.
sun_Ámûy
 = 
AF_LOCAL
;

13 
	`°r˝y
(
˛üddr
.
sun_∑th
, 
	`tm≤am
(
NULL
));

15 
	`Böd
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

17 
	`bzîo
(&
£rvaddr
, (servaddr));

18 
£rvaddr
.
sun_Ámûy
 = 
AF_LOCAL
;

19 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIXDG_PATH
);

21 
	`dg_˛i
(
°dö
, 
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

23 
	`exô
(0);

24 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixdgserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_un
 
£rvaddr
, 
˛üddr
;

9 
sockfd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_DGRAM
, 0);

11 
	`u∆ök
(
UNIXDG_PATH
);

12 
	`bzîo
(&
£rvaddr
, (servaddr));

13 
£rvaddr
.
sun_Ámûy
 = 
AF_LOCAL
;

14 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIXDG_PATH
);

16 
	`Böd
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

18 
	`dg_echo
(
sockfd
, (
SA
 *Ë&
˛üddr
, (cliaddr));

19 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrcli01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
sockfd
;

7 
sockaddr_un
 
£rvaddr
;

9 
sockfd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_STREAM
, 0);

11 
	`bzîo
(&
£rvaddr
, (servaddr));

12 
£rvaddr
.
sun_Ámûy
 = 
AF_LOCAL
;

13 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIXSTR_PATH
);

15 
	`C⁄√˘
(
sockfd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

17 
	`°r_˛i
(
°dö
, 
sockfd
);

19 
	`exô
(0);

20 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrserv01.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_un
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_STREAM
, 0);

14 
	`u∆ök
(
UNIXSTR_PATH
);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sun_Ámûy
 = 
AF_LOCAL
;

17 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIXSTR_PATH
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrserv02.c

1 
	~"u≈.h
"

4 
	$maö
(
¨gc
, **
¨gv
)

6 
li°ífd
, 
c⁄nfd
;

7 
pid_t
 
chûdpid
;

8 
sockÀn_t
 
˛ûí
;

9 
sockaddr_un
 
˛üddr
, 
£rvaddr
;

10 
	`sig_chld
();

12 
li°ífd
 = 
	`Sockë
(
AF_LOCAL
, 
SOCK_STREAM
, 0);

14 
	`u∆ök
(
UNIXSTR_PATH
);

15 
	`bzîo
(&
£rvaddr
, (servaddr));

16 
£rvaddr
.
sun_Ámûy
 = 
AF_LOCAL
;

17 
	`°r˝y
(
£rvaddr
.
sun_∑th
, 
UNIXSTR_PATH
);

19 
	`Böd
(
li°ífd
, (
SA
 *Ë&
£rvaddr
, (servaddr));

21 
	`Li°í
(
li°ífd
, 
LISTENQ
);

23 
	`Sig«l
(
SIGCHLD
, 
sig_chld
);

26 
˛ûí
 = (
˛üddr
);

27 i‡–(
c⁄nfd
 = 
	`ac˚±
(
li°ífd
, (
SA
 *Ë&
˛üddr
, &
˛ûí
)) < 0) {

28 i‡(
î∫o
 =
EINTR
)

31 
	`îr_sys
("acceptÉrror");

34 i‡–(
chûdpid
 = 
	`F‹k
()) == 0) {

35 
	`Clo£
(
li°ífd
);

36 
	`°r_echo
(
c⁄nfd
);

37 
	`exô
(0);

39 
	`Clo£
(
c⁄nfd
);

41 
	}
}

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/arpa/nameser.h

52 #i‚de‡
_ARPA_NAMESER_H_


53 
	#_ARPA_NAMESER_H_


	)

57 
	#BIND_4_COMPAT


	)

59 
	~<sys/∑øm.h
>

60 #i‡(!
deföed
(
BSD
)) || (BSD < 199306)

61 
	~<sys/bôy≥s.h
>

63 
	~<sys/ty≥s.h
>

65 
	~<sys/cdefs.h
>

75 
	#__NAMESER
 19991006

	)

79 
	#NS_PACKETSZ
 512

	)

80 
	#NS_MAXDNAME
 1025

	)

81 
	#NS_MAXMSG
 65535

	)

82 
	#NS_MAXCDNAME
 255

	)

83 
	#NS_MAXLABEL
 63

	)

84 
	#NS_HFIXEDSZ
 12

	)

85 
	#NS_QFIXEDSZ
 4

	)

86 
	#NS_RRFIXEDSZ
 10

	)

87 
	#NS_INT32SZ
 4

	)

88 
	#NS_INT16SZ
 2

	)

89 
	#NS_INT8SZ
 1

	)

90 
	#NS_INADDRSZ
 4

	)

91 
	#NS_IN6ADDRSZ
 16

	)

92 
	#NS_CMPRSFLGS
 0xc0

	)

93 
	#NS_DEFAULTPORT
 53

	)

98 
	e__ns_£˘
 {

99 
	mns_s_qd
 = 0,

100 
	mns_s_zn
 = 0,

101 
	mns_s_™
 = 1,

102 
	mns_s_¥
 = 1,

103 
	mns_s_ns
 = 2,

104 
	mns_s_ud
 = 2,

105 
	mns_s_¨
 = 3,

106 
	mns_s_max
 = 4

107 } 
	tns_£˘
;

114 
	s__ns_msg
 {

115 c⁄° 
u_ch¨
 *
	m_msg
, *
	m_eom
;

116 
u_öt16_t
 
	m_id
, 
	m_Êags
, 
	m_cou¡s
[
ns_s_max
];

117 c⁄° 
u_ch¨
 *
	m_£˘i⁄s
[
ns_s_max
];

118 
ns_£˘
 
	m_£˘
;

119 
	m_ºnum
;

120 c⁄° 
u_ch¨
 *
	m_msg_±r
;

121 } 
	tns_msg
;

124 
	s_ns_Êagd©a
 { 
	mmask
, 
	mshi·
; };

125 c⁄° 
_ns_Êagd©a
 _ns_flagdata[];

129 
	#ns_msg_id
(
h™dÀ
Ë((h™dÀ).
_id
 + 0)

	)

130 
	#ns_msg_ba£
(
h™dÀ
Ë((h™dÀ).
_msg
 + 0)

	)

131 
	#ns_msg_íd
(
h™dÀ
Ë((h™dÀ).
_eom
 + 0)

	)

132 
	#ns_msg_size
(
h™dÀ
Ë((h™dÀ).
_eom
 - (h™dÀ).
_msg
)

	)

133 
	#ns_msg_cou¡
(
h™dÀ
, 
£˘i⁄
Ë((h™dÀ).
_cou¡s
[£˘i⁄] + 0)

	)

138 
	s__ns_º
 {

139 
	m«me
[
NS_MAXDNAME
];

140 
u_öt16_t
 
	mty≥
;

141 
u_öt16_t
 
	mº_˛ass
;

142 
u_öt32_t
 
	mâl
;

143 
u_öt16_t
 
	mrdÀngth
;

144 c⁄° 
u_ch¨
 * 
	mrd©a
;

145 } 
	tns_º
;

148 
	#ns_º_«me
(
º
Ë((‘r).
«me
[0] !'\0'Ë? (º).«mê: ".")

	)

149 
	#ns_º_ty≥
(
º
Ë((
ns_ty≥
)(‘r).
ty≥
 + 0))

	)

150 
	#ns_º_˛ass
(
º
Ë((
ns_˛ass
)(‘r).
º_˛ass
 + 0))

	)

151 
	#ns_º_âl
(
º
Ë(‘r).
âl
 + 0)

	)

152 
	#ns_º_rdÀn
(
º
Ë(‘r).
rdÀngth
 + 0)

	)

153 
	#ns_º_rd©a
(
º
Ë(‘r).
rd©a
 + 0)

	)

160 
	e__ns_Êag
 {

161 
	mns_f_qr
,

162 
	mns_f_›code
,

163 
	mns_f_Ø
,

164 
	mns_f_tc
,

165 
	mns_f_rd
,

166 
	mns_f_ø
,

167 
	mns_f_z
,

168 
	mns_f_ad
,

169 
	mns_f_cd
,

170 
	mns_f_rcode
,

171 
	mns_f_max


172 } 
	tns_Êag
;

177 
	e__ns_›code
 {

178 
	mns_o_quîy
 = 0,

179 
	mns_o_iquîy
 = 1,

180 
	mns_o_°©us
 = 2,

182 
	mns_o_nŸify
 = 4,

183 
	mns_o_upd©e
 = 5,

184 
	mns_o_max
 = 6

185 } 
	tns_›code
;

190 
	e__ns_rcode
 {

191 
	mns_r_n€º‹
 = 0,

192 
	mns_r_f‹mîr
 = 1,

193 
	mns_r_£rvÁû
 = 2,

194 
	mns_r_nxdomaö
 = 3,

195 
	mns_r_nŸim∂
 = 4,

196 
	mns_r_ªfu£d
 = 5,

198 
	mns_r_yxdomaö
 = 6,

199 
	mns_r_yxº£t
 = 7,

200 
	mns_r_nxº£t
 = 8,

201 
	mns_r_nŸauth
 = 9,

202 
	mns_r_nŸz⁄e
 = 10,

203 
	mns_r_max
 = 11,

205 
	mns_r_badvîs
 = 16,

207 
	mns_r_badsig
 = 16,

208 
	mns_r_badkey
 = 17,

209 
	mns_r_badtime
 = 18

210 } 
	tns_rcode
;

213 
	e__ns_upd©e_›î©i⁄
 {

214 
	mns_u›_dñëe
 = 0,

215 
	mns_u›_add
 = 1,

216 
	mns_u›_max
 = 2

217 } 
	tns_upd©e_›î©i⁄
;

222 
	sns_tsig_key
 {

223 
	m«me
[
NS_MAXDNAME
], 
	mÆg
[NS_MAXDNAME];

224 *
	md©a
;

225 
	mÀn
;

227 
ns_tsig_key
 
	tns_tsig_key
;

232 
	sns_t˝_tsig_°©e
 {

233 
	mcou¡î
;

234 
d°_key
 *
	mkey
;

235 *
	m˘x
;

236 
	msig
[
NS_PACKETSZ
];

237 
	msigÀn
;

239 
ns_t˝_tsig_°©e
 
	tns_t˝_tsig_°©e
;

241 
	#NS_TSIG_FUDGE
 300

	)

242 
	#NS_TSIG_TCP_COUNT
 100

	)

243 
	#NS_TSIG_ALG_HMAC_MD5
 "HMAC-MD5.SIG-ALG.REG.INT"

	)

245 
	#NS_TSIG_ERROR_NO_TSIG
 -10

	)

246 
	#NS_TSIG_ERROR_NO_SPACE
 -11

	)

247 
	#NS_TSIG_ERROR_FORMERR
 -12

	)

252 
	e__ns_ty≥
 {

253 
	mns_t_övÆid
 = 0,

254 
	mns_t_a
 = 1,

255 
	mns_t_ns
 = 2,

256 
	mns_t_md
 = 3,

257 
	mns_t_mf
 = 4,

258 
	mns_t_˙ame
 = 5,

259 
	mns_t_sﬂ
 = 6,

260 
	mns_t_mb
 = 7,

261 
	mns_t_mg
 = 8,

262 
	mns_t_mr
 = 9,

263 
	mns_t_nuŒ
 = 10,

264 
	mns_t_wks
 = 11,

265 
	mns_t_±r
 = 12,

266 
	mns_t_höfo
 = 13,

267 
	mns_t_möfo
 = 14,

268 
	mns_t_mx
 = 15,

269 
	mns_t_txt
 = 16,

270 
	mns_t_Ω
 = 17,

271 
	mns_t_afsdb
 = 18,

272 
	mns_t_x25
 = 19,

273 
	mns_t_isdn
 = 20,

274 
	mns_t_π
 = 21,

275 
	mns_t_nßp
 = 22,

276 
	mns_t_nßp_±r
 = 23,

277 
	mns_t_sig
 = 24,

278 
	mns_t_key
 = 25,

279 
	mns_t_px
 = 26,

280 
	mns_t_gpos
 = 27,

281 
	mns_t_ØØ
 = 28,

282 
	mns_t_loc
 = 29,

283 
	mns_t_nxt
 = 30,

284 
	mns_t_eid
 = 31,

285 
	mns_t_nimloc
 = 32,

286 
	mns_t_§v
 = 33,

287 
	mns_t_©ma
 = 34,

288 
	mns_t_«±r
 = 35,

289 
	mns_t_kx
 = 36,

290 
	mns_t_˚π
 = 37,

291 
	mns_t_a6
 = 38,

292 
	mns_t_d«me
 = 39,

293 
	mns_t_sök
 = 40,

294 
	mns_t_›t
 = 41,

295 
	mns_t_≠l
 = 42,

296 
	mns_t_tkey
 = 249,

297 
	mns_t_tsig
 = 250,

298 
	mns_t_ix‰
 = 251,

299 
	mns_t_ax‰
 = 252,

300 
	mns_t_maûb
 = 253,

301 
	mns_t_maûa
 = 254,

302 
	mns_t_™y
 = 255,

303 
	mns_t_zx‰
 = 256,

304 
	mns_t_max
 = 65536

305 } 
	tns_ty≥
;

308 
	#ns_t_qt_p
(
t
Ë(
	`ns_t_x‰_p
—Ë|| (tË=
ns_t_™y
 || \

309 (
t
Ë=
ns_t_maûb
 || (tË=
ns_t_maûa
)

	)

311 
	#ns_t_mº_p
(
t
Ë(—Ë=
ns_t_tsig
 || (tË=
ns_t_›t
)

	)

313 
	#ns_t_º_p
(
t
Ë(!
	`ns_t_qt_p
—Ë&& !
	`ns_t_mº_p
—))

	)

314 
	#ns_t_udp_p
(
t
Ë(—Ë!
ns_t_ax‰
 && (tË!
ns_t_zx‰
)

	)

315 
	#ns_t_x‰_p
(
t
Ë(—Ë=
ns_t_ax‰
 || (tË=
ns_t_ix‰
 || \

316 (
t
Ë=
ns_t_zx‰
)

	)

321 
	e__ns_˛ass
 {

322 
	mns_c_övÆid
 = 0,

323 
	mns_c_ö
 = 1,

324 
	mns_c_2
 = 2,

325 
	mns_c_chaos
 = 3,

326 
	mns_c_hs
 = 4,

328 
	mns_c_n⁄e
 = 254,

329 
	mns_c_™y
 = 255,

330 
	mns_c_max
 = 65536

331 } 
	tns_˛ass
;

335 
	e__ns_key_ty≥s
 {

336 
	mns_kt_rß
 = 1,

337 
	mns_kt_dh
 = 2,

338 
	mns_kt_dß
 = 3,

339 
	mns_kt_¥iv©e
 = 254

340 } 
	tns_key_ty≥s
;

342 
	e__ns_˚π_ty≥s
 {

343 
	m˚π_t_pkix
 = 1,

344 
	m˚π_t_•ki
 = 2,

345 
	m˚π_t_pgp
 = 3,

346 
	m˚π_t_uæ
 = 253,

347 
	m˚π_t_oid
 = 254

348 } 
	tns_˚π_ty≥s
;

351 
	#NS_KEY_TYPEMASK
 0xC000

	)

352 
	#NS_KEY_TYPE_AUTH_CONF
 0x0000

	)

353 
	#NS_KEY_TYPE_CONF_ONLY
 0x8000

	)

354 
	#NS_KEY_TYPE_AUTH_ONLY
 0x4000

	)

355 
	#NS_KEY_TYPE_NO_KEY
 0xC000

	)

357 
	#NS_KEY_NO_AUTH
 0x8000

	)

358 
	#NS_KEY_NO_CONF
 0x4000

	)

359 
	#NS_KEY_RESERVED2
 0x2000

	)

360 
	#NS_KEY_EXTENDED_FLAGS
 0x1000

	)

361 
	#NS_KEY_RESERVED4
 0x0800

	)

362 
	#NS_KEY_RESERVED5
 0x0400

	)

363 
	#NS_KEY_NAME_TYPE
 0x0300

	)

364 
	#NS_KEY_NAME_USER
 0x0000

	)

365 
	#NS_KEY_NAME_ENTITY
 0x0200

	)

366 
	#NS_KEY_NAME_ZONE
 0x0100

	)

367 
	#NS_KEY_NAME_RESERVED
 0x0300

	)

368 
	#NS_KEY_RESERVED8
 0x0080

	)

369 
	#NS_KEY_RESERVED9
 0x0040

	)

370 
	#NS_KEY_RESERVED10
 0x0020

	)

371 
	#NS_KEY_RESERVED11
 0x0010

	)

372 
	#NS_KEY_SIGNATORYMASK
 0x000F

	)

373 
	#NS_KEY_RESERVED_BITMASK
 ( 
NS_KEY_RESERVED2
 | \

374 
NS_KEY_RESERVED4
 | \

375 
NS_KEY_RESERVED5
 | \

376 
NS_KEY_RESERVED8
 | \

377 
NS_KEY_RESERVED9
 | \

378 
NS_KEY_RESERVED10
 | \

379 
NS_KEY_RESERVED11
 )

	)

380 
	#NS_KEY_RESERVED_BITMASK2
 0xFFFF

	)

382 
	#NS_ALG_MD5RSA
 1

	)

383 
	#NS_ALG_DH
 2

	)

384 
	#NS_ALG_DSA
 3

	)

385 
	#NS_ALG_DSS
 
NS_ALG_DSA


	)

386 
	#NS_ALG_EXPIRE_ONLY
 253

	)

387 
	#NS_ALG_PRIVATE_OID
 254

	)

390 
	#NS_KEY_PROT_TLS
 1

	)

391 
	#NS_KEY_PROT_EMAIL
 2

	)

392 
	#NS_KEY_PROT_DNSSEC
 3

	)

393 
	#NS_KEY_PROT_IPSEC
 4

	)

394 
	#NS_KEY_PROT_ANY
 255

	)

397 
	#NS_MD5RSA_MIN_BITS
 512

	)

398 
	#NS_MD5RSA_MAX_BITS
 4096

	)

400 
	#NS_MD5RSA_MAX_BYTES
 ((
NS_MD5RSA_MAX_BITS
+7/8)*2+3)

	)

402 
	#NS_MD5RSA_MAX_BASE64
 (((
NS_MD5RSA_MAX_BYTES
+2)/3)*4)

	)

403 
	#NS_MD5RSA_MIN_SIZE
 ((
NS_MD5RSA_MIN_BITS
+7)/8)

	)

404 
	#NS_MD5RSA_MAX_SIZE
 ((
NS_MD5RSA_MAX_BITS
+7)/8)

	)

406 
	#NS_DSA_SIG_SIZE
 41

	)

407 
	#NS_DSA_MIN_SIZE
 213

	)

408 
	#NS_DSA_MAX_BYTES
 405

	)

411 
	#NS_SIG_TYPE
 0

	)

412 
	#NS_SIG_ALG
 2

	)

413 
	#NS_SIG_LABELS
 3

	)

414 
	#NS_SIG_OTTL
 4

	)

415 
	#NS_SIG_EXPIR
 8

	)

416 
	#NS_SIG_SIGNED
 12

	)

417 
	#NS_SIG_FOOT
 16

	)

418 
	#NS_SIG_SIGNER
 18

	)

420 
	#NS_NXT_BITS
 8

	)

421 
	#NS_NXT_BIT_SET
–
n
,
p
Ë’[“)/
NS_NXT_BITS
] |(0x80>>(“)%NS_NXT_BITS)))

	)

422 
	#NS_NXT_BIT_CLEAR
(
n
,
p
Ë’[“)/
NS_NXT_BITS
] &~(0x80>>(“)%NS_NXT_BITS)))

	)

423 
	#NS_NXT_BIT_ISSET
(
n
,
p
Ë’[“)/
NS_NXT_BITS
] & (0x80>>(“)%NS_NXT_BITS)))

	)

424 
	#NS_NXT_MAX
 127

	)

429 
	#NS_OPT_DNSSEC_OK
 0x8000U

	)

430 
	#NS_OPT_NSID
 3

	)

435 
	#NS_GET16
(
s
, 
˝
) do { \

436 c⁄° 
u_ch¨
 *
t_˝
 = (c⁄° u_ch¨ *)(
˝
); \

437 (
s
Ë((
u_öt16_t
)
t_˝
[0] << 8) \

438 | ((
u_öt16_t
)
t_˝
[1]) \

440 (
˝
Ë+
NS_INT16SZ
; \

441 } 0)

	)

443 
	#NS_GET32
(
l
, 
˝
) do { \

444 c⁄° 
u_ch¨
 *
t_˝
 = (c⁄° u_ch¨ *)(
˝
); \

445 (
l
Ë((
u_öt32_t
)
t_˝
[0] << 24) \

446 | ((
u_öt32_t
)
t_˝
[1] << 16) \

447 | ((
u_öt32_t
)
t_˝
[2] << 8) \

448 | ((
u_öt32_t
)
t_˝
[3]) \

450 (
˝
Ë+
NS_INT32SZ
; \

451 } 0)

	)

453 
	#NS_PUT16
(
s
, 
˝
) do { \

454 
u_öt16_t
 
t_s
 = (u_öt16_t)(
s
); \

455 
u_ch¨
 *
t_˝
 = (u_ch¨ *)(
˝
); \

456 *
t_˝
++ = 
t_s
 >> 8; \

457 *
t_˝
 = 
t_s
; \

458 (
˝
Ë+
NS_INT16SZ
; \

459 } 0)

	)

461 
	#NS_PUT32
(
l
, 
˝
) do { \

462 
u_öt32_t
 
t_l
 = (u_öt32_t)(
l
); \

463 
u_ch¨
 *
t_˝
 = (u_ch¨ *)(
˝
); \

464 *
t_˝
++ = 
t_l
 >> 24; \

465 *
t_˝
++ = 
t_l
 >> 16; \

466 *
t_˝
++ = 
t_l
 >> 8; \

467 *
t_˝
 = 
t_l
; \

468 (
˝
Ë+
NS_INT32SZ
; \

469 } 0)

	)

471 
__BEGIN_DECLS


472 
	$ns_msg_gëÊag
 (
ns_msg
, Ë
__THROW
;

473 
u_öt
 
	$ns_gë16
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

474 
u_l⁄g
 
	$ns_gë32
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

475 
	$ns_put16
 (
u_öt
, 
u_ch¨
 *Ë
__THROW
;

476 
	$ns_put32
 (
u_l⁄g
, 
u_ch¨
 *Ë
__THROW
;

477 
	$ns_öô∑r£
 (c⁄° 
u_ch¨
 *, , 
ns_msg
 *Ë
__THROW
;

478 
	$ns_skùº
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
ns_£˘
, )

479 
__THROW
;

480 
	$ns_∑r£º
 (
ns_msg
 *, 
ns_£˘
, , 
ns_º
 *Ë
__THROW
;

481 
	$ns_•röår
 (c⁄° 
ns_msg
 *, c⁄° 
ns_º
 *,

482 c⁄° *, c⁄° *, *, 
size_t
)

483 
__THROW
;

484 
	$ns_•röårf
 (c⁄° 
u_ch¨
 *, 
size_t
, const *,

485 
ns_˛ass
, 
ns_ty≥
, 
u_l⁄g
, c⁄° 
u_ch¨
 *,

486 
size_t
, const *, const *,

487 *, 
size_t
Ë
__THROW
;

488 
	$ns_f‹m©_âl
 (
u_l⁄g
, *, 
size_t
Ë
__THROW
;

489 
	$ns_∑r£_âl
 (c⁄° *, 
u_l⁄g
 *Ë
__THROW
;

490 
u_öt32_t
 
	$ns_d©ëo£cs
 (c⁄° *, *Ë
__THROW
;

491 
	$ns_«me_¡ﬁ
 (c⁄° 
u_ch¨
 *, u_ch¨ *, 
size_t
Ë
__THROW
;

492 
	$ns_«me_¡›
 (c⁄° 
u_ch¨
 *, *, 
size_t
Ë
__THROW
;

493 
	$ns_«me_±⁄
 (c⁄° *, 
u_ch¨
 *, 
size_t
Ë
__THROW
;

494 
	$ns_«me_u≈ack
 (c⁄° 
u_ch¨
 *, const u_char *,

495 c⁄° 
u_ch¨
 *, u_ch¨ *, 
size_t
Ë
__THROW
;

496 
	$ns_«me_∑ck
 (c⁄° 
u_ch¨
 *, u_char *, ,

497 c⁄° 
u_ch¨
 **, c⁄° u_ch¨ **Ë
__THROW
;

498 
	$ns_«me_uncom¥ess
 (c⁄° 
u_ch¨
 *, const u_char *,

499 c⁄° 
u_ch¨
 *, *, 
size_t
Ë
__THROW
;

500 
	$ns_«me_com¥ess
 (c⁄° *, 
u_ch¨
 *, 
size_t
,

501 c⁄° 
u_ch¨
 **, c⁄° u_ch¨ **Ë
__THROW
;

502 
	$ns_«me_skù
 (c⁄° 
u_ch¨
 **, c⁄° u_ch¨ *Ë
__THROW
;

503 
	$ns_«me_rﬁlback
 (c⁄° 
u_ch¨
 *, const u_char **,

504 c⁄° 
u_ch¨
 **Ë
__THROW
;

505 
	$ns_sign
 (
u_ch¨
 *, *, , , *,

506 c⁄° 
u_ch¨
 *, , u_ch¨ *, *, 
time_t
Ë
__THROW
;

507 
	$ns_sign2
 (
u_ch¨
 *, *, , , *,

508 c⁄° 
u_ch¨
 *, , u_ch¨ *, *, 
time_t
,

509 
u_ch¨
 **, u_ch¨ **Ë
__THROW
;

510 
	$ns_sign_t˝
 (
u_ch¨
 *, *, , ,

511 
ns_t˝_tsig_°©e
 *, Ë
__THROW
;

512 
	$ns_sign_t˝2
 (
u_ch¨
 *, *, , ,

513 
ns_t˝_tsig_°©e
 *, ,

514 
u_ch¨
 **, u_ch¨ **Ë
__THROW
;

515 
	$ns_sign_t˝_öô
 (*, c⁄° 
u_ch¨
 *, ,

516 
ns_t˝_tsig_°©e
 *Ë
__THROW
;

517 
u_ch¨
 *
	$ns_föd_tsig
 (
u_ch¨
 *, u_ch¨ *Ë
__THROW
;

518 
	$ns_vîify
 (
u_ch¨
 *, *, *, const u_char *, ,

519 
u_ch¨
 *, *, 
time_t
 *, Ë
__THROW
;

520 
	$ns_vîify_t˝
 (
u_ch¨
 *, *, 
ns_t˝_tsig_°©e
 *, )

521 
__THROW
;

522 
	$ns_vîify_t˝_öô
 (*, c⁄° 
u_ch¨
 *, ,

523 
ns_t˝_tsig_°©e
 *Ë
__THROW
;

524 
	$ns_ßmedomaö
 (c⁄° *, c⁄° *Ë
__THROW
;

525 
	$ns_subdomaö
 (c⁄° *, c⁄° *Ë
__THROW
;

526 
	$ns_makeˇn⁄
 (c⁄° *, *, 
size_t
Ë
__THROW
;

527 
	$ns_ßmíame
 (c⁄° *, c⁄° *Ë
__THROW
;

528 
__END_DECLS


530 #ifde‡
BIND_4_COMPAT


531 
	~<¨∑/«me£r_com∑t.h
>

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/err.h

20 #i‚def 
_ERR_H


21 
	#_ERR_H
 1

	)

23 
	~<„©uªs.h
>

25 
	#__√ed___va_li°


	)

26 
	~<°d¨g.h
>

27 #i‚def 
__GNUC_VA_LIST


28 
	#__gnuc_va_li°
 
__±r_t


	)

31 
__BEGIN_DECLS


35 
	$w¨n
 (
__c⁄°
 *
__f‹m©
, ...)

36 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 1, 2)));

37 
	$vw¨n
 (
__c⁄°
 *
__f‹m©
, 
__gnuc_va_li°
)

38 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 1, 0)));

41 
	$w¨nx
 (
__c⁄°
 *
__f‹m©
, ...)

42 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 1, 2)));

43 
	$vw¨nx
 (
__c⁄°
 *
__f‹m©
, 
__gnuc_va_li°
)

44 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 1, 0)));

47 
	$îr
 (
__°©us
, 
__c⁄°
 *
__f‹m©
, ...)

48 
	`__©åibuã__
 ((
__n‹ëu∫__
, 
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

49 
	$vîr
 (
__°©us
, 
__c⁄°
 *
__f‹m©
, 
__gnuc_va_li°
)

50 
	`__©åibuã__
 ((
__n‹ëu∫__
, 
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

51 
	$îrx
 (
__°©us
, 
__c⁄°
 *
__f‹m©
, ...)

52 
	`__©åibuã__
 ((
__n‹ëu∫__
, 
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

53 
	$vîrx
 (
__°©us
, 
__c⁄°
 *, 
__gnuc_va_li°
)

54 
	`__©åibuã__
 ((
__n‹ëu∫__
, 
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

56 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/net/if.h

20 #i‚de‡
_NET_IF_H


21 
	#_NET_IF_H
 1

	)

23 
	~<„©uªs.h
>

25 #ifde‡
__USE_MISC


26 
	~<sys/ty≥s.h
>

27 
	~<sys/sockë.h
>

32 
	#IF_NAMESIZE
 16

	)

34 
	sif_«meödex


36 
	mif_ödex
;

37 *
	mif_«me
;

41 #ifde‡
__USE_MISC


45 
	mIFF_UP
 = 0x1,

46 
	#IFF_UP
 
IFF_UP


	)

47 
	mIFF_BROADCAST
 = 0x2,

48 
	#IFF_BROADCAST
 
IFF_BROADCAST


	)

49 
	mIFF_DEBUG
 = 0x4,

50 
	#IFF_DEBUG
 
IFF_DEBUG


	)

51 
	mIFF_LOOPBACK
 = 0x8,

52 
	#IFF_LOOPBACK
 
IFF_LOOPBACK


	)

53 
	mIFF_POINTOPOINT
 = 0x10,

54 
	#IFF_POINTOPOINT
 
IFF_POINTOPOINT


	)

55 
	mIFF_NOTRAILERS
 = 0x20,

56 
	#IFF_NOTRAILERS
 
IFF_NOTRAILERS


	)

57 
	mIFF_RUNNING
 = 0x40,

58 
	#IFF_RUNNING
 
IFF_RUNNING


	)

59 
	mIFF_NOARP
 = 0x80,

60 
	#IFF_NOARP
 
IFF_NOARP


	)

61 
	mIFF_PROMISC
 = 0x100,

62 
	#IFF_PROMISC
 
IFF_PROMISC


	)

65 
	mIFF_ALLMULTI
 = 0x200,

66 
	#IFF_ALLMULTI
 
IFF_ALLMULTI


	)

68 
	mIFF_MASTER
 = 0x400,

69 
	#IFF_MASTER
 
IFF_MASTER


	)

70 
	mIFF_SLAVE
 = 0x800,

71 
	#IFF_SLAVE
 
IFF_SLAVE


	)

73 
	mIFF_MULTICAST
 = 0x1000,

74 
	#IFF_MULTICAST
 
IFF_MULTICAST


	)

76 
	mIFF_PORTSEL
 = 0x2000,

77 
	#IFF_PORTSEL
 
IFF_PORTSEL


	)

78 
	mIFF_AUTOMEDIA
 = 0x4000,

79 
	#IFF_AUTOMEDIA
 
IFF_AUTOMEDIA


	)

80 
	mIFF_DYNAMIC
 = 0x8000

81 
	#IFF_DYNAMIC
 
IFF_DYNAMIC


	)

89 
	siÁddr


91 
sockaddr
 
	miÁ_addr
;

94 
sockaddr
 
	mifu_brﬂdaddr
;

95 
sockaddr
 
	mifu_d°addr
;

96 } 
	miÁ_ifu
;

97 
iÁ˚
 *
	miÁ_iÂ
;

98 
iÁddr
 *
	miÁ_√xt
;

101 
	#iÁ_brﬂdaddr
 
iÁ_ifu
.
ifu_brﬂdaddr


	)

102 
	#iÁ_d°addr
 
iÁ_ifu
.
ifu_d°addr


	)

112 
	sifm≠


114 
	mmem_°¨t
;

115 
	mmem_íd
;

116 
	mba£_addr
;

117 
	múq
;

118 
	mdma
;

119 
	mp‹t
;

127 
	si‰eq


129 
	#IFHWADDRLEN
 6

	)

130 
	#IFNAMSIZ
 
IF_NAMESIZE


	)

133 
	mi‰n_«me
[
IFNAMSIZ
];

134 } 
	mi‰_i‰n
;

138 
sockaddr
 
	mi‰u_addr
;

139 
sockaddr
 
	mi‰u_d°addr
;

140 
sockaddr
 
	mi‰u_brﬂdaddr
;

141 
sockaddr
 
	mi‰u_√tmask
;

142 
sockaddr
 
	mi‰u_hwaddr
;

143 
	mi‰u_Êags
;

144 
	mi‰u_ivÆue
;

145 
	mi‰u_mtu
;

146 
ifm≠
 
	mi‰u_m≠
;

147 
	mi‰u_¶ave
[
IFNAMSIZ
];

148 
	mi‰u_√w«me
[
IFNAMSIZ
];

149 
__ˇddr_t
 
	mi‰u_d©a
;

150 } 
	mi‰_i‰u
;

152 
	#i‰_«me
 
i‰_i‰n
.
i‰n_«me


	)

153 
	#i‰_hwaddr
 
i‰_i‰u
.
i‰u_hwaddr


	)

154 
	#i‰_addr
 
i‰_i‰u
.
i‰u_addr


	)

155 
	#i‰_d°addr
 
i‰_i‰u
.
i‰u_d°addr


	)

156 
	#i‰_brﬂdaddr
 
i‰_i‰u
.
i‰u_brﬂdaddr


	)

157 
	#i‰_√tmask
 
i‰_i‰u
.
i‰u_√tmask


	)

158 
	#i‰_Êags
 
i‰_i‰u
.
i‰u_Êags


	)

159 
	#i‰_mëric
 
i‰_i‰u
.
i‰u_ivÆue


	)

160 
	#i‰_mtu
 
i‰_i‰u
.
i‰u_mtu


	)

161 
	#i‰_m≠
 
i‰_i‰u
.
i‰u_m≠


	)

162 
	#i‰_¶ave
 
i‰_i‰u
.
i‰u_¶ave


	)

163 
	#i‰_d©a
 
i‰_i‰u
.
i‰u_d©a


	)

164 
	#i‰_ifödex
 
i‰_i‰u
.
i‰u_ivÆue


	)

165 
	#i‰_b™dwidth
 
i‰_i‰u
.
i‰u_ivÆue


	)

166 
	#i‰_qÀn
 
i‰_i‰u
.
i‰u_ivÆue


	)

167 
	#i‰_√w«me
 
i‰_i‰u
.
i‰u_√w«me


	)

168 
	#_IOT_i‰eq
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),16,0,0)

	)

169 
	#_IOT_i‰eq_sh‹t
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

170 
	#_IOT_i‰eq_öt
 
	`_IOT
(
	`_IOTS
(),
IFNAMSIZ
,_IOTS(),1,0,0)

	)

177 
	sifc⁄f


179 
	mifc_Àn
;

182 
__ˇddr_t
 
	mifcu_buf
;

183 
i‰eq
 *
	mifcu_ªq
;

184 } 
	mifc_ifcu
;

186 
	#ifc_buf
 
ifc_ifcu
.
ifcu_buf


	)

187 
	#ifc_ªq
 
ifc_ifcu
.
ifcu_ªq


	)

188 
	#_IOT_ifc⁄f
 
	`_IOT
(
	`_IOTS
(
ifc⁄f
),1,0,0,0,0Ë

	)

191 
__BEGIN_DECLS


194 
	$if_«mëoödex
 (
__c⁄°
 *
__i‚ame
Ë
__THROW
;

195 *
	$if_ödext⁄ame
 (
__ifödex
, *
__i‚ame
Ë
__THROW
;

198 
if_«meödex
 *
	$if_«meödex
 (Ë
__THROW
;

201 
	$if_‰ì«meödex
 (
if_«meödex
 *
__±r
Ë
__THROW
;

203 
__END_DECLS


	@/usr/include/net/if_arp.h

23 #i‚de‡
_NET_IF_ARP_H


25 
	#_NET_IF_ARP_H
 1

	)

26 
	~<sys/cdefs.h
>

28 
	~<sys/ty≥s.h
>

29 
	~<sys/sockë.h
>

31 
	g__BEGIN_DECLS


34 
	#MAX_ADDR_LEN
 7

	)

40 
	#ARPOP_REQUEST
 1

	)

41 
	#ARPOP_REPLY
 2

	)

42 
	#ARPOP_RREQUEST
 3

	)

43 
	#ARPOP_RREPLY
 4

	)

44 
	#ARPOP_InREQUEST
 8

	)

45 
	#ARPOP_InREPLY
 9

	)

46 
	#ARPOP_NAK
 10

	)

55 
	s¨phdr


57 
	m¨_hrd
;

58 
	m¨_¥o
;

59 
	m¨_h 
;

60 
	m¨_∂n
;

61 
	m¨_›
;

65 
	m__¨_sha
[
ETH_ALEN
];

66 
	m__¨_sù
[4];

67 
	m__¨_tha
[
ETH_ALEN
];

68 
	m__¨_tù
[4];

74 
	#ARPHRD_NETROM
 0

	)

75 
	#ARPHRD_ETHER
 1

	)

76 
	#ARPHRD_EETHER
 2

	)

77 
	#ARPHRD_AX25
 3

	)

78 
	#ARPHRD_PRONET
 4

	)

79 
	#ARPHRD_CHAOS
 5

	)

80 
	#ARPHRD_IEEE802
 6

	)

81 
	#ARPHRD_ARCNET
 7

	)

82 
	#ARPHRD_APPLETLK
 8

	)

83 
	#ARPHRD_DLCI
 15

	)

84 
	#ARPHRD_ATM
 19

	)

85 
	#ARPHRD_METRICOM
 23

	)

86 
	#ARPHRD_IEEE1394
 24

	)

87 
	#ARPHRD_EUI64
 27

	)

88 
	#ARPHRD_INFINIBAND
 32

	)

91 
	#ARPHRD_SLIP
 256

	)

92 
	#ARPHRD_CSLIP
 257

	)

93 
	#ARPHRD_SLIP6
 258

	)

94 
	#ARPHRD_CSLIP6
 259

	)

95 
	#ARPHRD_RSRVD
 260

	)

96 
	#ARPHRD_ADAPT
 264

	)

97 
	#ARPHRD_ROSE
 270

	)

98 
	#ARPHRD_X25
 271

	)

99 
	#ARPHRD_HWX25
 272

	)

100 
	#ARPHRD_PPP
 512

	)

101 
	#ARPHRD_CISCO
 513

	)

102 
	#ARPHRD_HDLC
 
ARPHRD_CISCO


	)

103 
	#ARPHRD_LAPB
 516

	)

104 
	#ARPHRD_DDCMP
 517

	)

105 
	#ARPHRD_RAWHDLC
 518

	)

107 
	#ARPHRD_TUNNEL
 768

	)

108 
	#ARPHRD_TUNNEL6
 769

	)

109 
	#ARPHRD_FRAD
 770

	)

110 
	#ARPHRD_SKIP
 771

	)

111 
	#ARPHRD_LOOPBACK
 772

	)

112 
	#ARPHRD_LOCALTLK
 773

	)

113 
	#ARPHRD_FDDI
 774

	)

114 
	#ARPHRD_BIF
 775

	)

115 
	#ARPHRD_SIT
 776

	)

116 
	#ARPHRD_IPDDP
 777

	)

117 
	#ARPHRD_IPGRE
 778

	)

118 
	#ARPHRD_PIMREG
 779

	)

119 
	#ARPHRD_HIPPI
 780

	)

120 
	#ARPHRD_ASH
 781

	)

121 
	#ARPHRD_ECONET
 782

	)

122 
	#ARPHRD_IRDA
 783

	)

123 
	#ARPHRD_FCPP
 784

	)

124 
	#ARPHRD_FCAL
 785

	)

125 
	#ARPHRD_FCPL
 786

	)

126 
	#ARPHRD_FCFABRIC
 787

	)

127 
	#ARPHRD_IEEE802_TR
 800

	)

128 
	#ARPHRD_IEEE80211
 801

	)

129 
	#ARPHRD_IEEE80211_PRISM
 802

	)

130 
	#ARPHRD_IEEE80211_RADIOTAP
 803

	)

131 
	#ARPHRD_IEEE802154
 804

	)

132 
	#ARPHRD_IEEE802154_PHY
 805

	)

134 
	#ARPHRD_VOID
 0xFFFF

	)

135 
	#ARPHRD_NONE
 0xFFFE

	)

139 
	s¨¥eq


141 
sockaddr
 
	m¨p_∑
;

142 
sockaddr
 
	m¨p_ha
;

143 
	m¨p_Êags
;

144 
sockaddr
 
	m¨p_√tmask
;

145 
	m¨p_dev
[16];

148 
	s¨¥eq_ﬁd


150 
sockaddr
 
	m¨p_∑
;

151 
sockaddr
 
	m¨p_ha
;

152 
	m¨p_Êags
;

153 
sockaddr
 
	m¨p_√tmask
;

157 
	#ATF_COM
 0x02

	)

158 
	#ATF_PERM
 0x04

	)

159 
	#ATF_PUBL
 0x08

	)

160 
	#ATF_USETRAILERS
 0x10

	)

161 
	#ATF_NETMASK
 0x20

	)

163 
	#ATF_DONTPUB
 0x40

	)

164 
	#ATF_MAGIC
 0x80

	)

168 
	#ARPD_UPDATE
 0x01

	)

169 
	#ARPD_LOOKUP
 0x02

	)

170 
	#ARPD_FLUSH
 0x03

	)

172 
	s¨pd_ªque°


174 
	mªq
;

175 
u_öt32_t
 
	mù
;

176 
	mdev
;

177 
	m°amp
;

178 
	mupd©ed
;

179 
	mha
[
MAX_ADDR_LEN
];

182 
	g__END_DECLS


	@/usr/include/net/route.h

21 #i‚de‡
_NET_ROUTE_H


22 
	#_NET_ROUTE_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<sys/sockë.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<√töë/ö.h
>

28 
	~<bôs/w‹dsize.h
>

32 
	sπíåy


34 
	mπ_∑d1
;

35 
sockaddr
 
	mπ_d°
;

36 
sockaddr
 
	mπ_g©eway
;

37 
sockaddr
 
	mπ_gímask
;

38 
	mπ_Êags
;

39 
	mπ_∑d2
;

40 
	mπ_∑d3
;

41 
	mπ_tos
;

42 
	mπ_˛ass
;

43 #i‡
__WORDSIZE
 == 64

44 
	mπ_∑d4
[3];

46 
	mπ_∑d4
;

48 
	mπ_mëric
;

49 *
	mπ_dev
;

50 
	mπ_mtu
;

51 
	mπ_wödow
;

52 
	mπ_úâ
;

55 
	#π_mss
 
π_mtu


	)

58 
	sö6_πmsg


60 
ö6_addr
 
	mπmsg_d°
;

61 
ö6_addr
 
	mπmsg_§c
;

62 
ö6_addr
 
	mπmsg_g©eway
;

63 
u_öt32_t
 
	mπmsg_ty≥
;

64 
u_öt16_t
 
	mπmsg_d°_Àn
;

65 
u_öt16_t
 
	mπmsg_§c_Àn
;

66 
u_öt32_t
 
	mπmsg_mëric
;

67 
	mπmsg_öfo
;

68 
u_öt32_t
 
	mπmsg_Êags
;

69 
	mπmsg_ifödex
;

73 
	#RTF_UP
 0x0001

	)

74 
	#RTF_GATEWAY
 0x0002

	)

76 
	#RTF_HOST
 0x0004

	)

77 
	#RTF_REINSTATE
 0x0008

	)

78 
	#RTF_DYNAMIC
 0x0010

	)

79 
	#RTF_MODIFIED
 0x0020

	)

80 
	#RTF_MTU
 0x0040

	)

81 
	#RTF_MSS
 
RTF_MTU


	)

82 
	#RTF_WINDOW
 0x0080

	)

83 
	#RTF_IRTT
 0x0100

	)

84 
	#RTF_REJECT
 0x0200

	)

85 
	#RTF_STATIC
 0x0400

	)

86 
	#RTF_XRESOLVE
 0x0800

	)

87 
	#RTF_NOFORWARD
 0x1000

	)

88 
	#RTF_THROW
 0x2000

	)

89 
	#RTF_NOPMTUDISC
 0x4000

	)

92 
	#RTF_DEFAULT
 0x00010000

	)

93 
	#RTF_ALLONLINK
 0x00020000

	)

94 
	#RTF_ADDRCONF
 0x00040000

	)

96 
	#RTF_LINKRT
 0x00100000

	)

97 
	#RTF_NONEXTHOP
 0x00200000

	)

99 
	#RTF_CACHE
 0x01000000

	)

100 
	#RTF_FLOW
 0x02000000

	)

101 
	#RTF_POLICY
 0x04000000

	)

103 
	#RTCF_VALVE
 0x00200000

	)

104 
	#RTCF_MASQ
 0x00400000

	)

105 
	#RTCF_NAT
 0x00800000

	)

106 
	#RTCF_DOREDIRECT
 0x01000000

	)

107 
	#RTCF_LOG
 0x02000000

	)

108 
	#RTCF_DIRECTSRC
 0x04000000

	)

110 
	#RTF_LOCAL
 0x80000000

	)

111 
	#RTF_INTERFACE
 0x40000000

	)

112 
	#RTF_MULTICAST
 0x20000000

	)

113 
	#RTF_BROADCAST
 0x10000000

	)

114 
	#RTF_NAT
 0x08000000

	)

116 
	#RTF_ADDRCLASSMASK
 0xF8000000

	)

117 
	#RT_ADDRCLASS
(
Êags
Ë((
__u_öt32_t
ËÊag†>> 23)

	)

119 
	#RT_TOS
(
tos
Ë(—osË& 
IPTOS_TOS_MASK
)

	)

121 
	#RT_LOCALADDR
(
Êags
Ë((Êag†& 
RTF_ADDRCLASSMASK
) \

122 =(
RTF_LOCAL
|
RTF_INTERFACE
))

	)

124 
	#RT_CLASS_UNSPEC
 0

	)

125 
	#RT_CLASS_DEFAULT
 253

	)

127 
	#RT_CLASS_MAIN
 254

	)

128 
	#RT_CLASS_LOCAL
 255

	)

129 
	#RT_CLASS_MAX
 255

	)

132 
	#RTMSG_ACK
 
NLMSG_ACK


	)

133 
	#RTMSG_OVERRUN
 
NLMSG_OVERRUN


	)

135 
	#RTMSG_NEWDEVICE
 0x11

	)

136 
	#RTMSG_DELDEVICE
 0x12

	)

137 
	#RTMSG_NEWROUTE
 0x21

	)

138 
	#RTMSG_DELROUTE
 0x22

	)

139 
	#RTMSG_NEWRULE
 0x31

	)

140 
	#RTMSG_DELRULE
 0x32

	)

141 
	#RTMSG_CONTROL
 0x40

	)

143 
	#RTMSG_AR_FAILED
 0x51

	)

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


56 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


59 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

62 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

66 
	#HOST_NOT_FOUND
 1

	)

67 
	#TRY_AGAIN
 2

	)

69 
	#NO_RECOVERY
 3

	)

71 
	#NO_DATA
 4

	)

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


75 
	#NETDB_INTERNAL
 -1

	)

76 
	#NETDB_SUCCESS
 0

	)

77 
	#NO_ADDRESS
 
NO_DATA


	)

80 #ifde‡
__USE_XOPEN2K


82 
	#IPPORT_RESERVED
 1024

	)

85 #ifde‡
__USE_GNU


87 
	#SCOPE_DELIMITER
 '%'

	)

90 #ifde‡
__USE_MISC


93 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

96 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

101 
	sho°ít


103 *
h_«me
;

104 **
h_Æü£s
;

105 
h_addπy≥
;

106 
h_Àngth
;

107 **
h_addr_li°
;

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


109 
	#h_addr
 
h_addr_li°
[0]

	)

118 
	`£tho°ít
 (
__°ay_›í
);

124 
	`ídho°ít
 ();

131 
ho°ít
 *
	`gëho°ít
 ();

138 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

139 
__ty≥
);

145 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

147 #ifde‡
__USE_MISC


156 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

168 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

174 
__ty≥
,

175 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

176 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

177 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

178 *
__ª°ri˘
 
__h_î∫›
);

180 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

181 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

182 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

183 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

184 *
__ª°ri˘
 
__h_î∫›
);

186 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

187 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

188 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

189 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

190 *
__ª°ri˘
 
__h_î∫›
);

199 
	`£äëít
 (
__°ay_›í
);

205 
	`íd√ã¡
 ();

212 
√ã¡
 *
	`gë√ã¡
 ();

219 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

225 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

227 #ifdef 
__USE_MISC


238 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

239 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

240 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

241 *
__ª°ri˘
 
__h_î∫›
);

243 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

244 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

245 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

246 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

247 *
__ª°ri˘
 
__h_î∫›
);

249 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

250 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

251 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

252 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

253 *
__ª°ri˘
 
__h_î∫›
);

258 
	s£rvít


260 *
s_«me
;

261 **
s_Æü£s
;

262 
s_p‹t
;

263 *
s_¥Ÿo
;

271 
	`£t£rvít
 (
__°ay_›í
);

277 
	`íd£rvít
 ();

284 
£rvít
 *
	`gë£rvít
 ();

291 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

292 
__c⁄°
 *
__¥Ÿo
);

299 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

302 #ifdef 
__USE_MISC


310 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

311 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

312 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

314 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

315 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

316 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

317 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

318 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

320 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

321 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

322 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

323 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

328 
	s¥Ÿ€¡


330 *
p_«me
;

331 **
p_Æü£s
;

332 
p_¥Ÿo
;

340 
	`£çrŸ€¡
 (
__°ay_›í
);

346 
	`íd¥Ÿ€¡
 ();

353 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

359 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

365 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

368 #ifdef 
__USE_MISC


376 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

377 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

378 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

380 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

381 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

382 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

383 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

385 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

386 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

387 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

388 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

397 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

405 
	`íd√tgª¡
 ();

414 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

415 **
__ª°ri˘
 
__u£Ω
,

416 **
__ª°ri˘
 
__domaöp
);

425 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

426 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

434 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

435 **
__ª°ri˘
 
__u£Ω
,

436 **
__ª°ri˘
 
__domaöp
,

437 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

441 #ifde‡
__USE_BSD


453 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

454 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

455 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

456 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

465 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

466 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

467 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

468 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

469 
ß_Ámûy_t
 
__af
);

481 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

482 
__c⁄°
 *
__ª°ri˘
 
__«me
,

483 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

484 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

493 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

494 
__c⁄°
 *
__ª°ri˘
 
__«me
,

495 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

496 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

497 
ß_Ámûy_t
 
__af
);

507 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

508 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

517 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

518 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

519 
ß_Ámûy_t
 
__af
);

530 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

531 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

541 
	`úu£rok_af
 (
__c⁄°
 *
__øddr
, 
__su£r
,

542 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

543 
ß_Ámûy_t
 
__af
);

553 
	`ºesvp‹t
 (*
__Æp‹t
);

562 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

567 #ifdef 
__USE_POSIX


569 
	saddröfo


571 
ai_Êags
;

572 
ai_Ámûy
;

573 
ai_sockty≥
;

574 
ai_¥Ÿocﬁ
;

575 
sockÀn_t
 
ai_addæí
;

576 
sockaddr
 *
ai_addr
;

577 *
ai_ˇn⁄«me
;

578 
addröfo
 *
ai_√xt
;

581 #ifde‡
__USE_GNU


583 
	sgaicb


585 c⁄° *
¨_«me
;

586 c⁄° *
¨_£rvi˚
;

587 c⁄° 
addröfo
 *
¨_ªque°
;

588 
addröfo
 *
¨_ªsu…
;

590 
__ªtu∫
;

591 
__unu£d
[5];

595 
	#GAI_WAIT
 0

	)

596 
	#GAI_NOWAIT
 1

	)

600 
	#AI_PASSIVE
 0x0001

	)

601 
	#AI_CANONNAME
 0x0002

	)

602 
	#AI_NUMERICHOST
 0x0004

	)

603 
	#AI_V4MAPPED
 0x0008

	)

604 
	#AI_ALL
 0x0010

	)

605 
	#AI_ADDRCONFIG
 0x0020

	)

607 #ifde‡
__USE_GNU


608 
	#AI_IDN
 0x0040

	)

611 
	#AI_CANONIDN
 0x0080

	)

612 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

614 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

617 
	#AI_NUMERICSERV
 0x0400

	)

620 
	#EAI_BADFLAGS
 -1

	)

621 
	#EAI_NONAME
 -2

	)

622 
	#EAI_AGAIN
 -3

	)

623 
	#EAI_FAIL
 -4

	)

624 
	#EAI_FAMILY
 -6

	)

625 
	#EAI_SOCKTYPE
 -7

	)

626 
	#EAI_SERVICE
 -8

	)

627 
	#EAI_MEMORY
 -10

	)

628 
	#EAI_SYSTEM
 -11

	)

629 
	#EAI_OVERFLOW
 -12

	)

630 #ifde‡
__USE_GNU


631 
	#EAI_NODATA
 -5

	)

632 
	#EAI_ADDRFAMILY
 -9

	)

633 
	#EAI_INPROGRESS
 -100

	)

634 
	#EAI_CANCELED
 -101

	)

635 
	#EAI_NOTCANCELED
 -102

	)

636 
	#EAI_ALLDONE
 -103

	)

637 
	#EAI_INTR
 -104

	)

638 
	#EAI_IDN_ENCODE
 -105

	)

641 #ifde‡
__USE_MISC


642 
	#NI_MAXHOST
 1025

	)

643 
	#NI_MAXSERV
 32

	)

646 
	#NI_NUMERICHOST
 1

	)

647 
	#NI_NUMERICSERV
 2

	)

648 
	#NI_NOFQDN
 4

	)

649 
	#NI_NAMEREQD
 8

	)

650 
	#NI_DGRAM
 16

	)

651 #ifde‡
__USE_GNU


652 
	#NI_IDN
 32

	)

653 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

655 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

664 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

665 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

666 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

667 
addröfo
 **
__ª°ri˘
 
__∑i
);

670 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

673 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

679 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

680 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

681 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

682 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

685 #ifde‡
__USE_GNU


694 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

695 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

705 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

706 
__c⁄°
 
time•ec
 *
__timeout
);

709 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

712 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

715 
__END_DECLS


	@/usr/include/netinet/icmp6.h

19 #i‚de‡
_NETINET_ICMP6_H


20 
	#_NETINET_ICMP6_H
 1

	)

22 
	~<öây≥s.h
>

23 
	~<°rög.h
>

24 
	~<sys/ty≥s.h
>

25 
	~<√töë/ö.h
>

27 
	#ICMP6_FILTER
 1

	)

29 
	#ICMP6_FILTER_BLOCK
 1

	)

30 
	#ICMP6_FILTER_PASS
 2

	)

31 
	#ICMP6_FILTER_BLOCKOTHERS
 3

	)

32 
	#ICMP6_FILTER_PASSONLY
 4

	)

34 
	sicmp6_fûãr


36 
uöt32_t
 
	micmp6_fût
[8];

39 
	sicmp6_hdr


41 
uöt8_t
 
	micmp6_ty≥
;

42 
uöt8_t
 
	micmp6_code
;

43 
uöt16_t
 
	micmp6_cksum
;

46 
uöt32_t
 
	micmp6_un_d©a32
[1];

47 
uöt16_t
 
	micmp6_un_d©a16
[2];

48 
uöt8_t
 
	micmp6_un_d©a8
[4];

49 } 
	micmp6_d©aun
;

52 
	#icmp6_d©a32
 
icmp6_d©aun
.
icmp6_un_d©a32


	)

53 
	#icmp6_d©a16
 
icmp6_d©aun
.
icmp6_un_d©a16


	)

54 
	#icmp6_d©a8
 
icmp6_d©aun
.
icmp6_un_d©a8


	)

55 
	#icmp6_µå
 
icmp6_d©a32
[0]

	)

56 
	#icmp6_mtu
 
icmp6_d©a32
[0]

	)

57 
	#icmp6_id
 
icmp6_d©a16
[0]

	)

58 
	#icmp6_£q
 
icmp6_d©a16
[1]

	)

59 
	#icmp6_maxdñay
 
icmp6_d©a16
[0]

	)

61 
	#ICMP6_DST_UNREACH
 1

	)

62 
	#ICMP6_PACKET_TOO_BIG
 2

	)

63 
	#ICMP6_TIME_EXCEEDED
 3

	)

64 
	#ICMP6_PARAM_PROB
 4

	)

66 
	#ICMP6_INFOMSG_MASK
 0x80

	)

68 
	#ICMP6_ECHO_REQUEST
 128

	)

69 
	#ICMP6_ECHO_REPLY
 129

	)

70 
	#MLD_LISTENER_QUERY
 130

	)

71 
	#MLD_LISTENER_REPORT
 131

	)

72 
	#MLD_LISTENER_REDUCTION
 132

	)

74 
	#ICMP6_DST_UNREACH_NOROUTE
 0

	)

75 
	#ICMP6_DST_UNREACH_ADMIN
 1

	)

77 
	#ICMP6_DST_UNREACH_BEYONDSCOPE
 2

	)

78 
	#ICMP6_DST_UNREACH_ADDR
 3

	)

79 
	#ICMP6_DST_UNREACH_NOPORT
 4

	)

81 
	#ICMP6_TIME_EXCEED_TRANSIT
 0

	)

82 
	#ICMP6_TIME_EXCEED_REASSEMBLY
 1

	)

84 
	#ICMP6_PARAMPROB_HEADER
 0

	)

85 
	#ICMP6_PARAMPROB_NEXTHEADER
 1

	)

86 
	#ICMP6_PARAMPROB_OPTION
 2

	)

88 
	#ICMP6_FILTER_WILLPASS
(
ty≥
, 
fûãΩ
) \

89 ((((
fûãΩ
)->
icmp6_fût
[(
ty≥
Ë>> 5]Ë& (1 << (—y≥Ë& 31))Ë=0)

	)

91 
	#ICMP6_FILTER_WILLBLOCK
(
ty≥
, 
fûãΩ
) \

92 ((((
fûãΩ
)->
icmp6_fût
[(
ty≥
Ë>> 5]Ë& (1 << (—y≥Ë& 31))Ë!0)

	)

94 
	#ICMP6_FILTER_SETPASS
(
ty≥
, 
fûãΩ
) \

95 ((((
fûãΩ
)->
icmp6_fût
[(
ty≥
Ë>> 5]Ë&~(1 << (—y≥Ë& 31))))

	)

97 
	#ICMP6_FILTER_SETBLOCK
(
ty≥
, 
fûãΩ
) \

98 ((((
fûãΩ
)->
icmp6_fût
[(
ty≥
Ë>> 5]Ë|(1 << (—y≥Ë& 31))))

	)

100 
	#ICMP6_FILTER_SETPASSALL
(
fûãΩ
) \

101 
	`mem£t
 (
fûãΩ
, 0,  (
icmp6_fûãr
));

	)

103 
	#ICMP6_FILTER_SETBLOCKALL
(
fûãΩ
) \

104 
	`mem£t
 (
fûãΩ
, 0xFF,  (
icmp6_fûãr
));

	)

106 
	#ND_ROUTER_SOLICIT
 133

	)

107 
	#ND_ROUTER_ADVERT
 134

	)

108 
	#ND_NEIGHBOR_SOLICIT
 135

	)

109 
	#ND_NEIGHBOR_ADVERT
 136

	)

110 
	#ND_REDIRECT
 137

	)

112 
	snd_rouãr_sﬁicô


114 
icmp6_hdr
 
	mnd_rs_hdr
;

118 
	#nd_rs_ty≥
 
nd_rs_hdr
.
icmp6_ty≥


	)

119 
	#nd_rs_code
 
nd_rs_hdr
.
icmp6_code


	)

120 
	#nd_rs_cksum
 
nd_rs_hdr
.
icmp6_cksum


	)

121 
	#nd_rs_ª£rved
 
nd_rs_hdr
.
icmp6_d©a32
[0]

	)

123 
	snd_rouãr_advît


125 
icmp6_hdr
 
	mnd_ø_hdr
;

126 
uöt32_t
 
	mnd_ø_ªachabÀ
;

127 
uöt32_t
 
	mnd_ø_ªå™smô
;

131 
	#nd_ø_ty≥
 
nd_ø_hdr
.
icmp6_ty≥


	)

132 
	#nd_ø_code
 
nd_ø_hdr
.
icmp6_code


	)

133 
	#nd_ø_cksum
 
nd_ø_hdr
.
icmp6_cksum


	)

134 
	#nd_ø_curh›limô
 
nd_ø_hdr
.
icmp6_d©a8
[0]

	)

135 
	#nd_ø_Êags_ª£rved
 
nd_ø_hdr
.
icmp6_d©a8
[1]

	)

136 
	#ND_RA_FLAG_MANAGED
 0x80

	)

137 
	#ND_RA_FLAG_OTHER
 0x40

	)

138 
	#ND_RA_FLAG_HOME_AGENT
 0x20

	)

139 
	#nd_ø_rouãr_li„time
 
nd_ø_hdr
.
icmp6_d©a16
[1]

	)

141 
	snd_√ighb‹_sﬁicô


143 
icmp6_hdr
 
	mnd_ns_hdr
;

144 
ö6_addr
 
	mnd_ns_èrgë
;

148 
	#nd_ns_ty≥
 
nd_ns_hdr
.
icmp6_ty≥


	)

149 
	#nd_ns_code
 
nd_ns_hdr
.
icmp6_code


	)

150 
	#nd_ns_cksum
 
nd_ns_hdr
.
icmp6_cksum


	)

151 
	#nd_ns_ª£rved
 
nd_ns_hdr
.
icmp6_d©a32
[0]

	)

153 
	snd_√ighb‹_advît


155 
icmp6_hdr
 
	mnd_«_hdr
;

156 
ö6_addr
 
	mnd_«_èrgë
;

160 
	#nd_«_ty≥
 
nd_«_hdr
.
icmp6_ty≥


	)

161 
	#nd_«_code
 
nd_«_hdr
.
icmp6_code


	)

162 
	#nd_«_cksum
 
nd_«_hdr
.
icmp6_cksum


	)

163 
	#nd_«_Êags_ª£rved
 
nd_«_hdr
.
icmp6_d©a32
[0]

	)

164 #i‡ 
BYTE_ORDER
 =
BIG_ENDIAN


165 
	#ND_NA_FLAG_ROUTER
 0x80000000

	)

166 
	#ND_NA_FLAG_SOLICITED
 0x40000000

	)

167 
	#ND_NA_FLAG_OVERRIDE
 0x20000000

	)

169 
	#ND_NA_FLAG_ROUTER
 0x00000080

	)

170 
	#ND_NA_FLAG_SOLICITED
 0x00000040

	)

171 
	#ND_NA_FLAG_OVERRIDE
 0x00000020

	)

174 
	snd_ªdúe˘


176 
icmp6_hdr
 
	mnd_rd_hdr
;

177 
ö6_addr
 
	mnd_rd_èrgë
;

178 
ö6_addr
 
	mnd_rd_d°
;

182 
	#nd_rd_ty≥
 
nd_rd_hdr
.
icmp6_ty≥


	)

183 
	#nd_rd_code
 
nd_rd_hdr
.
icmp6_code


	)

184 
	#nd_rd_cksum
 
nd_rd_hdr
.
icmp6_cksum


	)

185 
	#nd_rd_ª£rved
 
nd_rd_hdr
.
icmp6_d©a32
[0]

	)

187 
	snd_›t_hdr


189 
uöt8_t
 
	mnd_›t_ty≥
;

190 
uöt8_t
 
	mnd_›t_Àn
;

194 
	#ND_OPT_SOURCE_LINKADDR
 1

	)

195 
	#ND_OPT_TARGET_LINKADDR
 2

	)

196 
	#ND_OPT_PREFIX_INFORMATION
 3

	)

197 
	#ND_OPT_REDIRECTED_HEADER
 4

	)

198 
	#ND_OPT_MTU
 5

	)

199 
	#ND_OPT_RTR_ADV_INTERVAL
 7

	)

200 
	#ND_OPT_HOME_AGENT_INFO
 8

	)

202 
	snd_›t_¥efix_öfo


204 
uöt8_t
 
	mnd_›t_pi_ty≥
;

205 
uöt8_t
 
	mnd_›t_pi_Àn
;

206 
uöt8_t
 
	mnd_›t_pi_¥efix_Àn
;

207 
uöt8_t
 
	mnd_›t_pi_Êags_ª£rved
;

208 
uöt32_t
 
	mnd_›t_pi_vÆid_time
;

209 
uöt32_t
 
	mnd_›t_pi_¥e„ºed_time
;

210 
uöt32_t
 
	mnd_›t_pi_ª£rved2
;

211 
ö6_addr
 
	mnd_›t_pi_¥efix
;

214 
	#ND_OPT_PI_FLAG_ONLINK
 0x80

	)

215 
	#ND_OPT_PI_FLAG_AUTO
 0x40

	)

216 
	#ND_OPT_PI_FLAG_RADDR
 0x20

	)

218 
	snd_›t_rd_hdr


220 
uöt8_t
 
	mnd_›t_rh_ty≥
;

221 
uöt8_t
 
	mnd_›t_rh_Àn
;

222 
uöt16_t
 
	mnd_›t_rh_ª£rved1
;

223 
uöt32_t
 
	mnd_›t_rh_ª£rved2
;

227 
	snd_›t_mtu


229 
uöt8_t
 
	mnd_›t_mtu_ty≥
;

230 
uöt8_t
 
	mnd_›t_mtu_Àn
;

231 
uöt16_t
 
	mnd_›t_mtu_ª£rved
;

232 
uöt32_t
 
	mnd_›t_mtu_mtu
;

235 
	smld_hdr


237 
icmp6_hdr
 
	mmld_icmp6_hdr
;

238 
ö6_addr
 
	mmld_addr
;

241 
	#mld_ty≥
 
mld_icmp6_hdr
.
icmp6_ty≥


	)

242 
	#mld_code
 
mld_icmp6_hdr
.
icmp6_code


	)

243 
	#mld_cksum
 
mld_icmp6_hdr
.
icmp6_cksum


	)

244 
	#mld_maxdñay
 
mld_icmp6_hdr
.
icmp6_d©a16
[0]

	)

245 
	#mld_ª£rved
 
mld_icmp6_hdr
.
icmp6_d©a16
[1]

	)

247 
	#ICMP6_ROUTER_RENUMBERING
 138

	)

249 
	sicmp6_rouãr_ªnum


251 
icmp6_hdr
 
	mº_hdr
;

252 
uöt8_t
 
	mº_£gnum
;

253 
uöt8_t
 
	mº_Êags
;

254 
uöt16_t
 
	mº_maxdñay
;

255 
uöt32_t
 
	mº_ª£rved
;

258 
	#º_ty≥
 
º_hdr
.
icmp6_ty≥


	)

259 
	#º_code
 
º_hdr
.
icmp6_code


	)

260 
	#º_cksum
 
º_hdr
.
icmp6_cksum


	)

261 
	#º_£qnum
 
º_hdr
.
icmp6_d©a32
[0]

	)

264 
	#ICMP6_RR_FLAGS_TEST
 0x80

	)

265 
	#ICMP6_RR_FLAGS_REQRESULT
 0x40

	)

266 
	#ICMP6_RR_FLAGS_FORCEAPPLY
 0x20

	)

267 
	#ICMP6_RR_FLAGS_SPECSITE
 0x10

	)

268 
	#ICMP6_RR_FLAGS_PREVDONE
 0x08

	)

270 
	sº_pco_m©ch


272 
uöt8_t
 
	mΩm_code
;

273 
uöt8_t
 
	mΩm_Àn
;

274 
uöt8_t
 
	mΩm_‹döÆ
;

275 
uöt8_t
 
	mΩm_m©chÀn
;

276 
uöt8_t
 
	mΩm_möÀn
;

277 
uöt8_t
 
	mΩm_maxÀn
;

278 
uöt16_t
 
	mΩm_ª£rved
;

279 
ö6_addr
 
	mΩm_¥efix
;

283 
	#RPM_PCO_ADD
 1

	)

284 
	#RPM_PCO_CHANGE
 2

	)

285 
	#RPM_PCO_SETGLOBAL
 3

	)

287 
	sº_pco_u£


289 
uöt8_t
 
	mΩu_u£Àn
;

290 
uöt8_t
 
	mΩu_kì∂í
;

291 
uöt8_t
 
	mΩu_ømask
;

292 
uöt8_t
 
	mΩu_øÊags
;

293 
uöt32_t
 
	mΩu_v…ime
;

294 
uöt32_t
 
	mΩu_∂time
;

295 
uöt32_t
 
	mΩu_Êags
;

296 
ö6_addr
 
	mΩu_¥efix
;

299 
	#ICMP6_RR_PCOUSE_RAFLAGS_ONLINK
 0x20

	)

300 
	#ICMP6_RR_PCOUSE_RAFLAGS_AUTO
 0x10

	)

302 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


303 
	#ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME
 0x80000000

	)

304 
	#ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME
 0x40000000

	)

305 #ñi‡
BYTE_ORDER
 =
LITTLE_ENDIAN


306 
	#ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME
 0x80

	)

307 
	#ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME
 0x40

	)

310 
	sº_ªsu…


312 
uöt16_t
 
	mºr_Êags
;

313 
uöt8_t
 
	mºr_‹döÆ
;

314 
uöt8_t
 
	mºr_m©chedÀn
;

315 
uöt32_t
 
	mºr_ifid
;

316 
ö6_addr
 
	mºr_¥efix
;

319 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


320 
	#ICMP6_RR_RESULT_FLAGS_OOB
 0x0002

	)

321 
	#ICMP6_RR_RESULT_FLAGS_FORBIDDEN
 0x0001

	)

322 #ñi‡
BYTE_ORDER
 =
LITTLE_ENDIAN


323 
	#ICMP6_RR_RESULT_FLAGS_OOB
 0x0200

	)

324 
	#ICMP6_RR_RESULT_FLAGS_FORBIDDEN
 0x0100

	)

328 
	snd_›t_adv_öãrvÆ


330 
uöt8_t
 
	mnd_›t_adv_öãrvÆ_ty≥
;

331 
uöt8_t
 
	mnd_›t_adv_öãrvÆ_Àn
;

332 
uöt16_t
 
	mnd_›t_adv_öãrvÆ_ª£rved
;

333 
uöt32_t
 
	mnd_›t_adv_öãrvÆ_ivÆ
;

337 
	snd_›t_home_agít_öfo


339 
uöt8_t
 
	mnd_›t_home_agít_öfo_ty≥
;

340 
uöt8_t
 
	mnd_›t_home_agít_öfo_Àn
;

341 
uöt16_t
 
	mnd_›t_home_agít_öfo_ª£rved
;

342 
uöt16_t
 
	mnd_›t_home_agít_öfo_¥e„ªn˚
;

343 
uöt16_t
 
	mnd_›t_home_agít_öfo_li„time
;

	@/usr/include/netinet/if_ether.h

19 #i‚de‡
__NETINET_IF_ETHER_H


21 
	#__NETINET_IF_ETHER_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

26 
	~<löux/if_ëhî.h
>

28 #ifde‡
__USE_BSD


61 
	~<√t/ëhî√t.h
>

62 
	~<√t/if_¨p.h
>

64 
__BEGIN_DECLS


72 
	sëhî_¨p
 {

73 
¨phdr
 
	mó_hdr
;

74 
u_öt8_t
 
	m¨p_sha
[
ETH_ALEN
];

75 
u_öt8_t
 
	m¨p_•a
[4];

76 
u_öt8_t
 
	m¨p_tha
[
ETH_ALEN
];

77 
u_öt8_t
 
	m¨p_ça
[4];

79 
	#¨p_hrd
 
ó_hdr
.
¨_hrd


	)

80 
	#¨p_¥o
 
ó_hdr
.
¨_¥o


	)

81 
	#¨p_h 
 
ó_hdr
.
¨_h 


	)

82 
	#¨p_∂n
 
ó_hdr
.
¨_∂n


	)

83 
	#¨p_›
 
ó_hdr
.
¨_›


	)

90 
	#ETHER_MAP_IP_MULTICAST
(
ùaddr
, 
íaddr
) \

94 (
íaddr
)[0] = 0x01; \

95 (
íaddr
)[1] = 0x00; \

96 (
íaddr
)[2] = 0x5e; \

97 (
íaddr
)[3] = ((
u_öt8_t
 *)
ùaddr
)[1] & 0x7f; \

98 (
íaddr
)[4] = ((
u_öt8_t
 *)
ùaddr
)[2]; \

99 (
íaddr
)[5] = ((
u_öt8_t
 *)
ùaddr
)[3]; \

100 }

	)

102 
	g__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/netinet/in_systm.h

20 #i‚de‡
_NETINET_IN_SYSTM_H


21 
	#_NETINET_IN_SYSTM_H
 1

	)

23 
	~<sys/cdefs.h
>

24 
	~<sys/ty≥s.h
>

26 
__BEGIN_DECLS


35 
u_öt16_t
 
	tn_sh‹t
;

36 
u_öt32_t
 
	tn_l⁄g
;

37 
u_öt32_t
 
	tn_time
;

39 
	g__END_DECLS


	@/usr/include/netinet/ip.h

19 #i‚de‡
__NETINET_IP_H


20 
	#__NETINET_IP_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<sys/ty≥s.h
>

25 
	~<√töë/ö.h
>

27 
__BEGIN_DECLS


29 
	stime°amp


31 
u_öt8_t
 
	mÀn
;

32 
u_öt8_t
 
	m±r
;

33 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


34 
	mÊags
:4;

35 
	movîÊow
:4;

36 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


37 
	movîÊow
:4;

38 
	mÊags
:4;

42 
u_öt32_t
 
	md©a
[9];

45 
	sùhdr


47 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


48 
	mihl
:4;

49 
	mvîsi⁄
:4;

50 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


51 
	mvîsi⁄
:4;

52 
	mihl
:4;

56 
u_öt8_t
 
	mtos
;

57 
u_öt16_t
 
	mtŸ_Àn
;

58 
u_öt16_t
 
	mid
;

59 
u_öt16_t
 
	m‰ag_off
;

60 
u_öt8_t
 
	mâl
;

61 
u_öt8_t
 
	m¥Ÿocﬁ
;

62 
u_öt16_t
 
	mcheck
;

63 
u_öt32_t
 
	mßddr
;

64 
u_öt32_t
 
	mdaddr
;

68 #ifde‡
__USE_BSD


108 
	sù


110 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


111 
	mù_hl
:4;

112 
	mù_v
:4;

114 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


115 
	mù_v
:4;

116 
	mù_hl
:4;

118 
u_öt8_t
 
	mù_tos
;

119 
u_sh‹t
 
	mù_Àn
;

120 
u_sh‹t
 
	mù_id
;

121 
u_sh‹t
 
	mù_off
;

122 
	#IP_RF
 0x8000

	)

123 
	#IP_DF
 0x4000

	)

124 
	#IP_MF
 0x2000

	)

125 
	#IP_OFFMASK
 0x1ff‡

	)

126 
u_öt8_t
 
	mù_âl
;

127 
u_öt8_t
 
	mù_p
;

128 
u_sh‹t
 
	mù_sum
;

129 
ö_addr
 
	mù_§c
, 
	mù_d°
;

135 
	sù_time°amp


137 
u_öt8_t
 
	mùt_code
;

138 
u_öt8_t
 
	mùt_Àn
;

139 
u_öt8_t
 
	mùt_±r
;

140 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


141 
	mùt_Êg
:4;

142 
	mùt_oÊw
:4;

144 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


145 
	mùt_oÊw
:4;

146 
	mùt_Êg
:4;

148 
u_öt32_t
 
	md©a
[9];

152 
	#IPVERSION
 4

	)

153 
	#IP_MAXPACKET
 65535

	)

161 
	#IPTOS_ECN_MASK
 0x03

	)

162 
	#IPTOS_ECN
(
x
Ë((xË& 
IPTOS_ECN_MASK
)

	)

163 
	#IPTOS_ECN_NOT_ECT
 0x00

	)

164 
	#IPTOS_ECN_ECT1
 0x01

	)

165 
	#IPTOS_ECN_ECT0
 0x02

	)

166 
	#IPTOS_ECN_CE
 0x03

	)

174 
	#IPTOS_DSCP_MASK
 0xfc

	)

175 
	#IPTOS_DSCP
(
x
Ë((xË& 
IPTOS_DSCP_MASK
)

	)

176 
	#IPTOS_DSCP_AF11
 0x28

	)

177 
	#IPTOS_DSCP_AF12
 0x30

	)

178 
	#IPTOS_DSCP_AF13
 0x38

	)

179 
	#IPTOS_DSCP_AF21
 0x48

	)

180 
	#IPTOS_DSCP_AF22
 0x50

	)

181 
	#IPTOS_DSCP_AF23
 0x58

	)

182 
	#IPTOS_DSCP_AF31
 0x68

	)

183 
	#IPTOS_DSCP_AF32
 0x70

	)

184 
	#IPTOS_DSCP_AF33
 0x78

	)

185 
	#IPTOS_DSCP_AF41
 0x88

	)

186 
	#IPTOS_DSCP_AF42
 0x90

	)

187 
	#IPTOS_DSCP_AF43
 0x98

	)

188 
	#IPTOS_DSCP_EF
 0xb8

	)

195 
	#IPTOS_CLASS_MASK
 0xe0

	)

196 
	#IPTOS_CLASS
(
˛ass
Ë((˛assË& 
IPTOS_CLASS_MASK
)

	)

197 
	#IPTOS_CLASS_CS0
 0x00

	)

198 
	#IPTOS_CLASS_CS1
 0x20

	)

199 
	#IPTOS_CLASS_CS2
 0x40

	)

200 
	#IPTOS_CLASS_CS3
 0x60

	)

201 
	#IPTOS_CLASS_CS4
 0x80

	)

202 
	#IPTOS_CLASS_CS5
 0xa0

	)

203 
	#IPTOS_CLASS_CS6
 0xc0

	)

204 
	#IPTOS_CLASS_CS7
 0xe0

	)

206 
	#IPTOS_CLASS_DEFAULT
 
IPTOS_CLASS_CS0


	)

212 
	#IPTOS_TOS_MASK
 0x1E

	)

213 
	#IPTOS_TOS
(
tos
Ë(—osË& 
IPTOS_TOS_MASK
)

	)

214 
	#IPTOS_LOWDELAY
 0x10

	)

215 
	#IPTOS_THROUGHPUT
 0x08

	)

216 
	#IPTOS_RELIABILITY
 0x04

	)

217 
	#IPTOS_LOWCOST
 0x02

	)

218 
	#IPTOS_MINCOST
 
IPTOS_LOWCOST


	)

223 
	#IPTOS_PREC_MASK
 
IPTOS_CLASS_MASK


	)

224 
	#IPTOS_PREC
(
tos
Ë
	`IPTOS_CLASS
—os)

	)

225 
	#IPTOS_PREC_NETCONTROL
 
IPTOS_CLASS_CS7


	)

226 
	#IPTOS_PREC_INTERNETCONTROL
 
IPTOS_CLASS_CS6


	)

227 
	#IPTOS_PREC_CRITIC_ECP
 
IPTOS_CLASS_CS5


	)

228 
	#IPTOS_PREC_FLASHOVERRIDE
 
IPTOS_CLASS_CS4


	)

229 
	#IPTOS_PREC_FLASH
 
IPTOS_CLASS_CS3


	)

230 
	#IPTOS_PREC_IMMEDIATE
 
IPTOS_CLASS_CS2


	)

231 
	#IPTOS_PREC_PRIORITY
 
IPTOS_CLASS_CS1


	)

232 
	#IPTOS_PREC_ROUTINE
 
IPTOS_CLASS_CS0


	)

237 
	#IPOPT_COPY
 0x80

	)

238 
	#IPOPT_CLASS_MASK
 0x60

	)

239 
	#IPOPT_NUMBER_MASK
 0x1f

	)

241 
	#IPOPT_COPIED
(
o
Ë((oË& 
IPOPT_COPY
)

	)

242 
	#IPOPT_CLASS
(
o
Ë((oË& 
IPOPT_CLASS_MASK
)

	)

243 
	#IPOPT_NUMBER
(
o
Ë((oË& 
IPOPT_NUMBER_MASK
)

	)

245 
	#IPOPT_CONTROL
 0x00

	)

246 
	#IPOPT_RESERVED1
 0x20

	)

247 
	#IPOPT_DEBMEAS
 0x40

	)

248 
	#IPOPT_MEASUREMENT
 
IPOPT_DEBMEAS


	)

249 
	#IPOPT_RESERVED2
 0x60

	)

251 
	#IPOPT_EOL
 0

	)

252 
	#IPOPT_END
 
IPOPT_EOL


	)

253 
	#IPOPT_NOP
 1

	)

254 
	#IPOPT_NOOP
 
IPOPT_NOP


	)

256 
	#IPOPT_RR
 7

	)

257 
	#IPOPT_TS
 68

	)

258 
	#IPOPT_TIMESTAMP
 
IPOPT_TS


	)

259 
	#IPOPT_SECURITY
 130

	)

260 
	#IPOPT_SEC
 
IPOPT_SECURITY


	)

261 
	#IPOPT_LSRR
 131

	)

262 
	#IPOPT_SATID
 136

	)

263 
	#IPOPT_SID
 
IPOPT_SATID


	)

264 
	#IPOPT_SSRR
 137

	)

265 
	#IPOPT_RA
 148

	)

270 
	#IPOPT_OPTVAL
 0

	)

271 
	#IPOPT_OLEN
 1

	)

272 
	#IPOPT_OFFSET
 2

	)

273 
	#IPOPT_MINOFF
 4

	)

275 
	#MAX_IPOPTLEN
 40

	)

278 
	#IPOPT_TS_TSONLY
 0

	)

279 
	#IPOPT_TS_TSANDADDR
 1

	)

280 
	#IPOPT_TS_PRESPEC
 3

	)

283 
	#IPOPT_SECUR_UNCLASS
 0x0000

	)

284 
	#IPOPT_SECUR_CONFID
 0xf135

	)

285 
	#IPOPT_SECUR_EFTO
 0x789a

	)

286 
	#IPOPT_SECUR_MMMM
 0xbc4d

	)

287 
	#IPOPT_SECUR_RESTR
 0xaf13

	)

288 
	#IPOPT_SECUR_SECRET
 0xd788

	)

289 
	#IPOPT_SECUR_TOPSECRET
 0x6bc5

	)

294 
	#MAXTTL
 255

	)

295 
	#IPDEFTTL
 64

	)

296 
	#IPFRAGTTL
 60

	)

297 
	#IPTTLDEC
 1

	)

299 
	#IP_MSS
 576

	)

301 
	g__END_DECLS


	@/usr/include/netinet/ip6.h

19 #i‚de‡
_NETINET_IP6_H


20 
	#_NETINET_IP6_H
 1

	)

22 
	~<öây≥s.h
>

23 
	~<√töë/ö.h
>

25 
	sù6_hdr


29 
	sù6_hdr˘l


31 
uöt32_t
 
	mù6_un1_Êow
;

33 
uöt16_t
 
	mù6_un1_∂í
;

34 
uöt8_t
 
	mù6_un1_nxt
;

35 
uöt8_t
 
	mù6_un1_hlim
;

36 } 
	mù6_un1
;

37 
uöt8_t
 
	mù6_un2_vfc
;

38 } 
	mù6_˘lun
;

39 
ö6_addr
 
	mù6_§c
;

40 
ö6_addr
 
	mù6_d°
;

43 
	#ù6_vfc
 
ù6_˘lun
.
ù6_un2_vfc


	)

44 
	#ù6_Êow
 
ù6_˘lun
.
ù6_un1
.
ù6_un1_Êow


	)

45 
	#ù6_∂í
 
ù6_˘lun
.
ù6_un1
.
ù6_un1_∂í


	)

46 
	#ù6_nxt
 
ù6_˘lun
.
ù6_un1
.
ù6_un1_nxt


	)

47 
	#ù6_hlim
 
ù6_˘lun
.
ù6_un1
.
ù6_un1_hlim


	)

48 
	#ù6_h›s
 
ù6_˘lun
.
ù6_un1
.
ù6_un1_hlim


	)

51 
	sù6_ext


53 
uöt8_t
 
	mù6e_nxt
;

54 
uöt8_t
 
	mù6e_Àn
;

58 
	sù6_hbh


60 
uöt8_t
 
	mù6h_nxt
;

61 
uöt8_t
 
	mù6h_Àn
;

66 
	sù6_de°


68 
uöt8_t
 
	mù6d_nxt
;

69 
uöt8_t
 
	mù6d_Àn
;

74 
	sù6_πhdr


76 
uöt8_t
 
	mù6r_nxt
;

77 
uöt8_t
 
	mù6r_Àn
;

78 
uöt8_t
 
	mù6r_ty≥
;

79 
uöt8_t
 
	mù6r_£gÀ·
;

84 
	sù6_πhdr0


86 
uöt8_t
 
	mù6r0_nxt
;

87 
uöt8_t
 
	mù6r0_Àn
;

88 
uöt8_t
 
	mù6r0_ty≥
;

89 
uöt8_t
 
	mù6r0_£gÀ·
;

90 
uöt8_t
 
	mù6r0_ª£rved
;

91 
uöt8_t
 
	mù6r0_¶m≠
[3];

93 
ö6_addr
 
	mù6r0_addr
[0];

97 
	sù6_‰ag


99 
uöt8_t
 
	mù6f_nxt
;

100 
uöt8_t
 
	mù6f_ª£rved
;

101 
uöt16_t
 
	mù6f_ofÊg
;

102 
uöt32_t
 
	mù6f_idít
;

105 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


106 
	#IP6F_OFF_MASK
 0xfff8

	)

107 
	#IP6F_RESERVED_MASK
 0x0006

	)

108 
	#IP6F_MORE_FRAG
 0x0001

	)

110 
	#IP6F_OFF_MASK
 0xf8f‡

	)

111 
	#IP6F_RESERVED_MASK
 0x0600

	)

112 
	#IP6F_MORE_FRAG
 0x0100

	)

116 
	sù6_›t


118 
uöt8_t
 
	mù6o_ty≥
;

119 
uöt8_t
 
	mù6o_Àn
;

126 
	#IP6OPT_TYPE
(
o
Ë((oË& 0xc0)

	)

127 
	#IP6OPT_TYPE_SKIP
 0x00

	)

128 
	#IP6OPT_TYPE_DISCARD
 0x40

	)

129 
	#IP6OPT_TYPE_FORCEICMP
 0x80

	)

130 
	#IP6OPT_TYPE_ICMP
 0xc0

	)

131 
	#IP6OPT_TYPE_MUTABLE
 0x20

	)

134 
	#IP6OPT_PAD1
 0

	)

135 
	#IP6OPT_PADN
 1

	)

137 
	#IP6OPT_JUMBO
 0xc2

	)

138 
	#IP6OPT_NSAP_ADDR
 0xc3

	)

139 
	#IP6OPT_TUNNEL_LIMIT
 0x04

	)

140 
	#IP6OPT_ROUTER_ALERT
 0x05

	)

143 
	sù6_›t_jumbo


145 
uöt8_t
 
	mù6oj_ty≥
;

146 
uöt8_t
 
	mù6oj_Àn
;

147 
uöt8_t
 
	mù6oj_jumbo_Àn
[4];

149 
	#IP6OPT_JUMBO_LEN
 6

	)

152 
	sù6_›t_nßp


154 
uöt8_t
 
	mù6⁄_ty≥
;

155 
uöt8_t
 
	mù6⁄_Àn
;

156 
uöt8_t
 
	mù6⁄_§c_nßp_Àn
;

157 
uöt8_t
 
	mù6⁄_d°_nßp_Àn
;

163 
	sù6_›t_tu¬ñ


165 
uöt8_t
 
	mù6Ÿ_ty≥
;

166 
uöt8_t
 
	mù6Ÿ_Àn
;

167 
uöt8_t
 
	mù6Ÿ_íˇp_limô
;

171 
	sù6_›t_rouãr


173 
uöt8_t
 
	mù6‹_ty≥
;

174 
uöt8_t
 
	mù6‹_Àn
;

175 
uöt8_t
 
	mù6‹_vÆue
[2];

179 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


180 
	#IP6_ALERT_MLD
 0x0000

	)

181 
	#IP6_ALERT_RSVP
 0x0001

	)

182 
	#IP6_ALERT_AN
 0x0002

	)

184 
	#IP6_ALERT_MLD
 0x0000

	)

185 
	#IP6_ALERT_RSVP
 0x0100

	)

186 
	#IP6_ALERT_AN
 0x0200

	)

	@/usr/include/netinet/ip_icmp.h

19 #i‚de‡
__NETINET_IP_ICMP_H


20 
	#__NETINET_IP_ICMP_H
 1

	)

22 
	~<sys/cdefs.h
>

23 
	~<sys/ty≥s.h
>

25 
__BEGIN_DECLS


27 
	sicmphdr


29 
u_öt8_t
 
	mty≥
;

30 
u_öt8_t
 
	mcode
;

31 
u_öt16_t
 
	mchecksum
;

36 
u_öt16_t
 
	mid
;

37 
u_öt16_t
 
	m£quí˚
;

38 } 
	mecho
;

39 
u_öt32_t
 
	mg©eway
;

42 
u_öt16_t
 
	m__unu£d
;

43 
u_öt16_t
 
	mmtu
;

44 } 
	m‰ag
;

45 } 
	mun
;

48 
	#ICMP_ECHOREPLY
 0

	)

49 
	#ICMP_DEST_UNREACH
 3

	)

50 
	#ICMP_SOURCE_QUENCH
 4

	)

51 
	#ICMP_REDIRECT
 5

	)

52 
	#ICMP_ECHO
 8

	)

53 
	#ICMP_TIME_EXCEEDED
 11

	)

54 
	#ICMP_PARAMETERPROB
 12

	)

55 
	#ICMP_TIMESTAMP
 13

	)

56 
	#ICMP_TIMESTAMPREPLY
 14

	)

57 
	#ICMP_INFO_REQUEST
 15

	)

58 
	#ICMP_INFO_REPLY
 16

	)

59 
	#ICMP_ADDRESS
 17

	)

60 
	#ICMP_ADDRESSREPLY
 18

	)

61 
	#NR_ICMP_TYPES
 18

	)

65 
	#ICMP_NET_UNREACH
 0

	)

66 
	#ICMP_HOST_UNREACH
 1

	)

67 
	#ICMP_PROT_UNREACH
 2

	)

68 
	#ICMP_PORT_UNREACH
 3

	)

69 
	#ICMP_FRAG_NEEDED
 4

	)

70 
	#ICMP_SR_FAILED
 5

	)

71 
	#ICMP_NET_UNKNOWN
 6

	)

72 
	#ICMP_HOST_UNKNOWN
 7

	)

73 
	#ICMP_HOST_ISOLATED
 8

	)

74 
	#ICMP_NET_ANO
 9

	)

75 
	#ICMP_HOST_ANO
 10

	)

76 
	#ICMP_NET_UNR_TOS
 11

	)

77 
	#ICMP_HOST_UNR_TOS
 12

	)

78 
	#ICMP_PKT_FILTERED
 13

	)

79 
	#ICMP_PREC_VIOLATION
 14

	)

80 
	#ICMP_PREC_CUTOFF
 15

	)

81 
	#NR_ICMP_UNREACH
 15

	)

84 
	#ICMP_REDIR_NET
 0

	)

85 
	#ICMP_REDIR_HOST
 1

	)

86 
	#ICMP_REDIR_NETTOS
 2

	)

87 
	#ICMP_REDIR_HOSTTOS
 3

	)

90 
	#ICMP_EXC_TTL
 0

	)

91 
	#ICMP_EXC_FRAGTIME
 1

	)

94 #ifde‡
__USE_BSD


126 
	~<√töë/ö.h
>

127 
	~<√töë/ù.h
>

132 
	sicmp_ø_addr


134 
u_öt32_t
 
	múa_addr
;

135 
u_öt32_t
 
	múa_¥e„ªn˚
;

138 
	sicmp


140 
u_öt8_t
 
	micmp_ty≥
;

141 
u_öt8_t
 
	micmp_code
;

142 
u_öt16_t
 
	micmp_cksum
;

145 
u_ch¨
 
	mih_µå
;

146 
ö_addr
 
	mih_gwaddr
;

147 
	sih_id£q


149 
u_öt16_t
 
	micd_id
;

150 
u_öt16_t
 
	micd_£q
;

151 } 
	mih_id£q
;

152 
u_öt32_t
 
	mih_void
;

155 
	sih_pmtu


157 
u_öt16_t
 
	mùm_void
;

158 
u_öt16_t
 
	mùm_√xtmtu
;

159 } 
	mih_pmtu
;

161 
	sih_πødv


163 
u_öt8_t
 
	mút_num_addrs
;

164 
u_öt8_t
 
	mút_w∑
;

165 
u_öt16_t
 
	mút_li„time
;

166 } 
	mih_πødv
;

167 } 
	micmp_hun
;

168 
	#icmp_µå
 
icmp_hun
.
ih_µå


	)

169 
	#icmp_gwaddr
 
icmp_hun
.
ih_gwaddr


	)

170 
	#icmp_id
 
icmp_hun
.
ih_id£q
.
icd_id


	)

171 
	#icmp_£q
 
icmp_hun
.
ih_id£q
.
icd_£q


	)

172 
	#icmp_void
 
icmp_hun
.
ih_void


	)

173 
	#icmp_pmvoid
 
icmp_hun
.
ih_pmtu
.
ùm_void


	)

174 
	#icmp_√xtmtu
 
icmp_hun
.
ih_pmtu
.
ùm_√xtmtu


	)

175 
	#icmp_num_addrs
 
icmp_hun
.
ih_πødv
.
út_num_addrs


	)

176 
	#icmp_w∑
 
icmp_hun
.
ih_πødv
.
út_w∑


	)

177 
	#icmp_li„time
 
icmp_hun
.
ih_πødv
.
út_li„time


	)

182 
u_öt32_t
 
	môs_Ÿime
;

183 
u_öt32_t
 
	môs_πime
;

184 
u_öt32_t
 
	môs_âime
;

185 } 
	mid_ts
;

188 
ù
 
	midi_ù
;

190 } 
	mid_ù
;

191 
icmp_ø_addr
 
	mid_ødv
;

192 
u_öt32_t
 
	mid_mask
;

193 
u_öt8_t
 
	mid_d©a
[1];

194 } 
	micmp_dun
;

195 
	#icmp_Ÿime
 
icmp_dun
.
id_ts
.
ôs_Ÿime


	)

196 
	#icmp_πime
 
icmp_dun
.
id_ts
.
ôs_πime


	)

197 
	#icmp_âime
 
icmp_dun
.
id_ts
.
ôs_âime


	)

198 
	#icmp_ù
 
icmp_dun
.
id_ù
.
idi_ù


	)

199 
	#icmp_ødv
 
icmp_dun
.
id_ødv


	)

200 
	#icmp_mask
 
icmp_dun
.
id_mask


	)

201 
	#icmp_d©a
 
icmp_dun
.
id_d©a


	)

212 
	#ICMP_MINLEN
 8

	)

213 
	#ICMP_TSLEN
 (8 + 3 *  (
n_time
)Ë

	)

214 
	#ICMP_MASKLEN
 12

	)

215 
	#ICMP_ADVLENMIN
 (8 +  (
ù
Ë+ 8Ë

	)

216 #i‚de‡
_IP_VHL


217 
	#ICMP_ADVLEN
(
p
Ë(8 + (’)->
icmp_ù
.
ù_hl
 << 2Ë+ 8)

	)

220 
	#ICMP_ADVLEN
(
p
Ë(8 + (
	`IP_VHL_HL
(’)->
icmp_ù
.
ù_vhl
Ë<< 2Ë+ 8)

	)

226 
	#ICMP_UNREACH
 3

	)

227 
	#ICMP_SOURCEQUENCH
 4

	)

228 
	#ICMP_ROUTERADVERT
 9

	)

229 
	#ICMP_ROUTERSOLICIT
 10

	)

230 
	#ICMP_TIMXCEED
 11

	)

231 
	#ICMP_PARAMPROB
 12

	)

232 
	#ICMP_TSTAMP
 13

	)

233 
	#ICMP_TSTAMPREPLY
 14

	)

234 
	#ICMP_IREQ
 15

	)

235 
	#ICMP_IREQREPLY
 16

	)

236 
	#ICMP_MASKREQ
 17

	)

237 
	#ICMP_MASKREPLY
 18

	)

239 
	#ICMP_MAXTYPE
 18

	)

242 
	#ICMP_UNREACH_NET
 0

	)

243 
	#ICMP_UNREACH_HOST
 1

	)

244 
	#ICMP_UNREACH_PROTOCOL
 2

	)

245 
	#ICMP_UNREACH_PORT
 3

	)

246 
	#ICMP_UNREACH_NEEDFRAG
 4

	)

247 
	#ICMP_UNREACH_SRCFAIL
 5

	)

248 
	#ICMP_UNREACH_NET_UNKNOWN
 6

	)

249 
	#ICMP_UNREACH_HOST_UNKNOWN
 7

	)

250 
	#ICMP_UNREACH_ISOLATED
 8

	)

251 
	#ICMP_UNREACH_NET_PROHIB
 9

	)

252 
	#ICMP_UNREACH_HOST_PROHIB
 10

	)

253 
	#ICMP_UNREACH_TOSNET
 11

	)

254 
	#ICMP_UNREACH_TOSHOST
 12

	)

255 
	#ICMP_UNREACH_FILTER_PROHIB
 13

	)

256 
	#ICMP_UNREACH_HOST_PRECEDENCE
 14

	)

257 
	#ICMP_UNREACH_PRECEDENCE_CUTOFF
 15

	)

260 
	#ICMP_REDIRECT_NET
 0

	)

261 
	#ICMP_REDIRECT_HOST
 1

	)

262 
	#ICMP_REDIRECT_TOSNET
 2

	)

263 
	#ICMP_REDIRECT_TOSHOST
 3

	)

266 
	#ICMP_TIMXCEED_INTRANS
 0

	)

267 
	#ICMP_TIMXCEED_REASS
 1

	)

270 
	#ICMP_PARAMPROB_OPTABSENT
 1

	)

272 
	#ICMP_INFOTYPE
(
ty≥
) \

273 ((
ty≥
Ë=
ICMP_ECHOREPLY
 || (ty≥Ë=
ICMP_ECHO
 || \

274 (
ty≥
Ë=
ICMP_ROUTERADVERT
 || (ty≥Ë=
ICMP_ROUTERSOLICIT
 || \

275 (
ty≥
Ë=
ICMP_TSTAMP
 || (ty≥Ë=
ICMP_TSTAMPREPLY
 || \

276 (
ty≥
Ë=
ICMP_IREQ
 || (ty≥Ë=
ICMP_IREQREPLY
 || \

277 (
ty≥
Ë=
ICMP_MASKREQ
 || (ty≥Ë=
ICMP_MASKREPLY
)

	)

281 
	g__END_DECLS


	@/usr/include/netinet/tcp.h

32 #i‚de‡
_NETINET_TCP_H


33 
	#_NETINET_TCP_H
 1

	)

35 
	~<„©uªs.h
>

40 
	#TCP_NODELAY
 1

	)

41 
	#TCP_MAXSEG
 2

	)

42 
	#TCP_CORK
 3

	)

43 
	#TCP_KEEPIDLE
 4

	)

44 
	#TCP_KEEPINTVL
 5

	)

45 
	#TCP_KEEPCNT
 6

	)

46 
	#TCP_SYNCNT
 7

	)

47 
	#TCP_LINGER2
 8

	)

48 
	#TCP_DEFER_ACCEPT
 9

	)

49 
	#TCP_WINDOW_CLAMP
 10

	)

50 
	#TCP_INFO
 11

	)

51 
	#TCP_QUICKACK
 12

	)

52 
	#TCP_CONGESTION
 13

	)

53 
	#TCP_MD5SIG
 14

	)

55 #ifde‡
__USE_MISC


56 
	~<sys/ty≥s.h
>

57 
	~<sys/sockë.h
>

59 #ifde‡
__FAVOR_BSD


60 
u_öt32_t
 
	tt˝_£q
;

65 
	st˝hdr


67 
u_öt16_t
 
	mth_•‹t
;

68 
u_öt16_t
 
	mth_dp‹t
;

69 
t˝_£q
 
	mth_£q
;

70 
t˝_£q
 
	mth_ack
;

71 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


72 
u_öt8_t
 
	mth_x2
:4;

73 
u_öt8_t
 
	mth_off
:4;

75 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


76 
u_öt8_t
 
	mth_off
:4;

77 
u_öt8_t
 
	mth_x2
:4;

79 
u_öt8_t
 
	mth_Êags
;

80 
	#TH_FIN
 0x01

	)

81 
	#TH_SYN
 0x02

	)

82 
	#TH_RST
 0x04

	)

83 
	#TH_PUSH
 0x08

	)

84 
	#TH_ACK
 0x10

	)

85 
	#TH_URG
 0x20

	)

86 
u_öt16_t
 
	mth_wö
;

87 
u_öt16_t
 
	mth_sum
;

88 
u_öt16_t
 
	mth_uΩ
;

92 
	st˝hdr


94 
u_öt16_t
 
	msour˚
;

95 
u_öt16_t
 
	mde°
;

96 
u_öt32_t
 
	m£q
;

97 
u_öt32_t
 
	mack_£q
;

98 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


99 
u_öt16_t
 
	mªs1
:4;

100 
u_öt16_t
 
	mdoff
:4;

101 
u_öt16_t
 
	mfö
:1;

102 
u_öt16_t
 
	msyn
:1;

103 
u_öt16_t
 
	mr°
:1;

104 
u_öt16_t
 
	mpsh
:1;

105 
u_öt16_t
 
	mack
:1;

106 
u_öt16_t
 
	murg
:1;

107 
u_öt16_t
 
	mªs2
:2;

108 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


109 
u_öt16_t
 
	mdoff
:4;

110 
u_öt16_t
 
	mªs1
:4;

111 
u_öt16_t
 
	mªs2
:2;

112 
u_öt16_t
 
	murg
:1;

113 
u_öt16_t
 
	mack
:1;

114 
u_öt16_t
 
	mpsh
:1;

115 
u_öt16_t
 
	mr°
:1;

116 
u_öt16_t
 
	msyn
:1;

117 
u_öt16_t
 
	mfö
:1;

121 
u_öt16_t
 
	mwödow
;

122 
u_öt16_t
 
	mcheck
;

123 
u_öt16_t
 
	murg_±r
;

129 
	mTCP_ESTABLISHED
 = 1,

130 
	mTCP_SYN_SENT
,

131 
	mTCP_SYN_RECV
,

132 
	mTCP_FIN_WAIT1
,

133 
	mTCP_FIN_WAIT2
,

134 
	mTCP_TIME_WAIT
,

135 
	mTCP_CLOSE
,

136 
	mTCP_CLOSE_WAIT
,

137 
	mTCP_LAST_ACK
,

138 
	mTCP_LISTEN
,

139 
	mTCP_CLOSING


142 
	#TCPOPT_EOL
 0

	)

143 
	#TCPOPT_NOP
 1

	)

144 
	#TCPOPT_MAXSEG
 2

	)

145 
	#TCPOLEN_MAXSEG
 4

	)

146 
	#TCPOPT_WINDOW
 3

	)

147 
	#TCPOLEN_WINDOW
 3

	)

148 
	#TCPOPT_SACK_PERMITTED
 4

	)

149 
	#TCPOLEN_SACK_PERMITTED
 2

	)

150 
	#TCPOPT_SACK
 5

	)

151 
	#TCPOPT_TIMESTAMP
 8

	)

152 
	#TCPOLEN_TIMESTAMP
 10

	)

153 
	#TCPOLEN_TSTAMP_APPA
 (
TCPOLEN_TIMESTAMP
+2Ë

	)

155 
	#TCPOPT_TSTAMP_HDR
 \

156 (
TCPOPT_NOP
<<24|TCPOPT_NOP<<16|
TCPOPT_TIMESTAMP
<<8|
TCPOLEN_TIMESTAMP
)

	)

164 
	#TCP_MSS
 512

	)

166 
	#TCP_MAXWIN
 65535

	)

168 
	#TCP_MAX_WINSHIFT
 14

	)

170 
	#SOL_TCP
 6

	)

173 
	#TCPI_OPT_TIMESTAMPS
 1

	)

174 
	#TCPI_OPT_SACK
 2

	)

175 
	#TCPI_OPT_WSCALE
 4

	)

176 
	#TCPI_OPT_ECN
 8

	)

179 
	et˝_ˇ_°©e


181 
	mTCP_CA_O≥n
 = 0,

182 
	mTCP_CA_Dis‹dî
 = 1,

183 
	mTCP_CA_CWR
 = 2,

184 
	mTCP_CA_Recovîy
 = 3,

185 
	mTCP_CA_Loss
 = 4

188 
	st˝_öfo


190 
u_öt8_t
 
	mt˝i_°©e
;

191 
u_öt8_t
 
	mt˝i_ˇ_°©e
;

192 
u_öt8_t
 
	mt˝i_ªå™smôs
;

193 
u_öt8_t
 
	mt˝i_¥obes
;

194 
u_öt8_t
 
	mt˝i_backoff
;

195 
u_öt8_t
 
	mt˝i_›ti⁄s
;

196 
u_öt8_t
 
	mt˝i_¢d_wsˇÀ
 : 4, 
	mt˝i_rcv_wsˇÀ
 : 4;

198 
u_öt32_t
 
	mt˝i_πo
;

199 
u_öt32_t
 
	mt˝i_©o
;

200 
u_öt32_t
 
	mt˝i_¢d_mss
;

201 
u_öt32_t
 
	mt˝i_rcv_mss
;

203 
u_öt32_t
 
	mt˝i_u«cked
;

204 
u_öt32_t
 
	mt˝i_ßcked
;

205 
u_öt32_t
 
	mt˝i_lo°
;

206 
u_öt32_t
 
	mt˝i_ªå™s
;

207 
u_öt32_t
 
	mt˝i_Áckës
;

210 
u_öt32_t
 
	mt˝i_œ°_d©a_£¡
;

211 
u_öt32_t
 
	mt˝i_œ°_ack_£¡
;

212 
u_öt32_t
 
	mt˝i_œ°_d©a_ªcv
;

213 
u_öt32_t
 
	mt˝i_œ°_ack_ªcv
;

216 
u_öt32_t
 
	mt˝i_pmtu
;

217 
u_öt32_t
 
	mt˝i_rcv_s°hªsh
;

218 
u_öt32_t
 
	mt˝i_πt
;

219 
u_öt32_t
 
	mt˝i_πtv¨
;

220 
u_öt32_t
 
	mt˝i_¢d_s°hªsh
;

221 
u_öt32_t
 
	mt˝i_¢d_cwnd
;

222 
u_öt32_t
 
	mt˝i_advmss
;

223 
u_öt32_t
 
	mt˝i_ª‹dîög
;

225 
u_öt32_t
 
	mt˝i_rcv_πt
;

226 
u_öt32_t
 
	mt˝i_rcv_•a˚
;

228 
u_öt32_t
 
	mt˝i_tŸÆ_ªå™s
;

233 
	#TCP_MD5SIG_MAXKEYLEN
 80

	)

235 
	st˝_md5sig


237 
sockaddr_°‹age
 
	mt˝m_addr
;

238 
u_öt16_t
 
	m__t˝m_∑d1
;

239 
u_öt16_t
 
	mt˝m_keyÀn
;

240 
u_öt32_t
 
	m__t˝m_∑d2
;

241 
u_öt8_t
 
	mt˝m_key
[
TCP_MD5SIG_MAXKEYLEN
];

	@/usr/include/netinet/udp.h

48 #i‚de‡
__NETINET_UDP_H


49 
	#__NETINET_UDP_H
 1

	)

51 
	~<„©uªs.h
>

52 
	~<sys/ty≥s.h
>

56 #ifde‡
__FAVOR_BSD


58 
	sudphdr


60 
u_öt16_t
 
	muh_•‹t
;

61 
u_öt16_t
 
	muh_dp‹t
;

62 
u_öt16_t
 
	muh_uÀn
;

63 
u_öt16_t
 
	muh_sum
;

68 
	sudphdr


70 
u_öt16_t
 
	msour˚
;

71 
u_öt16_t
 
	mde°
;

72 
u_öt16_t
 
	mÀn
;

73 
u_öt16_t
 
	mcheck
;

78 
	#UDP_CORK
 1

	)

79 
	#UDP_ENCAP
 100

	)

83 
	#UDP_ENCAP_ESPINUDP_NON_IKE
 1

	)

84 
	#UDP_ENCAP_ESPINUDP
 2

	)

85 
	#UDP_ENCAP_L2TPINUDP
 3

	)

87 
	#SOL_UDP
 17

	)

	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROW
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROW
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROW
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROW
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROW
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROW
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROW
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROW
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROW
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROW
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROW
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROW
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/resolv.h

52 #i‚de‡
_RESOLV_H_


56 
	~<sys/ty≥s.h
>

57 
	~<√töë/ö.h
>

59 #i‚de‡
__√ed_ªs_°©e


60 
	#_RESOLV_H_


	)

62 
	~<sys/∑øm.h
>

63 
	~<sys/cdefs.h
>

64 
	~<°dio.h
>

65 
	~<¨∑/«me£r.h
>

68 #i‚de‡
__ªs_°©e_deföed


69 
	#__ªs_°©e_deföed


	)

71 íum { 
	mªs_gﬂhód
, 
	mªs_√xäs
, 
	mªs_modifõd
, 
	mªs_d⁄e
, 
	mªs_îr‹
 }

72 
	tªs_£ndhooka˘
;

74 
	$ªs_£ndhooka˘
 (*
	tªs_£nd_qhook
Ë(
	tsockaddr_ö
 * c⁄° *
	t__ns
,

75 c⁄° 
	tu_ch¨
 **
	t__quîy
,

76 *
	t__quîyÀn
,

77 
	tu_ch¨
 *
	t__™s
,

78 
	t__™ssiz
,

79 *
	t__ª•Àn
);

81 
	$ªs_£ndhooka˘
 (*
	tªs_£nd_rhook
Ë(c⁄° 
	tsockaddr_ö
 *
	t__ns
,

82 c⁄° 
	tu_ch¨
 *
	t__quîy
,

83 
	t__quîyÀn
,

84 
	tu_ch¨
 *
	t__™s
,

85 
	t__™ssiz
,

86 *
	t__ª•Àn
);

91 
	#MAXNS
 3

	)

92 
	#MAXDFLSRCH
 3

	)

93 
	#MAXDNSRCH
 6

	)

94 
	#LOCALDOMAINPARTS
 2

	)

96 
	#RES_TIMEOUT
 5

	)

97 
	#MAXRESOLVSORT
 10

	)

98 
	#RES_MAXNDOTS
 15

	)

99 
	#RES_MAXRETRANS
 30

	)

100 
	#RES_MAXRETRY
 5

	)

101 
	#RES_DFLRETRY
 2

	)

102 
	#RES_MAXTIME
 65535

	)

104 
	s__ªs_°©e
 {

105 
ªå™s
;

106 
ªåy
;

107 
u_l⁄g
 
›ti⁄s
;

108 
nscou¡
;

109 
sockaddr_ö


110 
nßddr_li°
[
MAXNS
];

111 
	#nßddr
 
nßddr_li°
[0]

	)

112 
u_sh‹t
 
id
;

114 *
dn§ch
[
MAXDNSRCH
+1];

115 
defd«me
[256];

116 
u_l⁄g
 
pfcode
;

117 
ndŸs
:4;

118 
ns‹t
:4;

119 
ùv6_u«vaû
:1;

120 
unu£d
:23;

122 
ö_addr
 
addr
;

123 
u_öt32_t
 
mask
;

124 } 
s‹t_li°
[
MAXRESOLVSORT
];

126 
ªs_£nd_qhook
 
qhook
;

127 
ªs_£nd_rhook
 
rhook
;

128 
ªs_h_î∫o
;

129 
_vcsock
;

130 
u_öt
 
_Êags
;

133 
∑d
[52];

135 
u_öt16_t
 
nscou¡
;

136 
u_öt16_t
 
nsm≠
[
MAXNS
];

137 
nssocks
[
MAXNS
];

138 
u_öt16_t
 
nscou¡6
;

139 
u_öt16_t
 
nsöô
;

140 
sockaddr_ö6
 *
nßddrs
[
MAXNS
];

141 #ifde‡
_LIBC


142 
öô°amp


143 
	`__©åibuã__
((
∑cked
));

145 
_öô°amp
[2];

147 } 
_ext
;

148 } 
_u
;

151 
__ªs_°©e
 *
	tªs_°©e
;

152 #unde‡
__√ed_ªs_°©e


155 #ifde‡
_RESOLV_H_


164 
	#__RES
 19991006

	)

172 #i‚de‡
_PATH_RESCONF


173 
	#_PATH_RESCONF
 "/ëc/ªsﬁv.c⁄f"

	)

176 
	sªs_sym
 {

177 
numbî
;

178 * 
«me
;

179 * 
hum™«me
;

185 
	#RES_F_VC
 0x00000001

	)

186 
	#RES_F_CONN
 0x00000002

	)

187 
	#RES_F_EDNS0ERR
 0x00000004

	)

190 
	#RES_EXHAUSTIVE
 0x00000001

	)

195 
	#RES_INIT
 0x00000001

	)

196 
	#RES_DEBUG
 0x00000002

	)

197 
	#RES_AAONLY
 0x00000004

	)

198 
	#RES_USEVC
 0x00000008

	)

199 
	#RES_PRIMARY
 0x00000010

	)

200 
	#RES_IGNTC
 0x00000020

	)

201 
	#RES_RECURSE
 0x00000040

	)

202 
	#RES_DEFNAMES
 0x00000080

	)

203 
	#RES_STAYOPEN
 0x00000100

	)

204 
	#RES_DNSRCH
 0x00000200

	)

205 
	#RES_INSECURE1
 0x00000400

	)

206 
	#RES_INSECURE2
 0x00000800

	)

207 
	#RES_NOALIASES
 0x00001000

	)

208 
	#RES_USE_INET6
 0x00002000

	)

209 
	#RES_ROTATE
 0x00004000

	)

210 
	#RES_NOCHECKNAME
 0x00008000

	)

211 
	#RES_KEEPTSIG
 0x00010000

	)

212 
	#RES_BLAST
 0x00020000

	)

213 
	#RES_USEBSTRING
 0x00040000

	)

215 
	#RES_NOIP6DOTINT
 0x00080000

	)

217 
	#RES_USE_EDNS0
 0x00100000

	)

218 
	#RES_SNGLKUP
 0x00200000

	)

219 
	#RES_SNGLKUPREOP
 0x00400000

	)

221 
	#RES_USE_DNSSEC
 0x00800000

	)

222 
	#RES_NOTLDQUERY
 0x01000000

	)

225 
	#RES_DEFAULT
 (
RES_RECURSE
|
RES_DEFNAMES
|
RES_DNSRCH
|
RES_NOIP6DOTINT
)

	)

230 
	#RES_PRF_STATS
 0x00000001

	)

231 
	#RES_PRF_UPDATE
 0x00000002

	)

232 
	#RES_PRF_CLASS
 0x00000004

	)

233 
	#RES_PRF_CMD
 0x00000008

	)

234 
	#RES_PRF_QUES
 0x00000010

	)

235 
	#RES_PRF_ANS
 0x00000020

	)

236 
	#RES_PRF_AUTH
 0x00000040

	)

237 
	#RES_PRF_ADD
 0x00000080

	)

238 
	#RES_PRF_HEAD1
 0x00000100

	)

239 
	#RES_PRF_HEAD2
 0x00000200

	)

240 
	#RES_PRF_TTLID
 0x00000400

	)

241 
	#RES_PRF_HEADX
 0x00000800

	)

242 
	#RES_PRF_QUERY
 0x00001000

	)

243 
	#RES_PRF_REPLY
 0x00002000

	)

244 
	#RES_PRF_INIT
 0x00004000

	)

248 
__BEGIN_DECLS


249 
__ªs_°©e
 *
	$__ªs_°©e
(Ë
	`__©åibuã__
 ((
__c⁄°__
));

250 
__END_DECLS


251 
	#_ªs
 (*
	`__ªs_°©e
())

	)

253 #i‚de‡
__BIND_NOSTATIC


254 
	#Â_nquîy
 
__Â_nquîy


	)

255 
	#Â_quîy
 
__Â_quîy


	)

256 
	#ho°Æüs
 
__ho°Æüs


	)

257 
	#p_quîy
 
__p_quîy


	)

258 
	#ªs_˛o£
 
__ªs_˛o£


	)

259 
	#ªs_öô
 
__ªs_öô


	)

260 
	#ªs_isour£rvî
 
__ªs_isour£rvî


	)

261 
	#ªs_mkquîy
 
__ªs_mkquîy


	)

262 
	#ªs_quîy
 
__ªs_quîy


	)

263 
	#ªs_quîydomaö
 
__ªs_quîydomaö


	)

264 
	#ªs_£¨ch
 
__ªs_£¨ch


	)

265 
	#ªs_£nd
 
__ªs_£nd


	)

267 
__BEGIN_DECLS


268 
	$Â_nquîy
 (c⁄° 
u_ch¨
 *, , 
FILE
 *Ë
__THROW
;

269 
	$Â_quîy
 (c⁄° 
u_ch¨
 *, 
FILE
 *Ë
__THROW
;

270 c⁄° * 
	$ho°Æüs
 (c⁄° *Ë
__THROW
;

271 
	$p_quîy
 (c⁄° 
u_ch¨
 *Ë
__THROW
;

272 
	$ªs_˛o£
 (Ë
__THROW
;

273 
	$ªs_öô
 (Ë
__THROW
;

274 
	$ªs_isour£rvî
 (c⁄° 
sockaddr_ö
 *Ë
__THROW
;

275 
	$ªs_mkquîy
 (, c⁄° *, , , c⁄° 
u_ch¨
 *,

276 , c⁄° 
u_ch¨
 *, u_ch¨ *, Ë
__THROW
;

277 
	$ªs_quîy
 (c⁄° *, , , 
u_ch¨
 *, Ë
__THROW
;

278 
	$ªs_quîydomaö
 (const *, const *, , ,

279 
u_ch¨
 *, Ë
__THROW
;

280 
	$ªs_£¨ch
 (c⁄° *, , , 
u_ch¨
 *, Ë
__THROW
;

281 
	$ªs_£nd
 (c⁄° 
u_ch¨
 *, , u_ch¨ *, Ë
__THROW
;

282 
__END_DECLS


285 
	#b64_¡›
 
__b64_¡›


	)

286 
	#b64_±⁄
 
__b64_±⁄


	)

287 
	#dn_comp
 
__dn_comp


	)

288 
	#dn_cou¡_œbñs
 
__dn_cou¡_œbñs


	)

289 
	#dn_ex∑nd
 
__dn_ex∑nd


	)

290 
	#dn_skù«me
 
__dn_skù«me


	)

291 
	#Â_ªs°©
 
__Â_ªs°©


	)

292 
	#loc_©⁄
 
__loc_©⁄


	)

293 
	#loc_¡ﬂ
 
__loc_¡ﬂ


	)

294 
	#p_cd«me
 
__p_cd«me


	)

295 
	#p_cd¬ame
 
__p_cd¬ame


	)

296 
	#p_˛ass
 
__p_˛ass


	)

297 
	#p_fq«me
 
__p_fq«me


	)

298 
	#p_fq¬ame
 
__p_fq¬ame


	)

299 
	#p_›ti⁄
 
__p_›ti⁄


	)

300 
	#p_£c°od©e
 
__p_£c°od©e


	)

301 
	#p_£˘i⁄
 
__p_£˘i⁄


	)

302 
	#p_time
 
__p_time


	)

303 
	#p_ty≥
 
__p_ty≥


	)

304 
	#p_rcode
 
__p_rcode


	)

305 
	#pué⁄g
 
__pué⁄g


	)

306 
	#putsh‹t
 
__putsh‹t


	)

307 
	#ªs_dnok
 
__ªs_dnok


	)

308 
	#ªs_hnok
 
__ªs_hnok


	)

309 
	#ªs_ho°Æüs
 
__ªs_ho°Æüs


	)

310 
	#ªs_maûok
 
__ªs_maûok


	)

311 
	#ªs_«meöquîy
 
__ªs_«meöquîy


	)

312 
	#ªs_n˛o£
 
__ªs_n˛o£


	)

313 
	#ªs_nöô
 
__ªs_nöô


	)

314 
	#ªs_nmkquîy
 
__ªs_nmkquîy


	)

315 
	#ªs_≈quîy
 
__ªs_≈quîy


	)

316 
	#ªs_nquîy
 
__ªs_nquîy


	)

317 
	#ªs_nquîydomaö
 
__ªs_nquîydomaö


	)

318 
	#ªs_n£¨ch
 
__ªs_n£¨ch


	)

319 
	#ªs_n£nd
 
__ªs_n£nd


	)

320 
	#ªs_nisour£rvî
 
__ªs_nisour£rvî


	)

321 
	#ªs_ownok
 
__ªs_ownok


	)

322 
	#ªs_quîõsm©ch
 
__ªs_quîõsm©ch


	)

323 
	#ªs_øndomid
 
__ªs_øndomid


	)

324 
	#sym_¡›
 
__sym_¡›


	)

325 
	#sym_¡os
 
__sym_¡os


	)

326 
	#sym_°⁄
 
__sym_°⁄


	)

327 
__BEGIN_DECLS


328 
	$ªs_hnok
 (c⁄° *Ë
__THROW
;

329 
	$ªs_ownok
 (c⁄° *Ë
__THROW
;

330 
	$ªs_maûok
 (c⁄° *Ë
__THROW
;

331 
	$ªs_dnok
 (c⁄° *Ë
__THROW
;

332 
	$sym_°⁄
 (c⁄° 
ªs_sym
 *, c⁄° *, *Ë
__THROW
;

333 c⁄° * 
	$sym_¡os
 (c⁄° 
ªs_sym
 *, , *Ë
__THROW
;

334 c⁄° * 
	$sym_¡›
 (c⁄° 
ªs_sym
 *, , *Ë
__THROW
;

335 
	$b64_¡›
 (
u_ch¨
 c⁄° *, 
size_t
, *, size_tË
__THROW
;

336 
	$b64_±⁄
 (c⁄° *, 
u_ch¨
 *, 
size_t
Ë
__THROW
;

337 
	$loc_©⁄
 (c⁄° *
__ascii
, 
u_ch¨
 *
__bö¨y
Ë
__THROW
;

338 c⁄° * 
	$loc_¡ﬂ
 (c⁄° 
u_ch¨
 *
__bö¨y
, *
__ascii
Ë
__THROW
;

339 
	$dn_skù«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

340 
	$pué⁄g
 (
u_öt32_t
, 
u_ch¨
 *Ë
__THROW
;

341 
	$putsh‹t
 (
u_öt16_t
, 
u_ch¨
 *Ë
__THROW
;

342 c⁄° * 
	$p_˛ass
 (Ë
__THROW
;

343 c⁄° * 
	$p_time
 (
u_öt32_t
Ë
__THROW
;

344 c⁄° * 
	$p_ty≥
 (Ë
__THROW
;

345 c⁄° * 
	$p_rcode
 (Ë
__THROW
;

346 c⁄° 
u_ch¨
 * 
	$p_cd¬ame
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, , 
FILE
 *)

347 
__THROW
;

348 c⁄° 
u_ch¨
 * 
	$p_cd«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
FILE
 *Ë
__THROW
;

349 c⁄° 
u_ch¨
 * 
	$p_fq¬ame
 (c⁄° 
u_ch¨
 *
__˝
, c⁄° u_ch¨ *
__msg
,

350 , *, Ë
__THROW
;

351 c⁄° 
u_ch¨
 * 
	$p_fq«me
 (c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *, 
FILE
 *Ë
__THROW
;

352 c⁄° * 
	$p_›ti⁄
 (
u_l⁄g
 
__›ti⁄
Ë
__THROW
;

353 * 
	$p_£c°od©e
 (
u_l⁄g
Ë
__THROW
;

354 
	$dn_cou¡_œbñs
 (c⁄° *Ë
__THROW
;

355 
	$dn_comp
 (c⁄° *, 
u_ch¨
 *, , u_char **, u_char **)

356 
__THROW
;

357 
	$dn_ex∑nd
 (c⁄° 
u_ch¨
 *, const u_char *, const u_char *,

358 *, Ë
__THROW
;

359 
u_öt
 
	$ªs_øndomid
 (Ë
__THROW
;

360 
	$ªs_«meöquîy
 (const *, , ,

361 c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

362 
	$ªs_quîõsm©ch
 (c⁄° 
u_ch¨
 *, const u_char *,

363 c⁄° 
u_ch¨
 *, c⁄° u_ch¨ *Ë
__THROW
;

364 c⁄° * 
	$p_£˘i⁄
 (
__£˘i⁄
, 
__›code
Ë
__THROW
;

366 
	$ªs_nöô
 (
ªs_°©e
Ë
__THROW
;

367 
	$ªs_nisour£rvî
 (c⁄° 
ªs_°©e
,

368 c⁄° 
sockaddr_ö
 *Ë
__THROW
;

369 
	$Â_ªs°©
 (c⁄° 
ªs_°©e
, 
FILE
 *Ë
__THROW
;

370 
	$ªs_≈quîy
 (c⁄° 
ªs_°©e
, c⁄° 
u_ch¨
 *, , 
FILE
 *)

371 
__THROW
;

372 c⁄° * 
	$ªs_ho°Æüs
 (c⁄° 
ªs_°©e
, c⁄° *, *, 
size_t
)

373 
__THROW
;

374 
	$ªs_nquîy
 (
ªs_°©e
, c⁄° *, , , 
u_ch¨
 *, )

375 
__THROW
;

376 
	$ªs_n£¨ch
 (
ªs_°©e
, c⁄° *, , , 
u_ch¨
 *, )

377 
__THROW
;

378 
	$ªs_nquîydomaö
 (
ªs_°©e
, const *, const *, ,

379 , 
u_ch¨
 *, Ë
__THROW
;

380 
	$ªs_nmkquîy
 (
ªs_°©e
, , const *, , ,

381 c⁄° 
u_ch¨
 *, , const u_char *, u_char *,

382 Ë
__THROW
;

383 
	$ªs_n£nd
 (
ªs_°©e
, c⁄° 
u_ch¨
 *, , u_char *, )

384 
__THROW
;

385 
	$ªs_n˛o£
 (
ªs_°©e
Ë
__THROW
;

386 
__END_DECLS


	@/usr/include/setjmp.h

23 #i‚def 
_SETJMP_H


24 
	#_SETJMP_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/£tjmp.h
>

31 
	~<bôs/sig£t.h
>

35 
	s__jmp_buf_èg


41 
__jmp_buf
 
	m__jmpbuf
;

42 
	m__mask_was_ßved
;

43 
__sig£t_t
 
	m__ßved_mask
;

47 
__BEGIN_NAMESPACE_STD


49 
__jmp_buf_èg
 
	tjmp_buf
[1];

53 
	$£tjmp
 (
jmp_buf
 
__ív
Ë
__THROW
;

55 
__END_NAMESPACE_STD


60 
	$__sig£tjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__ßvemask
Ë
__THROW
;

62 #i‚def 
__FAVOR_BSD


65 
	$_£tjmp
 (
__jmp_buf_èg
 
__ív
[1]Ë
__THROW
;

69 
	#£tjmp
(
ív
Ë
	`_£tjmp
 (ív)

	)

74 
	#£tjmp
(
ív
Ë
	`£tjmp
 (ív)

	)

78 
__BEGIN_NAMESPACE_STD


82 
	$l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

85 
__END_NAMESPACE_STD


87 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


91 
	$_l⁄gjmp
 (
__jmp_buf_èg
 
__ív
[1], 
__vÆ
)

92 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

96 #ifdef 
__USE_POSIX


100 
__jmp_buf_èg
 
	tsigjmp_buf
[1];

104 
	#sig£tjmp
(
ív
, 
ßvemask
Ë
	`__sig£tjmp
 (ív, savemask)

	)

110 
	$sigl⁄gjmp
 (
sigjmp_buf
 
__ív
, 
__vÆ
)

111 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

116 #i‡
__USE_FORTIFY_LEVEL
 > 0

117 
	~<bôs/£tjmp2.h
>

120 
__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/strings.h

20 #i‚def 
_STRINGS_H


21 
	#_STRINGS_H
 1

	)

26 #i‡!
deföed
 
_STRING_H
 || !deföed 
__USE_BSD


28 
	~<„©uªs.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

33 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

34 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

37 
	g__BEGIN_DECLS


39 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


41 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

42 
__THROW
 
__©åibuã_puª__
;

45 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
Ë
__THROW
;

48 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
;

51 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


54 *
	`ödex
 (*
__s
, 
__c
)

55 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

56 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

57 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

59 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


60 
__exã∫_Æways_ölöe
 *

61 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
__exã∫_Æways_ölöe
 
__c⁄°
 *

67 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


69  
	`__buûtö_ödex
 (
__s
, 
__c
);

72 
	}
}

74 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

75 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

79 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


82 *
	`rödex
 (*
__s
, 
__c
)

83 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

84 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

85 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

87 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRING_H_PROTO


88 
__exã∫_Æways_ölöe
 *

89 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
__exã∫_Æways_ölöe
 
__c⁄°
 *

95 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


97  
	`__buûtö_rödex
 (
__s
, 
__c
);

100 
	}
}

102 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

107 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


110 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((const));

114 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

115 
__THROW
 
__©åibuã_puª__
;

118 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

119 
__THROW
 
__©åibuã_puª__
;

121 #ifdef 
__USE_XOPEN2K8


125 
	~<xloˇÀ.h
>

129 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

130 
__loˇÀ_t
 
__loc
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

134 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


	@/usr/include/stropts.h

19 #i‚de‡
_STROPTS_H


20 
	#_STROPTS_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	~<bôs/xtôy≥s.h
>

26 #i‚de‡
__gid_t_deföed


27 
__gid_t
 
	tgid_t
;

28 
	#__gid_t_deföed


	)

31 #i‚de‡
__uid_t_deföed


32 
__uid_t
 
	tuid_t
;

33 
	#__uid_t_deföed


	)

36 
__t_usˇœr_t
 
	tt_usˇœr_t
;

39 
	~<bôs/°r›ts.h
>

42 
__BEGIN_DECLS


45 
	$iß°ªam
 (
__fûdes
Ë
__THROW
;

51 
	`gëmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

52 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

53 *
__ª°ri˘
 
__Êag•
);

60 
	`gëpmsg
 (
__fûdes
, 
°rbuf
 *
__ª°ri˘
 
__˘Õå
,

61 
°rbuf
 *
__ª°ri˘
 
__d©≠å
,

62 *
__ª°ri˘
 
__b™dp
, *__ª°ri˘ 
__Êag•
);

67 
	$io˘l
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

73 
	`putmsg
 (
__fûdes
, 
__c⁄°
 
°rbuf
 *
__˘Õå
,

74 
__c⁄°
 
°rbuf
 *
__d©≠å
, 
__Êags
);

80 
	`puçmsg
 (
__fûdes
, 
__c⁄°
 
°rbuf
 *
__˘Õå
,

81 
__c⁄°
 
°rbuf
 *
__d©≠å
, 
__b™d
, 
__Êags
);

85 
	$Áâach
 (
__fûdes
, 
__c⁄°
 *
__∑th
Ë
__THROW
;

88 
	$fdëach
 (
__c⁄°
 *
__∑th
Ë
__THROW
;

90 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1028 #i‚de‡
__USE_FILE_OFFSET64


1029 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1031 #ifde‡
__REDIRECT_NTH


1032 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1033 
·runˇã64
Ë
__wur
;

1035 
	#·runˇã
 
·runˇã64


	)

1038 #ifde‡
__USE_LARGEFILE64


1039 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1045 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1046 || 
deföed
 
__USE_MISC


1050 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1056 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1060 #ifde‡
__USE_MISC


1071 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1076 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1088 
	#F_ULOCK
 0

	)

1089 
	#F_LOCK
 1

	)

1090 
	#F_TLOCK
 2

	)

1091 
	#F_TEST
 3

	)

1093 #i‚de‡
__USE_FILE_OFFSET64


1094 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__REDIRECT


1097 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1098 
lockf64
Ë
__wur
;

1100 
	#lockf
 
lockf64


	)

1103 #ifde‡
__USE_LARGEFILE64


1104 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1109 #ifde‡
__USE_GNU


1114 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1115 (
__exãnsi⁄__
 \

1116 ({ 
__ªsu…
; \

1117 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1118 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1119 
__ªsu…
; 
	}
}))

	)

1122 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1125 
fd©async
 (
__fûdes
);

1131 #ifdef 
__USE_XOPEN


1133 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1138 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/arpa/nameser_compat.h

34 #i‚de‡
_ARPA_NAMESER_COMPAT_


35 
	#_ARPA_NAMESER_COMPAT_


	)

37 
	#__BIND
 19950621

	)

39 
	~<ídün.h
>

49 
	mid
 :16;

50 #i‡
BYTE_ORDER
 =
BIG_ENDIAN


52 
	mqr
: 1;

53 
	m›code
: 4;

54 
	mØ
: 1;

55 
	mtc
: 1;

56 
	mrd
: 1;

58 
	mø
: 1;

59 
	munu£d
 :1;

60 
	mad
: 1;

61 
	mcd
: 1;

62 
	mrcode
 :4;

64 #i‡
BYTE_ORDER
 =
LITTLE_ENDIAN
 || BYTE_ORDER =
PDP_ENDIAN


66 
	mrd
 :1;

67 
	mtc
 :1;

68 
	mØ
 :1;

69 
	m›code
 :4;

70 
	mqr
 :1;

72 
	mrcode
 :4;

73 
	mcd
: 1;

74 
	mad
: 1;

75 
	munu£d
 :1;

76 
	mø
 :1;

79 
	mqdcou¡
 :16;

80 
	m™cou¡
 :16;

81 
	mnscou¡
 :16;

82 
	m¨cou¡
 :16;

83 } 
	tHEADER
;

85 
	#PACKETSZ
 
NS_PACKETSZ


	)

86 
	#MAXDNAME
 
NS_MAXDNAME


	)

87 
	#MAXCDNAME
 
NS_MAXCDNAME


	)

88 
	#MAXLABEL
 
NS_MAXLABEL


	)

89 
	#HFIXEDSZ
 
NS_HFIXEDSZ


	)

90 
	#QFIXEDSZ
 
NS_QFIXEDSZ


	)

91 
	#RRFIXEDSZ
 
NS_RRFIXEDSZ


	)

92 
	#INT32SZ
 
NS_INT32SZ


	)

93 
	#INT16SZ
 
NS_INT16SZ


	)

94 
	#INT8SZ
 
NS_INT8SZ


	)

95 
	#INADDRSZ
 
NS_INADDRSZ


	)

96 
	#IN6ADDRSZ
 
NS_IN6ADDRSZ


	)

97 
	#INDIR_MASK
 
NS_CMPRSFLGS


	)

98 
	#NAMESERVER_PORT
 
NS_DEFAULTPORT


	)

100 
	#S_ZONE
 
ns_s_zn


	)

101 
	#S_PREREQ
 
ns_s_¥


	)

102 
	#S_UPDATE
 
ns_s_ud


	)

103 
	#S_ADDT
 
ns_s_¨


	)

105 
	#QUERY
 
ns_o_quîy


	)

106 
	#IQUERY
 
ns_o_iquîy


	)

107 
	#STATUS
 
ns_o_°©us


	)

108 
	#NS_NOTIFY_OP
 
ns_o_nŸify


	)

109 
	#NS_UPDATE_OP
 
ns_o_upd©e


	)

111 
	#NOERROR
 
ns_r_n€º‹


	)

112 
	#FORMERR
 
ns_r_f‹mîr


	)

113 
	#SERVFAIL
 
ns_r_£rvÁû


	)

114 
	#NXDOMAIN
 
ns_r_nxdomaö


	)

115 
	#NOTIMP
 
ns_r_nŸim∂


	)

116 
	#REFUSED
 
ns_r_ªfu£d


	)

117 
	#YXDOMAIN
 
ns_r_yxdomaö


	)

118 
	#YXRRSET
 
ns_r_yxº£t


	)

119 
	#NXRRSET
 
ns_r_nxº£t


	)

120 
	#NOTAUTH
 
ns_r_nŸauth


	)

121 
	#NOTZONE
 
ns_r_nŸz⁄e


	)

127 
	#DELETE
 
ns_u›_dñëe


	)

128 
	#ADD
 
ns_u›_add


	)

130 
	#T_A
 
ns_t_a


	)

131 
	#T_NS
 
ns_t_ns


	)

132 
	#T_MD
 
ns_t_md


	)

133 
	#T_MF
 
ns_t_mf


	)

134 
	#T_CNAME
 
ns_t_˙ame


	)

135 
	#T_SOA
 
ns_t_sﬂ


	)

136 
	#T_MB
 
ns_t_mb


	)

137 
	#T_MG
 
ns_t_mg


	)

138 
	#T_MR
 
ns_t_mr


	)

139 
	#T_NULL
 
ns_t_nuŒ


	)

140 
	#T_WKS
 
ns_t_wks


	)

141 
	#T_PTR
 
ns_t_±r


	)

142 
	#T_HINFO
 
ns_t_höfo


	)

143 
	#T_MINFO
 
ns_t_möfo


	)

144 
	#T_MX
 
ns_t_mx


	)

145 
	#T_TXT
 
ns_t_txt


	)

146 
	#T_RP
 
ns_t_Ω


	)

147 
	#T_AFSDB
 
ns_t_afsdb


	)

148 
	#T_X25
 
ns_t_x25


	)

149 
	#T_ISDN
 
ns_t_isdn


	)

150 
	#T_RT
 
ns_t_π


	)

151 
	#T_NSAP
 
ns_t_nßp


	)

152 
	#T_NSAP_PTR
 
ns_t_nßp_±r


	)

153 
	#T_SIG
 
ns_t_sig


	)

154 
	#T_KEY
 
ns_t_key


	)

155 
	#T_PX
 
ns_t_px


	)

156 
	#T_GPOS
 
ns_t_gpos


	)

157 
	#T_AAAA
 
ns_t_ØØ


	)

158 
	#T_LOC
 
ns_t_loc


	)

159 
	#T_NXT
 
ns_t_nxt


	)

160 
	#T_EID
 
ns_t_eid


	)

161 
	#T_NIMLOC
 
ns_t_nimloc


	)

162 
	#T_SRV
 
ns_t_§v


	)

163 
	#T_ATMA
 
ns_t_©ma


	)

164 
	#T_NAPTR
 
ns_t_«±r


	)

165 
	#T_A6
 
ns_t_a6


	)

166 
	#T_DNAME
 
ns_t_d«me


	)

167 
	#T_TSIG
 
ns_t_tsig


	)

168 
	#T_IXFR
 
ns_t_ix‰


	)

169 
	#T_AXFR
 
ns_t_ax‰


	)

170 
	#T_MAILB
 
ns_t_maûb


	)

171 
	#T_MAILA
 
ns_t_maûa


	)

172 
	#T_ANY
 
ns_t_™y


	)

174 
	#C_IN
 
ns_c_ö


	)

175 
	#C_CHAOS
 
ns_c_chaos


	)

176 
	#C_HS
 
ns_c_hs


	)

178 
	#C_NONE
 
ns_c_n⁄e


	)

179 
	#C_ANY
 
ns_c_™y


	)

181 
	#GETSHORT
 
NS_GET16


	)

182 
	#GETLONG
 
NS_GET32


	)

183 
	#PUTSHORT
 
NS_PUT16


	)

184 
	#PUTLONG
 
NS_PUT32


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/inttypes.h

23 #i‚de‡
_INTTYPES_H


24 
	#_INTTYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<°döt.h
>

31 #i‚de‡
____gwch¨_t_deföed


32 #ifde‡
__˝lu•lus


33 
	#__gwch¨_t
 
wch¨_t


	)

34 #ñi‡
deföed
 
__WCHAR_TYPE__


35 
__WCHAR_TYPE__
 
	t__gwch¨_t
;

37 
	#__√ed_wch¨_t


	)

38 
	~<°ddef.h
>

39 
wch¨_t
 
	t__gwch¨_t
;

41 
	#____gwch¨_t_deföed
 1

	)

47 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_FORMAT_MACROS


49 #i‡
__WORDSIZE
 == 64

50 
	#__PRI64_PREFIX
 "l"

	)

51 
	#__PRIPTR_PREFIX
 "l"

	)

53 
	#__PRI64_PREFIX
 "Œ"

	)

54 
	#__PRIPTR_PREFIX


	)

60 
	#PRId8
 "d"

	)

61 
	#PRId16
 "d"

	)

62 
	#PRId32
 "d"

	)

63 
	#PRId64
 
__PRI64_PREFIX
 "d"

	)

65 
	#PRIdLEAST8
 "d"

	)

66 
	#PRIdLEAST16
 "d"

	)

67 
	#PRIdLEAST32
 "d"

	)

68 
	#PRIdLEAST64
 
__PRI64_PREFIX
 "d"

	)

70 
	#PRIdFAST8
 "d"

	)

71 
	#PRIdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

72 
	#PRIdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

73 
	#PRIdFAST64
 
__PRI64_PREFIX
 "d"

	)

76 
	#PRIi8
 "i"

	)

77 
	#PRIi16
 "i"

	)

78 
	#PRIi32
 "i"

	)

79 
	#PRIi64
 
__PRI64_PREFIX
 "i"

	)

81 
	#PRIiLEAST8
 "i"

	)

82 
	#PRIiLEAST16
 "i"

	)

83 
	#PRIiLEAST32
 "i"

	)

84 
	#PRIiLEAST64
 
__PRI64_PREFIX
 "i"

	)

86 
	#PRIiFAST8
 "i"

	)

87 
	#PRIiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

88 
	#PRIiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

89 
	#PRIiFAST64
 
__PRI64_PREFIX
 "i"

	)

92 
	#PRIo8
 "o"

	)

93 
	#PRIo16
 "o"

	)

94 
	#PRIo32
 "o"

	)

95 
	#PRIo64
 
__PRI64_PREFIX
 "o"

	)

97 
	#PRIoLEAST8
 "o"

	)

98 
	#PRIoLEAST16
 "o"

	)

99 
	#PRIoLEAST32
 "o"

	)

100 
	#PRIoLEAST64
 
__PRI64_PREFIX
 "o"

	)

102 
	#PRIoFAST8
 "o"

	)

103 
	#PRIoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

104 
	#PRIoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

105 
	#PRIoFAST64
 
__PRI64_PREFIX
 "o"

	)

108 
	#PRIu8
 "u"

	)

109 
	#PRIu16
 "u"

	)

110 
	#PRIu32
 "u"

	)

111 
	#PRIu64
 
__PRI64_PREFIX
 "u"

	)

113 
	#PRIuLEAST8
 "u"

	)

114 
	#PRIuLEAST16
 "u"

	)

115 
	#PRIuLEAST32
 "u"

	)

116 
	#PRIuLEAST64
 
__PRI64_PREFIX
 "u"

	)

118 
	#PRIuFAST8
 "u"

	)

119 
	#PRIuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

120 
	#PRIuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

121 
	#PRIuFAST64
 
__PRI64_PREFIX
 "u"

	)

124 
	#PRIx8
 "x"

	)

125 
	#PRIx16
 "x"

	)

126 
	#PRIx32
 "x"

	)

127 
	#PRIx64
 
__PRI64_PREFIX
 "x"

	)

129 
	#PRIxLEAST8
 "x"

	)

130 
	#PRIxLEAST16
 "x"

	)

131 
	#PRIxLEAST32
 "x"

	)

132 
	#PRIxLEAST64
 
__PRI64_PREFIX
 "x"

	)

134 
	#PRIxFAST8
 "x"

	)

135 
	#PRIxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

136 
	#PRIxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

137 
	#PRIxFAST64
 
__PRI64_PREFIX
 "x"

	)

140 
	#PRIX8
 "X"

	)

141 
	#PRIX16
 "X"

	)

142 
	#PRIX32
 "X"

	)

143 
	#PRIX64
 
__PRI64_PREFIX
 "X"

	)

145 
	#PRIXLEAST8
 "X"

	)

146 
	#PRIXLEAST16
 "X"

	)

147 
	#PRIXLEAST32
 "X"

	)

148 
	#PRIXLEAST64
 
__PRI64_PREFIX
 "X"

	)

150 
	#PRIXFAST8
 "X"

	)

151 
	#PRIXFAST16
 
__PRIPTR_PREFIX
 "X"

	)

152 
	#PRIXFAST32
 
__PRIPTR_PREFIX
 "X"

	)

153 
	#PRIXFAST64
 
__PRI64_PREFIX
 "X"

	)

157 
	#PRIdMAX
 
__PRI64_PREFIX
 "d"

	)

158 
	#PRIiMAX
 
__PRI64_PREFIX
 "i"

	)

159 
	#PRIoMAX
 
__PRI64_PREFIX
 "o"

	)

160 
	#PRIuMAX
 
__PRI64_PREFIX
 "u"

	)

161 
	#PRIxMAX
 
__PRI64_PREFIX
 "x"

	)

162 
	#PRIXMAX
 
__PRI64_PREFIX
 "X"

	)

166 
	#PRIdPTR
 
__PRIPTR_PREFIX
 "d"

	)

167 
	#PRIiPTR
 
__PRIPTR_PREFIX
 "i"

	)

168 
	#PRIoPTR
 
__PRIPTR_PREFIX
 "o"

	)

169 
	#PRIuPTR
 
__PRIPTR_PREFIX
 "u"

	)

170 
	#PRIxPTR
 
__PRIPTR_PREFIX
 "x"

	)

171 
	#PRIXPTR
 
__PRIPTR_PREFIX
 "X"

	)

177 
	#SCNd8
 "hhd"

	)

178 
	#SCNd16
 "hd"

	)

179 
	#SCNd32
 "d"

	)

180 
	#SCNd64
 
__PRI64_PREFIX
 "d"

	)

182 
	#SCNdLEAST8
 "hhd"

	)

183 
	#SCNdLEAST16
 "hd"

	)

184 
	#SCNdLEAST32
 "d"

	)

185 
	#SCNdLEAST64
 
__PRI64_PREFIX
 "d"

	)

187 
	#SCNdFAST8
 "hhd"

	)

188 
	#SCNdFAST16
 
__PRIPTR_PREFIX
 "d"

	)

189 
	#SCNdFAST32
 
__PRIPTR_PREFIX
 "d"

	)

190 
	#SCNdFAST64
 
__PRI64_PREFIX
 "d"

	)

193 
	#SCNi8
 "hhi"

	)

194 
	#SCNi16
 "hi"

	)

195 
	#SCNi32
 "i"

	)

196 
	#SCNi64
 
__PRI64_PREFIX
 "i"

	)

198 
	#SCNiLEAST8
 "hhi"

	)

199 
	#SCNiLEAST16
 "hi"

	)

200 
	#SCNiLEAST32
 "i"

	)

201 
	#SCNiLEAST64
 
__PRI64_PREFIX
 "i"

	)

203 
	#SCNiFAST8
 "hhi"

	)

204 
	#SCNiFAST16
 
__PRIPTR_PREFIX
 "i"

	)

205 
	#SCNiFAST32
 
__PRIPTR_PREFIX
 "i"

	)

206 
	#SCNiFAST64
 
__PRI64_PREFIX
 "i"

	)

209 
	#SCNu8
 "hhu"

	)

210 
	#SCNu16
 "hu"

	)

211 
	#SCNu32
 "u"

	)

212 
	#SCNu64
 
__PRI64_PREFIX
 "u"

	)

214 
	#SCNuLEAST8
 "hhu"

	)

215 
	#SCNuLEAST16
 "hu"

	)

216 
	#SCNuLEAST32
 "u"

	)

217 
	#SCNuLEAST64
 
__PRI64_PREFIX
 "u"

	)

219 
	#SCNuFAST8
 "hhu"

	)

220 
	#SCNuFAST16
 
__PRIPTR_PREFIX
 "u"

	)

221 
	#SCNuFAST32
 
__PRIPTR_PREFIX
 "u"

	)

222 
	#SCNuFAST64
 
__PRI64_PREFIX
 "u"

	)

225 
	#SCNo8
 "hho"

	)

226 
	#SCNo16
 "ho"

	)

227 
	#SCNo32
 "o"

	)

228 
	#SCNo64
 
__PRI64_PREFIX
 "o"

	)

230 
	#SCNoLEAST8
 "hho"

	)

231 
	#SCNoLEAST16
 "ho"

	)

232 
	#SCNoLEAST32
 "o"

	)

233 
	#SCNoLEAST64
 
__PRI64_PREFIX
 "o"

	)

235 
	#SCNoFAST8
 "hho"

	)

236 
	#SCNoFAST16
 
__PRIPTR_PREFIX
 "o"

	)

237 
	#SCNoFAST32
 
__PRIPTR_PREFIX
 "o"

	)

238 
	#SCNoFAST64
 
__PRI64_PREFIX
 "o"

	)

241 
	#SCNx8
 "hhx"

	)

242 
	#SCNx16
 "hx"

	)

243 
	#SCNx32
 "x"

	)

244 
	#SCNx64
 
__PRI64_PREFIX
 "x"

	)

246 
	#SCNxLEAST8
 "hhx"

	)

247 
	#SCNxLEAST16
 "hx"

	)

248 
	#SCNxLEAST32
 "x"

	)

249 
	#SCNxLEAST64
 
__PRI64_PREFIX
 "x"

	)

251 
	#SCNxFAST8
 "hhx"

	)

252 
	#SCNxFAST16
 
__PRIPTR_PREFIX
 "x"

	)

253 
	#SCNxFAST32
 
__PRIPTR_PREFIX
 "x"

	)

254 
	#SCNxFAST64
 
__PRI64_PREFIX
 "x"

	)

258 
	#SCNdMAX
 
__PRI64_PREFIX
 "d"

	)

259 
	#SCNiMAX
 
__PRI64_PREFIX
 "i"

	)

260 
	#SCNoMAX
 
__PRI64_PREFIX
 "o"

	)

261 
	#SCNuMAX
 
__PRI64_PREFIX
 "u"

	)

262 
	#SCNxMAX
 
__PRI64_PREFIX
 "x"

	)

265 
	#SCNdPTR
 
__PRIPTR_PREFIX
 "d"

	)

266 
	#SCNiPTR
 
__PRIPTR_PREFIX
 "i"

	)

267 
	#SCNoPTR
 
__PRIPTR_PREFIX
 "o"

	)

268 
	#SCNuPTR
 
__PRIPTR_PREFIX
 "u"

	)

269 
	#SCNxPTR
 
__PRIPTR_PREFIX
 "x"

	)

274 
	g__BEGIN_DECLS


276 #i‡
__WORDSIZE
 == 64

281 
	mquŸ
;

282 
	mªm
;

283 } 
	timaxdiv_t
;

290 
	mquŸ
;

291 
	mªm
;

292 } 
	timaxdiv_t
;

298 
ötmax_t
 
	$imaxabs
 (
ötmax_t
 
__n
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

301 
imaxdiv_t
 
	$imaxdiv
 (
ötmax_t
 
__numî
, i¡max_à
__díom
)

302 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

305 
ötmax_t
 
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

306 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

309 
uötmax_t
 
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

310 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

313 
ötmax_t
 
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

314 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

315 
__THROW
;

318 
uötmax_t
 
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
__≈å
,

319 
__gwch¨_t
 ** 
__ª°ri˘
 
__íd±r
, 
__ba£
)

320 
__THROW
;

322 #ifde‡
__USE_EXTERN_INLINES


324 #i‡
__WORDSIZE
 == 64

326 
	$__°πﬁ_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

327 **
__ª°ri˘
 
__íd±r
,

328 
__ba£
, 
__group
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

331 
__exã∫_ölöe
 
ötmax_t


332 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

333 
ba£
))

335  
	`__°πﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

336 
	}
}

338 
	$__°πoul_öã∫Æ
 (
__c⁄°
 *

339 
__ª°ri˘
 
__≈å
,

340 ** 
__ª°ri˘
 
__íd±r
,

341 
__ba£
, 
__group
)

342 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

344 
__exã∫_ölöe
 
uötmax_t


345 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

346 
ba£
))

348  
	`__°πoul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

349 
	}
}

351 
	$__wc°ﬁ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 * 
__ª°ri˘
 
__≈å
,

352 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

353 
__ba£
, 
__group
)

354 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

356 
__exã∫_ölöe
 
ötmax_t


357 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

358 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

360  
	`__wc°ﬁ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

361 
	}
}

363 
	$__wc°oul_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

364 
__ª°ri˘
 
__≈å
,

365 
__gwch¨_t
 **

366 
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
__group
)

368 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

370 
__exã∫_ölöe
 
uötmax_t


371 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

372 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

374  
	`__wc°oul_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

375 
	}
}

379 
__exãnsi⁄__


380 
	$__°πﬁl_öã∫Æ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

381 **
__ª°ri˘
 
__íd±r
,

382 
__ba£
, 
__group
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

385 
__exã∫_ölöe
 
ötmax_t


386 
	`__NTH
 (
	$°πoimax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

387 
ba£
))

389  
	`__°πﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

390 
	}
}

392 
__exãnsi⁄__


393 
	$__°πouŒ_öã∫Æ
 (
__c⁄°
 *

394 
__ª°ri˘
 
__≈å
,

396 
__ª°ri˘
 
__íd±r
,

397 
__ba£
,

398 
__group
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

401 
__exã∫_ölöe
 
uötmax_t


402 
	`__NTH
 (
	$°πoumax
 (
__c⁄°
 *
__ª°ri˘
 
≈å
, **__ª°ri˘ 
íd±r
,

403 
ba£
))

405  
	`__°πouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

406 
	}
}

408 
__exãnsi⁄__


409 
	$__wc°ﬁl_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

410 
__ª°ri˘
 
__≈å
,

411 
__gwch¨_t
 **
__ª°ri˘
 
__íd±r
,

412 
__ba£
, 
__group
)

413 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

415 
__exã∫_ölöe
 
ötmax_t


416 
	`__NTH
 (
	$wc°oimax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

417 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

419  
	`__wc°ﬁl_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

420 
	}
}

423 
__exãnsi⁄__


424 
	$__wc°ouŒ_öã∫Æ
 (
__c⁄°
 
__gwch¨_t
 *

425 
__ª°ri˘
 
__≈å
,

426 
__gwch¨_t
 **

427 
__ª°ri˘
 
__íd±r
,

428 
__ba£
,

429 
__group
)

430 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

432 
__exã∫_ölöe
 
uötmax_t


433 
	`__NTH
 (
	$wc°oumax
 (
__c⁄°
 
__gwch¨_t
 *
__ª°ri˘
 
≈å
,

434 
__gwch¨_t
 **
__ª°ri˘
 
íd±r
, 
ba£
))

436  
	`__wc°ouŒ_öã∫Æ
 (
≈å
, 
íd±r
, 
ba£
, 0);

437 
	}
}

442 
	g__END_DECLS


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/linux/if_ether.h

21 #i‚de‡
_LINUX_IF_ETHER_H


22 
	#_LINUX_IF_ETHER_H


	)

24 
	~<löux/ty≥s.h
>

31 
	#ETH_ALEN
 6

	)

32 
	#ETH_HLEN
 14

	)

33 
	#ETH_ZLEN
 60

	)

34 
	#ETH_DATA_LEN
 1500

	)

35 
	#ETH_FRAME_LEN
 1514

	)

36 
	#ETH_FCS_LEN
 4

	)

42 
	#ETH_P_LOOP
 0x0060

	)

43 
	#ETH_P_PUP
 0x0200

	)

44 
	#ETH_P_PUPAT
 0x0201

	)

45 
	#ETH_P_IP
 0x0800

	)

46 
	#ETH_P_X25
 0x0805

	)

47 
	#ETH_P_ARP
 0x0806

	)

48 
	#ETH_P_BPQ
 0x08FF

	)

49 
	#ETH_P_IEEEPUP
 0x0a00

	)

50 
	#ETH_P_IEEEPUPAT
 0x0a01

	)

51 
	#ETH_P_DEC
 0x6000

	)

52 
	#ETH_P_DNA_DL
 0x6001

	)

53 
	#ETH_P_DNA_RC
 0x6002

	)

54 
	#ETH_P_DNA_RT
 0x6003

	)

55 
	#ETH_P_LAT
 0x6004

	)

56 
	#ETH_P_DIAG
 0x6005

	)

57 
	#ETH_P_CUST
 0x6006

	)

58 
	#ETH_P_SCA
 0x6007

	)

59 
	#ETH_P_TEB
 0x6558

	)

60 
	#ETH_P_RARP
 0x8035

	)

61 
	#ETH_P_ATALK
 0x809B

	)

62 
	#ETH_P_AARP
 0x80F3

	)

63 
	#ETH_P_8021Q
 0x8100

	)

64 
	#ETH_P_IPX
 0x8137

	)

65 
	#ETH_P_IPV6
 0x86DD

	)

66 
	#ETH_P_PAUSE
 0x8808

	)

67 
	#ETH_P_SLOW
 0x8809

	)

68 
	#ETH_P_WCCP
 0x883E

	)

70 
	#ETH_P_PPP_DISC
 0x8863

	)

71 
	#ETH_P_PPP_SES
 0x8864

	)

72 
	#ETH_P_MPLS_UC
 0x8847

	)

73 
	#ETH_P_MPLS_MC
 0x8848

	)

74 
	#ETH_P_ATMMPOA
 0x884¯

	)

75 
	#ETH_P_LINK_CTL
 0x886¯

	)

76 
	#ETH_P_ATMFATE
 0x8884

	)

79 
	#ETH_P_PAE
 0x888E

	)

80 
	#ETH_P_AOE
 0x88A2

	)

81 
	#ETH_P_TIPC
 0x88CA

	)

82 
	#ETH_P_1588
 0x88F7

	)

83 
	#ETH_P_FCOE
 0x8906

	)

84 
	#ETH_P_FIP
 0x8914

	)

85 
	#ETH_P_EDSA
 0xDADA

	)

91 
	#ETH_P_802_3
 0x0001

	)

92 
	#ETH_P_AX25
 0x0002

	)

93 
	#ETH_P_ALL
 0x0003

	)

94 
	#ETH_P_802_2
 0x0004

	)

95 
	#ETH_P_SNAP
 0x0005

	)

96 
	#ETH_P_DDCMP
 0x0006

	)

97 
	#ETH_P_WAN_PPP
 0x0007

	)

98 
	#ETH_P_PPP_MP
 0x0008

	)

99 
	#ETH_P_LOCALTALK
 0x0009

	)

100 
	#ETH_P_CAN
 0x000C

	)

101 
	#ETH_P_PPPTALK
 0x0010

	)

102 
	#ETH_P_TR_802_2
 0x0011

	)

103 
	#ETH_P_MOBITEX
 0x0015

	)

104 
	#ETH_P_CONTROL
 0x0016

	)

105 
	#ETH_P_IRDA
 0x0017

	)

106 
	#ETH_P_ECONET
 0x0018

	)

107 
	#ETH_P_HDLC
 0x0019

	)

108 
	#ETH_P_ARCNET
 0x001A

	)

109 
	#ETH_P_DSA
 0x001B

	)

110 
	#ETH_P_TRAILER
 0x001C

	)

111 
	#ETH_P_PHONET
 0x00F5

	)

112 
	#ETH_P_IEEE802154
 0x00F6

	)

113 
	#ETH_P_CAIF
 0x00F7

	)

119 
	sëhhdr
 {

120 
	mh_de°
[
ETH_ALEN
];

121 
	mh_sour˚
[
ETH_ALEN
];

122 
__be16
 
	mh_¥Ÿo
;

123 } 
__©åibuã__
((
∑cked
));

	@/usr/include/net/ethernet.h

22 #i‚de‡
__NET_ETHERNET_H


23 
	#__NET_ETHERNET_H
 1

	)

25 
	~<sys/cdefs.h
>

26 
	~<sys/ty≥s.h
>

27 
	~<löux/if_ëhî.h
>

29 
__BEGIN_DECLS


33 
	sëhî_addr


35 
u_öt8_t
 
	mëhî_addr_o˘ë
[
ETH_ALEN
];

36 } 
__©åibuã__
 ((
__∑cked__
));

39 
	sëhî_hódî


41 
u_öt8_t
 
	mëhî_dho°
[
ETH_ALEN
];

42 
u_öt8_t
 
	mëhî_sho°
[
ETH_ALEN
];

43 
u_öt16_t
 
	mëhî_ty≥
;

44 } 
__©åibuã__
 ((
__∑cked__
));

47 
	#ETHERTYPE_PUP
 0x0200

	)

48 
	#ETHERTYPE_SPRITE
 0x0500

	)

49 
	#ETHERTYPE_IP
 0x0800

	)

50 
	#ETHERTYPE_ARP
 0x0806

	)

51 
	#ETHERTYPE_REVARP
 0x8035

	)

52 
	#ETHERTYPE_AT
 0x809B

	)

53 
	#ETHERTYPE_AARP
 0x80F3

	)

54 
	#ETHERTYPE_VLAN
 0x8100

	)

55 
	#ETHERTYPE_IPX
 0x8137

	)

56 
	#ETHERTYPE_IPV6
 0x86dd

	)

57 
	#ETHERTYPE_LOOPBACK
 0x9000

	)

60 
	#ETHER_ADDR_LEN
 
ETH_ALEN


	)

61 
	#ETHER_TYPE_LEN
 2

	)

62 
	#ETHER_CRC_LEN
 4

	)

63 
	#ETHER_HDR_LEN
 
ETH_HLEN


	)

64 
	#ETHER_MIN_LEN
 (
ETH_ZLEN
 + 
ETHER_CRC_LEN
Ë

	)

65 
	#ETHER_MAX_LEN
 (
ETH_FRAME_LEN
 + 
ETHER_CRC_LEN
Ë

	)

68 
	#ETHER_IS_VALID_LEN
(
foo
) \

69 ((
foo
Ë>
ETHER_MIN_LEN
 && (fooË<
ETHER_MAX_LEN
)

	)

76 
	#ETHERTYPE_TRAIL
 0x1000

	)

77 
	#ETHERTYPE_NTRAILER
 16

	)

79 
	#ETHERMTU
 
ETH_DATA_LEN


	)

80 
	#ETHERMIN
 (
ETHER_MIN_LEN
 - 
ETHER_HDR_LEN
 - 
ETHER_CRC_LEN
)

	)

82 
	g__END_DECLS


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
580
31926
/media/sf_ddrive/progs/network/unpv13e/advio/daytimetcpcli.c
/media/sf_ddrive/progs/network/unpv13e/advio/daytimeudpcli3.c
/media/sf_ddrive/progs/network/unpv13e/advio/daytimeudpcli4.c
/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo.c
/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo1.c
/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo2.c
/media/sf_ddrive/progs/network/unpv13e/advio/dgclitimeo3.c
/media/sf_ddrive/progs/network/unpv13e/advio/dgechoaddr.c
/media/sf_ddrive/progs/network/unpv13e/advio/old/dgechoaddr.c
/media/sf_ddrive/progs/network/unpv13e/advio/old/recvfromflags.c
/media/sf_ddrive/progs/network/unpv13e/advio/old/test01.c
/media/sf_ddrive/progs/network/unpv13e/advio/recvfromflags.c
/media/sf_ddrive/progs/network/unpv13e/advio/sig_chld_waitpid.c
/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_kqueue04.c
/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_poll03.c
/media/sf_ddrive/progs/network/unpv13e/advio/str_cli_select02.c
/media/sf_ddrive/progs/network/unpv13e/advio/str_echo_stdio02.c
/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli02.c
/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli03.c
/media/sf_ddrive/progs/network/unpv13e/advio/tcpcli04.c
/media/sf_ddrive/progs/network/unpv13e/advio/tcpserv02.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpcli02.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpcli03.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpserv01.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpserv03.c
/media/sf_ddrive/progs/network/unpv13e/advio/udpserv04.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast1.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast2.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast3.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast4.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast5.c
/media/sf_ddrive/progs/network/unpv13e/bcast/dgclibcast6.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli02.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli03.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli04.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli05.c
/media/sf_ddrive/progs/network/unpv13e/bcast/udpcli06.c
/media/sf_ddrive/progs/network/unpv13e/debug/backlog.c
/media/sf_ddrive/progs/network/unpv13e/debug/qlen.c
/media/sf_ddrive/progs/network/unpv13e/debug/test01.c
/media/sf_ddrive/progs/network/unpv13e/debug/test02.c
/media/sf_ddrive/progs/network/unpv13e/debug/test03.c
/media/sf_ddrive/progs/network/unpv13e/debug/test04.c
/media/sf_ddrive/progs/network/unpv13e/debug/test05.c
/media/sf_ddrive/progs/network/unpv13e/debug/test06.c
/media/sf_ddrive/progs/network/unpv13e/debug/unpxti.h
/media/sf_ddrive/progs/network/unpv13e/icmpd/dgcli01.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/icmpd.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/icmpd.h
/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_conn.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_listen.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_v4.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/readable_v6.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/icmpd/unpicmpd.h
/media/sf_ddrive/progs/network/unpv13e/inetd/daytimetcpsrv2.c
/media/sf_ddrive/progs/network/unpv13e/inetd/daytimetcpsrv3.c
/media/sf_ddrive/progs/network/unpv13e/intro/byteorder.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli1.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli2.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcli3.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpcliv6.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv1.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv2.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrv3.c
/media/sf_ddrive/progs/network/unpv13e/intro/daytimetcpsrvv6.c
/media/sf_ddrive/progs/network/unpv13e/ioctl/lsif01.c
/media/sf_ddrive/progs/network/unpv13e/ioctl/lsif02.c
/media/sf_ddrive/progs/network/unpv13e/ioctl/prifinfo.c
/media/sf_ddrive/progs/network/unpv13e/ioctl/prmac.c
/media/sf_ddrive/progs/network/unpv13e/ioctl/test1.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/dgechoprintroute.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/sigchldwaitpid.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/sourceroute.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/sourceroute6.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/tcpserv01.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/ipopts/udpserv01.c
/media/sf_ddrive/progs/network/unpv13e/key/add.c
/media/sf_ddrive/progs/network/unpv13e/key/dump.c
/media/sf_ddrive/progs/network/unpv13e/key/name.c
/media/sf_ddrive/progs/network/unpv13e/key/printsadbmsg.c
/media/sf_ddrive/progs/network/unpv13e/key/register.c
/media/sf_ddrive/progs/network/unpv13e/key/unp.h
/media/sf_ddrive/progs/network/unpv13e/lib/addrinfo.h
/media/sf_ddrive/progs/network/unpv13e/lib/connect_nonb.c
/media/sf_ddrive/progs/network/unpv13e/lib/connect_timeo.c
/media/sf_ddrive/progs/network/unpv13e/lib/daemon_inetd.c
/media/sf_ddrive/progs/network/unpv13e/lib/daemon_init.c
/media/sf_ddrive/progs/network/unpv13e/lib/dg_cli.c
/media/sf_ddrive/progs/network/unpv13e/lib/dg_echo.c
/media/sf_ddrive/progs/network/unpv13e/lib/error.c
/media/sf_ddrive/progs/network/unpv13e/lib/family_to_level.c
/media/sf_ddrive/progs/network/unpv13e/lib/get_ifi_info.c
/media/sf_ddrive/progs/network/unpv13e/lib/gf_time.c
/media/sf_ddrive/progs/network/unpv13e/lib/host_serv.c
/media/sf_ddrive/progs/network/unpv13e/lib/hstrerror.c
/media/sf_ddrive/progs/network/unpv13e/lib/if_indextoname.c
/media/sf_ddrive/progs/network/unpv13e/lib/if_nameindex.c
/media/sf_ddrive/progs/network/unpv13e/lib/if_nametoindex.c
/media/sf_ddrive/progs/network/unpv13e/lib/in6addr_any.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_if.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_loop.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_get_ttl.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_join.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_leave.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_if.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_loop.c
/media/sf_ddrive/progs/network/unpv13e/lib/mcast_set_ttl.c
/media/sf_ddrive/progs/network/unpv13e/lib/my_addrs.c
/media/sf_ddrive/progs/network/unpv13e/lib/pselect.c
/media/sf_ddrive/progs/network/unpv13e/lib/read_fd.c
/media/sf_ddrive/progs/network/unpv13e/lib/readable_timeo.c
/media/sf_ddrive/progs/network/unpv13e/lib/readline.c
/media/sf_ddrive/progs/network/unpv13e/lib/readn.c
/media/sf_ddrive/progs/network/unpv13e/lib/rtt.c
/media/sf_ddrive/progs/network/unpv13e/lib/signal.c
/media/sf_ddrive/progs/network/unpv13e/lib/signal_intr.c
/media/sf_ddrive/progs/network/unpv13e/lib/snprintf.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_bind_wild.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_cmp_addr.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_cmp_port.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_get_port.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_ntop.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_ntop_host.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_addr.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_port.c
/media/sf_ddrive/progs/network/unpv13e/lib/sock_set_wild.c
/media/sf_ddrive/progs/network/unpv13e/lib/sockatmark.c
/media/sf_ddrive/progs/network/unpv13e/lib/sockfd_to_family.c
/media/sf_ddrive/progs/network/unpv13e/lib/str_cli.c
/media/sf_ddrive/progs/network/unpv13e/lib/str_echo.c
/media/sf_ddrive/progs/network/unpv13e/lib/tcp_connect.c
/media/sf_ddrive/progs/network/unpv13e/lib/tcp_listen.c
/media/sf_ddrive/progs/network/unpv13e/lib/tv_sub.c
/media/sf_ddrive/progs/network/unpv13e/lib/udp_client.c
/media/sf_ddrive/progs/network/unpv13e/lib/udp_connect.c
/media/sf_ddrive/progs/network/unpv13e/lib/udp_server.c
/media/sf_ddrive/progs/network/unpv13e/lib/unp.h
/media/sf_ddrive/progs/network/unpv13e/lib/unpifi.h
/media/sf_ddrive/progs/network/unpv13e/lib/unprtt.h
/media/sf_ddrive/progs/network/unpv13e/lib/unpthread.h
/media/sf_ddrive/progs/network/unpv13e/lib/wraplib.c
/media/sf_ddrive/progs/network/unpv13e/lib/wrappthread.c
/media/sf_ddrive/progs/network/unpv13e/lib/wrapsock.c
/media/sf_ddrive/progs/network/unpv13e/lib/wrapstdio.c
/media/sf_ddrive/progs/network/unpv13e/lib/wrapunix.c
/media/sf_ddrive/progs/network/unpv13e/lib/writable_timeo.c
/media/sf_ddrive/progs/network/unpv13e/lib/write_fd.c
/media/sf_ddrive/progs/network/unpv13e/lib/writen.c
/media/sf_ddrive/progs/network/unpv13e/libfree/addrinfo.h
/media/sf_ddrive/progs/network/unpv13e/libfree/getaddrinfo.c
/media/sf_ddrive/progs/network/unpv13e/libfree/getnameinfo.c
/media/sf_ddrive/progs/network/unpv13e/libfree/in_cksum.c
/media/sf_ddrive/progs/network/unpv13e/libfree/inet_aton.c
/media/sf_ddrive/progs/network/unpv13e/libfree/inet_ntop.c
/media/sf_ddrive/progs/network/unpv13e/libfree/inet_ntop_ipv4.c
/media/sf_ddrive/progs/network/unpv13e/libfree/inet_pton.c
/media/sf_ddrive/progs/network/unpv13e/libfree/inet_pton_ipv4.c
/media/sf_ddrive/progs/network/unpv13e/libfree/test_ascii2addr.c
/media/sf_ddrive/progs/network/unpv13e/libfree/test_getservbyname_r.c
/media/sf_ddrive/progs/network/unpv13e/libfree/test_inet_pton.c
/media/sf_ddrive/progs/network/unpv13e/libgai/addrinfo.h
/media/sf_ddrive/progs/network/unpv13e/libgai/freeaddrinfo.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_aistruct.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_clone.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_echeck.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_nsearch.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_port.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_serv.c
/media/sf_ddrive/progs/network/unpv13e/libgai/ga_unix.c
/media/sf_ddrive/progs/network/unpv13e/libgai/gai_hdr.h
/media/sf_ddrive/progs/network/unpv13e/libgai/gai_strerror.c
/media/sf_ddrive/progs/network/unpv13e/libgai/getaddrinfo.c
/media/sf_ddrive/progs/network/unpv13e/libgai/getnameinfo.c
/media/sf_ddrive/progs/network/unpv13e/libgai/gn_ipv46.c
/media/sf_ddrive/progs/network/unpv13e/libgai/old/ga_unixstruct.c
/media/sf_ddrive/progs/network/unpv13e/libgai/old/savecopy.c
/media/sf_ddrive/progs/network/unpv13e/libgai/test1.c
/media/sf_ddrive/progs/network/unpv13e/libgai/testga.c
/media/sf_ddrive/progs/network/unpv13e/libroute/get_rtaddrs.c
/media/sf_ddrive/progs/network/unpv13e/libroute/if_indextoname.c
/media/sf_ddrive/progs/network/unpv13e/libroute/if_nameindex.c
/media/sf_ddrive/progs/network/unpv13e/libroute/if_nametoindex.c
/media/sf_ddrive/progs/network/unpv13e/libroute/net_rt_dump.c
/media/sf_ddrive/progs/network/unpv13e/libroute/net_rt_iflist.c
/media/sf_ddrive/progs/network/unpv13e/libroute/sock_masktop.c
/media/sf_ddrive/progs/network/unpv13e/libroute/unproute.h
/media/sf_ddrive/progs/network/unpv13e/mcast/dgclibcast1.c
/media/sf_ddrive/progs/network/unpv13e/mcast/dgclimcast5.c
/media/sf_ddrive/progs/network/unpv13e/mcast/dgclimcast6.c
/media/sf_ddrive/progs/network/unpv13e/mcast/main.c
/media/sf_ddrive/progs/network/unpv13e/mcast/recv.c
/media/sf_ddrive/progs/network/unpv13e/mcast/send.c
/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli05.c
/media/sf_ddrive/progs/network/unpv13e/mcast/udpcli06.c
/media/sf_ddrive/progs/network/unpv13e/mcast/udpserv01.c
/media/sf_ddrive/progs/network/unpv13e/mysdr/loop.c
/media/sf_ddrive/progs/network/unpv13e/mysdr/main.c
/media/sf_ddrive/progs/network/unpv13e/mysdr/mysdr.h
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli1.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli2.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpcli3.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv1.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv2.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv3.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimetcpsrv4.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpcli1.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpcli2.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpsrv2.c
/media/sf_ddrive/progs/network/unpv13e/names/daytimeudpsrv3.c
/media/sf_ddrive/progs/network/unpv13e/names/hostent.c
/media/sf_ddrive/progs/network/unpv13e/names/hostent2.c
/media/sf_ddrive/progs/network/unpv13e/names/hostent3.c
/media/sf_ddrive/progs/network/unpv13e/names/myaddrs1.c
/media/sf_ddrive/progs/network/unpv13e/names/netent.c
/media/sf_ddrive/progs/network/unpv13e/names/prmyaddrs.c
/media/sf_ddrive/progs/network/unpv13e/names/prmyaddrs1.c
/media/sf_ddrive/progs/network/unpv13e/names/test1.c
/media/sf_ddrive/progs/network/unpv13e/names/test2.c
/media/sf_ddrive/progs/network/unpv13e/names/udp_server_reuseaddr.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/daytimetcpcli.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/home_page.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/start_connect.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/strclifork.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/strclinonb.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli02.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli03.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpcli04.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/tcpservselect03.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/web.c
/media/sf_ddrive/progs/network/unpv13e/nonblock/web.h
/media/sf_ddrive/progs/network/unpv13e/nonblock/write_get_cmd.c
/media/sf_ddrive/progs/network/unpv13e/oob/heartbeatcli.c
/media/sf_ddrive/progs/network/unpv13e/oob/heartbeatserv.c
/media/sf_ddrive/progs/network/unpv13e/oob/sigchldwaitpid.c
/media/sf_ddrive/progs/network/unpv13e/oob/strcliselect02.c
/media/sf_ddrive/progs/network/unpv13e/oob/strecho02.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpcli02.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv01.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv02.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv03.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv03p.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv04.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv05.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcprecv06.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend01.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend02.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend03.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend04.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend05.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpsend06.c
/media/sf_ddrive/progs/network/unpv13e/oob/tcpserv02.c
/media/sf_ddrive/progs/network/unpv13e/ping/bsdping.c
/media/sf_ddrive/progs/network/unpv13e/ping/init_v6.c
/media/sf_ddrive/progs/network/unpv13e/ping/main.c
/media/sf_ddrive/progs/network/unpv13e/ping/old/icmp6.h
/media/sf_ddrive/progs/network/unpv13e/ping/old/ip6.h
/media/sf_ddrive/progs/network/unpv13e/ping/ping.h
/media/sf_ddrive/progs/network/unpv13e/ping/ping_v4.c
/media/sf_ddrive/progs/network/unpv13e/ping/proc_v4.c
/media/sf_ddrive/progs/network/unpv13e/ping/proc_v6.c
/media/sf_ddrive/progs/network/unpv13e/ping/readloop.c
/media/sf_ddrive/progs/network/unpv13e/ping/send_v4.c
/media/sf_ddrive/progs/network/unpv13e/ping/send_v6.c
/media/sf_ddrive/progs/network/unpv13e/ping/sig_alrm.c
/media/sf_ddrive/progs/network/unpv13e/ping/tv_sub.c
/media/sf_ddrive/progs/network/unpv13e/route/checkudpsum.c
/media/sf_ddrive/progs/network/unpv13e/route/get_ifi_info.c
/media/sf_ddrive/progs/network/unpv13e/route/getrt.c
/media/sf_ddrive/progs/network/unpv13e/route/mynetstat.c
/media/sf_ddrive/progs/network/unpv13e/route/prifindex.c
/media/sf_ddrive/progs/network/unpv13e/route/prifinfo.c
/media/sf_ddrive/progs/network/unpv13e/route/prifname.c
/media/sf_ddrive/progs/network/unpv13e/route/prifnameindex.c
/media/sf_ddrive/progs/network/unpv13e/route/unproute.h
/media/sf_ddrive/progs/network/unpv13e/rtt/dg_cli.c
/media/sf_ddrive/progs/network/unpv13e/rtt/dg_echo.c
/media/sf_ddrive/progs/network/unpv13e/rtt/dg_send_recv.c
/media/sf_ddrive/progs/network/unpv13e/rtt/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/rtt/unprtt.h
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_addr_to_associd.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_bindargs.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_check_notify.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_displayevents.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_getnostrm.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_modify_hb.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_pdapircv.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_print_addrs.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli1.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcli_un.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcliecho.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_strcliecho2.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctp_wrapper.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient01.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient02.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpclient04.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv01.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv02.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv03.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv04.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv05.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv06.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv07.c
/media/sf_ddrive/progs/network/unpv13e/sctp/sctpserv_fork.c
/media/sf_ddrive/progs/network/unpv13e/sctp/unp.h
/media/sf_ddrive/progs/network/unpv13e/select/strcliselect01.c
/media/sf_ddrive/progs/network/unpv13e/select/strcliselect02.c
/media/sf_ddrive/progs/network/unpv13e/select/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/select/tcpcli02.c
/media/sf_ddrive/progs/network/unpv13e/select/tcpcli03.c
/media/sf_ddrive/progs/network/unpv13e/server/child.h
/media/sf_ddrive/progs/network/unpv13e/server/child02.c
/media/sf_ddrive/progs/network/unpv13e/server/child02l.c
/media/sf_ddrive/progs/network/unpv13e/server/child02m.c
/media/sf_ddrive/progs/network/unpv13e/server/child03.c
/media/sf_ddrive/progs/network/unpv13e/server/child03m.c
/media/sf_ddrive/progs/network/unpv13e/server/child04.c
/media/sf_ddrive/progs/network/unpv13e/server/child05.c
/media/sf_ddrive/progs/network/unpv13e/server/client.c
/media/sf_ddrive/progs/network/unpv13e/server/clientrst.c
/media/sf_ddrive/progs/network/unpv13e/server/lock_fcntl.c
/media/sf_ddrive/progs/network/unpv13e/server/lock_pthread.c
/media/sf_ddrive/progs/network/unpv13e/server/meter.c
/media/sf_ddrive/progs/network/unpv13e/server/pr_cpu_time.c
/media/sf_ddrive/progs/network/unpv13e/server/pthread07.c
/media/sf_ddrive/progs/network/unpv13e/server/pthread07.h
/media/sf_ddrive/progs/network/unpv13e/server/pthread08.c
/media/sf_ddrive/progs/network/unpv13e/server/pthread08.h
/media/sf_ddrive/progs/network/unpv13e/server/pthread09.c
/media/sf_ddrive/progs/network/unpv13e/server/pthread09.h
/media/sf_ddrive/progs/network/unpv13e/server/readline.c
/media/sf_ddrive/progs/network/unpv13e/server/readline_r.c
/media/sf_ddrive/progs/network/unpv13e/server/readline_r.h
/media/sf_ddrive/progs/network/unpv13e/server/serv00.c
/media/sf_ddrive/progs/network/unpv13e/server/serv01.c
/media/sf_ddrive/progs/network/unpv13e/server/serv02.c
/media/sf_ddrive/progs/network/unpv13e/server/serv02m.c
/media/sf_ddrive/progs/network/unpv13e/server/serv03.c
/media/sf_ddrive/progs/network/unpv13e/server/serv03m.c
/media/sf_ddrive/progs/network/unpv13e/server/serv04.c
/media/sf_ddrive/progs/network/unpv13e/server/serv05.c
/media/sf_ddrive/progs/network/unpv13e/server/serv06.c
/media/sf_ddrive/progs/network/unpv13e/server/serv07.c
/media/sf_ddrive/progs/network/unpv13e/server/serv08.c
/media/sf_ddrive/progs/network/unpv13e/server/serv09.c
/media/sf_ddrive/progs/network/unpv13e/server/sig_chld_waitpid.c
/media/sf_ddrive/progs/network/unpv13e/server/unpthread.h
/media/sf_ddrive/progs/network/unpv13e/server/web_child.c
/media/sf_ddrive/progs/network/unpv13e/server/web_child_r.c
/media/sf_ddrive/progs/network/unpv13e/sigio/dgcli01.c
/media/sf_ddrive/progs/network/unpv13e/sigio/dgecho01.c
/media/sf_ddrive/progs/network/unpv13e/sigio/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/sigio/udpserv01.c
/media/sf_ddrive/progs/network/unpv13e/sock/buffers.c
/media/sf_ddrive/progs/network/unpv13e/sock/cliopen.c
/media/sf_ddrive/progs/network/unpv13e/sock/crlf.c
/media/sf_ddrive/progs/network/unpv13e/sock/error.c
/media/sf_ddrive/progs/network/unpv13e/sock/loop.c
/media/sf_ddrive/progs/network/unpv13e/sock/looptcp.c
/media/sf_ddrive/progs/network/unpv13e/sock/loopudp.c
/media/sf_ddrive/progs/network/unpv13e/sock/main.c
/media/sf_ddrive/progs/network/unpv13e/sock/multicast.c
/media/sf_ddrive/progs/network/unpv13e/sock/ourhdr.h
/media/sf_ddrive/progs/network/unpv13e/sock/pattern.c
/media/sf_ddrive/progs/network/unpv13e/sock/servopen.c
/media/sf_ddrive/progs/network/unpv13e/sock/sinktcp.c
/media/sf_ddrive/progs/network/unpv13e/sock/sinkudp.c
/media/sf_ddrive/progs/network/unpv13e/sock/sleepus.c
/media/sf_ddrive/progs/network/unpv13e/sock/sock.h
/media/sf_ddrive/progs/network/unpv13e/sock/sockopts.c
/media/sf_ddrive/progs/network/unpv13e/sock/sourceroute.c
/media/sf_ddrive/progs/network/unpv13e/sock/sourcesink.c
/media/sf_ddrive/progs/network/unpv13e/sock/sourcetcp.c
/media/sf_ddrive/progs/network/unpv13e/sock/sourceudp.c
/media/sf_ddrive/progs/network/unpv13e/sock/strerror.c
/media/sf_ddrive/progs/network/unpv13e/sock/tellwait.c
/media/sf_ddrive/progs/network/unpv13e/sock/write.c
/media/sf_ddrive/progs/network/unpv13e/sock/writen.c
/media/sf_ddrive/progs/network/unpv13e/sockopt/checkopts.c
/media/sf_ddrive/progs/network/unpv13e/sockopt/prdefaults.c
/media/sf_ddrive/progs/network/unpv13e/sockopt/rcvbuf.c
/media/sf_ddrive/progs/network/unpv13e/sockopt/rcvbufset.c
/media/sf_ddrive/progs/network/unpv13e/sockopt/sockopt.c
/media/sf_ddrive/progs/network/unpv13e/sparc64-unknown-freebsd5.1/config.h
/media/sf_ddrive/progs/network/unpv13e/ssntp/main.c
/media/sf_ddrive/progs/network/unpv13e/ssntp/ntp.h
/media/sf_ddrive/progs/network/unpv13e/ssntp/sntp.h
/media/sf_ddrive/progs/network/unpv13e/ssntp/sntp_proc.c
/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/client.c
/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/net_stream.c
/media/sf_ddrive/progs/network/unpv13e/streams/stream_dg/server.c
/media/sf_ddrive/progs/network/unpv13e/streams/strlist_sock.c
/media/sf_ddrive/progs/network/unpv13e/streams/strlist_xti.c
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_bind.c
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_close.c
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_connect.c
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_daytime.c
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_daytime.h
/media/sf_ddrive/progs/network/unpv13e/streams/tpi_read.c
/media/sf_ddrive/progs/network/unpv13e/streams/unpxti.h
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sigchldwait.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sigchldwaitpid.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli08.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli09.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_cli11.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_echo08.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/str_echo09.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/sum.h
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli04.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli05.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli06.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli07.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli08.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli09.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli10.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpcli11.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv01.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv02.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv03.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv04.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv08.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpserv09.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpservpoll01.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tcpservselect01.c
/media/sf_ddrive/progs/network/unpv13e/tcpcliserv/tsigpipe.c
/media/sf_ddrive/progs/network/unpv13e/test/accept_eintr.c
/media/sf_ddrive/progs/network/unpv13e/test/funcs.c
/media/sf_ddrive/progs/network/unpv13e/test/readline.h
/media/sf_ddrive/progs/network/unpv13e/test/readline1.c
/media/sf_ddrive/progs/network/unpv13e/test/readline2.c
/media/sf_ddrive/progs/network/unpv13e/test/readline3.c
/media/sf_ddrive/progs/network/unpv13e/test/test.h
/media/sf_ddrive/progs/network/unpv13e/test/test1.c
/media/sf_ddrive/progs/network/unpv13e/test/test2.c
/media/sf_ddrive/progs/network/unpv13e/test/tisfdtype.c
/media/sf_ddrive/progs/network/unpv13e/test/treadline1.c
/media/sf_ddrive/progs/network/unpv13e/test/treadline2.c
/media/sf_ddrive/progs/network/unpv13e/test/treadline3.c
/media/sf_ddrive/progs/network/unpv13e/test/tshutdown.c
/media/sf_ddrive/progs/network/unpv13e/test/tsnprintf.c
/media/sf_ddrive/progs/network/unpv13e/threads/example01.c
/media/sf_ddrive/progs/network/unpv13e/threads/example02.c
/media/sf_ddrive/progs/network/unpv13e/threads/example03.c
/media/sf_ddrive/progs/network/unpv13e/threads/readline.c
/media/sf_ddrive/progs/network/unpv13e/threads/strclithread.c
/media/sf_ddrive/progs/network/unpv13e/threads/strclithread2.c
/media/sf_ddrive/progs/network/unpv13e/threads/tcpcli01.c
/media/sf_ddrive/progs/network/unpv13e/threads/tcpcli02.c
/media/sf_ddrive/progs/network/unpv13e/threads/tcpserv01.c
/media/sf_ddrive/progs/network/unpv13e/threads/tcpserv02.c
/media/sf_ddrive/progs/network/unpv13e/threads/test01.c
/media/sf_ddrive/progs/network/unpv13e/threads/test02.c
/media/sf_ddrive/progs/network/unpv13e/threads/test03.c
/media/sf_ddrive/progs/network/unpv13e/threads/test04.c
/media/sf_ddrive/progs/network/unpv13e/threads/test05.c
/media/sf_ddrive/progs/network/unpv13e/threads/unpthread.h
/media/sf_ddrive/progs/network/unpv13e/threads/web01.c
/media/sf_ddrive/progs/network/unpv13e/threads/web02.c
/media/sf_ddrive/progs/network/unpv13e/threads/web03.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/icmpcode_v4.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/icmpcode_v6.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/main.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/recv_v4.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/recv_v6.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/sig_alrm.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/trace.h
/media/sf_ddrive/progs/network/unpv13e/traceroute/traceloop.c
/media/sf_ddrive/progs/network/unpv13e/traceroute/tv_sub.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/cleanup.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/main.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/pcap.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/senddnsquery-libnet.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/senddnsquery-raw.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpcksum.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpcksum.h
/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpread.c
/media/sf_ddrive/progs/network/unpv13e/udpcksum/udpwrite.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliaddr.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgclibig.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliconnect.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliinetaddr.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliloop1.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgcliloop3.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgecholoop1.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/dgecholoop2.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/sigchldwaitpid.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli01.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli02.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli03.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli04.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli05.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli06.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli08.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli09.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpcli10.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv01.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv06.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpserv07.c
/media/sf_ddrive/progs/network/unpv13e/udpcliserv/udpservselect01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/daytimetcpcli.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/daytimetcpsrv2.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/mycat.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/myopen.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/openfile.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/readcred.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/sigchldwaitpid.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/strecho.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/testfcred.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/tfcred01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixbind.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixdgcli01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixdgserv01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrcli01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrserv01.c
/media/sf_ddrive/progs/network/unpv13e/unixdomain/unixstrserv02.c
/usr/include/arpa/inet.h
/usr/include/arpa/nameser.h
/usr/include/ctype.h
/usr/include/err.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/limits.h
/usr/include/net/if.h
/usr/include/net/if_arp.h
/usr/include/net/route.h
/usr/include/netdb.h
/usr/include/netinet/icmp6.h
/usr/include/netinet/if_ether.h
/usr/include/netinet/in.h
/usr/include/netinet/in_systm.h
/usr/include/netinet/ip.h
/usr/include/netinet/ip6.h
/usr/include/netinet/ip_icmp.h
/usr/include/netinet/tcp.h
/usr/include/netinet/udp.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/resolv.h
/usr/include/setjmp.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/strings.h
/usr/include/stropts.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/arpa/nameser_compat.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/inttypes.h
/usr/include/libio.h
/usr/include/linux/if_ether.h
/usr/include/net/ethernet.h
/usr/include/rpc/netdb.h
/usr/include/sched.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/linux/types.h
/usr/include/gconv.h
/usr/include/linux/posix_types.h
/usr/include/wchar.h
/usr/include/linux/stddef.h
/usr/include/wctype.h
